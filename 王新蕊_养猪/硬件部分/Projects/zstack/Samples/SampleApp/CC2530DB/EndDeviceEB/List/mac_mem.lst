###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         15/Dec/2019  14:13:26 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Components\mac\low_level\srf04\single_chip\mac_ #
#                          mem.c                                              #
#    Command line       =  -f C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º #
#                          ˛≤ø∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\Tools\CC2530DB\f8wEndev.cfg (-DCPU32MHZ    #
#                          -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3         #
#                          -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f          #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO     #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 C:\Users\25814\Desktop\2020 #
#                          ±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø∑÷\Components\mac\low_level #
#                          \srf04\single_chip\mac_mem.c -D NWK_AUTO_POLL -D   #
#                          ZAPP_P1 -D MT_TASK -D MT_SYS_FUNC -D MT_ZDO_FUNC   #
#                          -D LCD_SUPPORTED=DEBUG -lC                         #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\EndD #
#                          eviceEB\List\ -lA C:\Users\25814\Desktop\2020±œ…Ë\ #
#                          Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø∑÷\Projects\zstack\Samples\Sampl #
#                          eApp\CC2530DB\EndDeviceEB\List\ --diag_suppress    #
#                          Pe001,Pa010 -o C:\Users\25814\Desktop\2020±œ…Ë\Õı– #
#                          ¬»Ô_—¯÷Ì\”≤º˛≤ø∑÷\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\EndDeviceEB\Obj\ -e --no_code_motion    #
#                          --debug --core=plain --dptr=16,1                   #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º #
#                          ˛≤ø∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\  #
#                          -I C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º #
#                          ˛≤ø∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\Source\ -I C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬» #
#                          Ô_—¯÷Ì\”≤º˛≤ø∑÷\Projects\zstack\Samples\SampleApp\ #
#                          CC2530DB\..\..\..\ZMain\TI2530DB\ -I               #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\hal\include\ -I              #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\hal\target\CC2530EB\ -I      #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\mac\include\ -I              #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\mac\high_level\ -I           #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\mac\low_level\srf04\ -I      #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\mac\low_level\srf04\single_c #
#                          hip\ -I C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷ #
#                          Ì\”≤º˛≤ø∑÷\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\Components\mt\ -I               #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\osal\include\ -I             #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\services\saddr\ -I           #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\services\sdata\ -I           #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\af\ -I                 #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\nwk\ -I                #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\sapi\ -I               #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\sec\ -I                #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\sys\ -I                #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\zdo\ -I                #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\zmac\ -I                     #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\zmac\f8w\ -Ohz               #
#    List file          =  C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\EndD #
#                          eviceEB\List\mac_mem.lst                           #
#    Object file        =  C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\EndD #
#                          eviceEB\Obj\mac_mem.r51                            #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø∑÷\Components\mac\low_level\srf04\single_chip\mac_mem.c
      1          /**************************************************************************************************
      2            Filename:       mac_mem.c
      3            Revised:        $Date: 2009-08-12 14:34:18 -0700 (Wed, 12 Aug 2009) $
      4            Revision:       $Revision: 20549 $
      5          
      6            Description:    Describe the purpose and contents of the file.
      7          
      8          
      9            Copyright 2006-2009 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED ìAS ISî WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, 
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE, 
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com. 
     38          **************************************************************************************************/
     39          
     40          /* ------------------------------------------------------------------------------------------------
     41           *                                           Includes
     42           * ------------------------------------------------------------------------------------------------
     43           */
     44          
     45          /* hal */
     46          #include "hal_types.h"
     47          
     48          /* low-level specific */
     49          #include "mac_mem.h"
     50          
     51          /* target specific */
     52          #include "hal_mcu.h"

   \                                 In  segment SFR_AN, at 0xd9
   \   unsigned char volatile __sfr RFD
   \                     RFD:
   \   000000                DS 1
     53          
     54          /* debug */
     55          #include "mac_assert.h"
     56          
     57          
     58          /**************************************************************************************************
     59           * @fn          macMemReadRamByte
     60           *
     61           * @brief       Read a byte from RAM.
     62           *
     63           * @param       pRam - pointer to byte RAM byte to read
     64           *
     65           * @return      byte read from RAM
     66           **************************************************************************************************
     67           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     68          uint8 macMemReadRamByte(macRam_t * pRam)
   \                     macMemReadRamByte:
     69          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     70            return(*pRam);
   \   000004   8A82         MOV     DPL,R2
   \   000006   8B83         MOV     DPH,R3
   \   000008   E0           MOVX    A,@DPTR
   \   000009   F9           MOV     R1,A
   \   00000A                REQUIRE ?Subroutine0
   \   00000A                ; // Fall through to label ?Subroutine0
     71          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
     72          
     73          
     74          /**************************************************************************************************
     75           * @fn          macMemWriteRam
     76           *
     77           * @brief       Write multiple bytes to RAM.
     78           *
     79           * @param       pRam  - pointer to RAM to be written to
     80           * @param       pData - pointer to data to write
     81           * @param       len   - number of bytes to write
     82           *
     83           * @return      none
     84           **************************************************************************************************
     85           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     86          MAC_INTERNAL_API void macMemWriteRam(macRam_t * pRam, uint8 * pData, uint8 len)
   \                     macMemWriteRam:
     87          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004   8019         SJMP    ??macMemWriteRam_0
     88            while (len)
     89            {
     90              len--;
   \                     ??macMemWriteRam_1:
   \   000006   19           DEC     R1
     91              *pRam = *pData;
   \   000007   8C82         MOV     DPL,R4
   \   000009   8D83         MOV     DPH,R5
   \   00000B   E0           MOVX    A,@DPTR
   \   00000C   8A82         MOV     DPL,R2
   \   00000E   8B83         MOV     DPH,R3
   \   000010   F0           MOVX    @DPTR,A
     92              pRam++;
   \   000011   A3           INC     DPTR
   \   000012   AA82         MOV     R2,DPL
   \   000014   AB83         MOV     R3,DPH
     93              pData++;
   \   000016   8C82         MOV     DPL,R4
   \   000018   8D83         MOV     DPH,R5
   \   00001A   A3           INC     DPTR
   \   00001B   AC82         MOV     R4,DPL
   \   00001D   AD83         MOV     R5,DPH
     94            }
   \                     ??macMemWriteRam_0:
   \   00001F   E9           MOV     A,R1
   \   000020   70E4         JNZ     ??macMemWriteRam_1
     95          }
   \   000022   80..         SJMP    ?Subroutine0
     96          
     97          
     98          /**************************************************************************************************
     99           * @fn          macMemReadRam
    100           *
    101           * @brief       Read multiple bytes from RAM.
    102           *
    103           * @param       pRam  - pointer to RAM to be read from
    104           * @param       pData - pointer to location to store read data
    105           * @param       len   - number of bytes to read
    106           *
    107           * @return      none
    108           **************************************************************************************************
    109           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    110          MAC_INTERNAL_API void macMemReadRam(macRam_t * pRam, uint8 * pData, uint8 len)
   \                     macMemReadRam:
    111          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004   801D         SJMP    ??macMemReadRam_0
    112            while (len)
    113            {
    114              len--;
   \                     ??macMemReadRam_1:
   \   000006   19           DEC     R1
    115              *pData = *pRam;
   \   000007   8A82         MOV     DPL,R2
   \   000009   8B83         MOV     DPH,R3
   \   00000B   E0           MOVX    A,@DPTR
   \   00000C   8C82         MOV     DPL,R4
   \   00000E   8D83         MOV     DPH,R5
   \   000010   F0           MOVX    @DPTR,A
    116              pRam++;
   \   000011   8A82         MOV     DPL,R2
   \   000013   8B83         MOV     DPH,R3
   \   000015   A3           INC     DPTR
   \   000016   AA82         MOV     R2,DPL
   \   000018   AB83         MOV     R3,DPH
    117              pData++;
   \   00001A   8C82         MOV     DPL,R4
   \   00001C   8D83         MOV     DPH,R5
   \   00001E   A3           INC     DPTR
   \   00001F   AC82         MOV     R4,DPL
   \   000021   AD83         MOV     R5,DPH
    118            }
   \                     ??macMemReadRam_0:
   \   000023   E9           MOV     A,R1
   \   000024   70E0         JNZ     ??macMemReadRam_1
    119          }
   \   000026   80..         SJMP    ?Subroutine0
    120          
    121          
    122          /**************************************************************************************************
    123           * @fn          macMemWriteTxFifo
    124           *
    125           * @brief       Write multiple bytes to the transmit FIFO.
    126           *
    127           * @param       pData - pointer to bytes to be written to TX FIFO
    128           * @param       len   - number of bytes to write
    129           *
    130           * @return      none
    131           **************************************************************************************************
    132           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    133          MAC_INTERNAL_API void macMemWriteTxFifo(uint8 * pData, uint8 len)
   \                     macMemWriteTxFifo:
    134          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   89..         MOV     ?V0 + 0,R1
    135            MAC_ASSERT(len != 0); /* pointless to write zero bytes */
   \   00000B   E9           MOV     A,R1
   \   00000C   7003         JNZ     ??macMemWriteTxFifo_0
   \   00000E                ; Setup parameters for call to function halAssertHandler
   \   00000E   12....       LCALL   ??halAssertHandler?relay
    136          
    137            do
    138            {
    139              RFD = *pData;
   \                     ??macMemWriteTxFifo_0:
   \   000011   8E82         MOV     DPL,R6
   \   000013   8F83         MOV     DPH,R7
   \   000015   E0           MOVX    A,@DPTR
   \   000016   F5D9         MOV     0xd9,A
    140              pData++;
   \   000018   A3           INC     DPTR
   \   000019   AE82         MOV     R6,DPL
   \   00001B   AF83         MOV     R7,DPH
    141              len--;
    142            }
    143            while (len);
   \   00001D   15..         DEC     ?V0 + 0
   \   00001F   E5..         MOV     A,?V0 + 0
   \   000021   70EE         JNZ     ??macMemWriteTxFifo_0
    144          }
   \   000023                REQUIRE ?Subroutine1
   \   000023                REQUIRE RFD
   \   000023                ; // Fall through to label ?Subroutine1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    145          
    146          
    147          /**************************************************************************************************
    148           * @fn          macMemReadRxFifo
    149           *
    150           * @brief       Read multiple bytes from receive FIFO.
    151           *
    152           * @param       pData - pointer to location to store read data
    153           * @param       len   - number of bytes to read from RX FIFO
    154           *
    155           * @return      none
    156           **************************************************************************************************
    157           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    158          MAC_INTERNAL_API void macMemReadRxFifo(uint8 * pData, uint8 len)
   \                     macMemReadRxFifo:
    159          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   89..         MOV     ?V0 + 0,R1
    160            MAC_ASSERT(len != 0); /* pointless to read zero bytes */
   \   00000B   E9           MOV     A,R1
   \   00000C   7003         JNZ     ??macMemReadRxFifo_0
   \   00000E                ; Setup parameters for call to function halAssertHandler
   \   00000E   12....       LCALL   ??halAssertHandler?relay
    161          
    162            do
    163            {
    164              *pData = RFD;
   \                     ??macMemReadRxFifo_0:
   \   000011   E5D9         MOV     A,0xd9
   \   000013   8E82         MOV     DPL,R6
   \   000015   8F83         MOV     DPH,R7
   \   000017   F0           MOVX    @DPTR,A
    165              pData++;
   \   000018   A3           INC     DPTR
   \   000019   AE82         MOV     R6,DPL
   \   00001B   AF83         MOV     R7,DPH
    166              len--;
    167            }
    168            while (len);
   \   00001D   15..         DEC     ?V0 + 0
   \   00001F   E5..         MOV     A,?V0 + 0
   \   000021   70EE         JNZ     ??macMemReadRxFifo_0
    169          }
   \   000023   80..         SJMP    ?Subroutine1
   \   000025                REQUIRE RFD

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??macMemReadRamByte?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    macMemReadRamByte

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??macMemWriteRam?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    macMemWriteRam

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??macMemReadRam?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    macMemReadRam

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??macMemWriteTxFifo?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    macMemWriteTxFifo

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??macMemReadRxFifo?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    macMemReadRxFifo
    170          
    171          
    172          /**************************************************************************************************
    173          */

   Maximum stack usage in bytes:

     Function              ISTACK PSTACK XSTACK
     --------              ------ ------ ------
     macMemReadRam             3      0      0
     macMemReadRamByte         2      0      0
     macMemReadRxFifo          1      0      9
       -> halAssertHandler     0      0     18
     macMemWriteRam            3      0      0
     macMemWriteTxFifo         0      0      9
       -> halAssertHandler     0      0     18


   Segment part sizes:

     Function/Label            Bytes
     --------------            -----
     RFD                          1
     macMemReadRamByte           10
     ?Subroutine0                 7
     macMemWriteRam              36
     macMemReadRam               40
     macMemWriteTxFifo           35
     ?Subroutine1                 5
     macMemReadRxFifo            37
     ??macMemReadRamByte?relay    6
     ??macMemWriteRam?relay       6
     ??macMemReadRam?relay        6
     ??macMemWriteTxFifo?relay    6
     ??macMemReadRxFifo?relay     6

 
 170 bytes in segment BANKED_CODE
  30 bytes in segment BANK_RELAYS
   1 byte  in segment SFR_AN
 
 200 bytes of CODE memory
   0 bytes of DATA memory (+ 1 byte shared)

Errors: none
Warnings: none
