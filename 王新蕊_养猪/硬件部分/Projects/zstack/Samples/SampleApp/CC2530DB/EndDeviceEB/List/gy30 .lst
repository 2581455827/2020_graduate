###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         15/Dec/2019  14:13:23 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\Source\gy30   #
#                          .c                                                 #
#    Command line       =  -f C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º #
#                          ˛≤ø∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\Tools\CC2530DB\f8wEndev.cfg (-DCPU32MHZ    #
#                          -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3         #
#                          -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f          #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO     #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "C:\Users\25814\Desktop\202 #
#                          0±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø∑÷\Projects\zstack\Samples #
#                          \SampleApp\Source\gy30 .c" -D NWK_AUTO_POLL -D     #
#                          ZAPP_P1 -D MT_TASK -D MT_SYS_FUNC -D MT_ZDO_FUNC   #
#                          -D LCD_SUPPORTED=DEBUG -lC                         #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\EndD #
#                          eviceEB\List\ -lA C:\Users\25814\Desktop\2020±œ…Ë\ #
#                          Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø∑÷\Projects\zstack\Samples\Sampl #
#                          eApp\CC2530DB\EndDeviceEB\List\ --diag_suppress    #
#                          Pe001,Pa010 -o C:\Users\25814\Desktop\2020±œ…Ë\Õı– #
#                          ¬»Ô_—¯÷Ì\”≤º˛≤ø∑÷\Projects\zstack\Samples\SampleAp #
#                          p\CC2530DB\EndDeviceEB\Obj\ -e --no_code_motion    #
#                          --debug --core=plain --dptr=16,1                   #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º #
#                          ˛≤ø∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\  #
#                          -I C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º #
#                          ˛≤ø∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\Source\ -I C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬» #
#                          Ô_—¯÷Ì\”≤º˛≤ø∑÷\Projects\zstack\Samples\SampleApp\ #
#                          CC2530DB\..\..\..\ZMain\TI2530DB\ -I               #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\hal\include\ -I              #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\hal\target\CC2530EB\ -I      #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\mac\include\ -I              #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\mac\high_level\ -I           #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\mac\low_level\srf04\ -I      #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\mac\low_level\srf04\single_c #
#                          hip\ -I C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷ #
#                          Ì\”≤º˛≤ø∑÷\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\Components\mt\ -I               #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\osal\include\ -I             #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\services\saddr\ -I           #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\services\sdata\ -I           #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\af\ -I                 #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\nwk\ -I                #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\sapi\ -I               #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\sec\ -I                #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\sys\ -I                #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\zdo\ -I                #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\zmac\ -I                     #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\zmac\f8w\ -Ohz               #
#    List file          =  C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\EndD #
#                          eviceEB\List\gy30 .lst                             #
#    Object file        =  C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\EndD #
#                          eviceEB\Obj\gy30 .r51                              #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø∑÷\Projects\zstack\Samples\SampleApp\Source\gy30 .c
      1          #include "gy30.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1
      2           
      3          
      4          
      5           
      6          /****************
      7          *  —” ±∫Ø ˝1us
      8          ****************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
      9          void Delay_1us(void) 
   \                     Delay_1us:
     10          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     11           
     12            asm("nop");
   \   000000   00           nop
     13            asm("nop");
   \   000001   00           nop
     14            asm("nop");
   \   000002   00           nop
     15            asm("nop");
   \   000003   00           nop
     16            asm("nop");
   \   000004   00           nop
     17            asm("nop");
   \   000005   00           nop
     18            asm("nop");
   \   000006   00           nop
     19            asm("nop");
   \   000007   00           nop
     20            asm("nop");
   \   000008   00           nop
     21            asm("nop");
   \   000009   00           nop
     22           
     23          }
   \   00000A   02....       LJMP    ?BRET
     24           
     25          /****************
     26          *  —” ±∫Ø ˝5us
     27          ****************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     28          static void delay_nus(void)
   \                     delay_nus:
     29          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     30           
     31            Delay_1us();
   \   000004                ; Setup parameters for call to function Delay_1us
   \   000004   12....       LCALL   ??Delay_1us?relay
     32            Delay_1us();
   \   000007                ; Setup parameters for call to function Delay_1us
   \   000007   12....       LCALL   ??Delay_1us?relay
     33            Delay_1us();
   \   00000A                ; Setup parameters for call to function Delay_1us
   \   00000A   12....       LCALL   ??Delay_1us?relay
     34            Delay_1us();
   \   00000D                ; Setup parameters for call to function Delay_1us
   \   00000D   12....       LCALL   ??Delay_1us?relay
     35            Delay_1us(); 
   \   000010                ; Setup parameters for call to function Delay_1us
   \   000010   12....       LCALL   ??Delay_1us?relay
     36           
     37          }
   \   000013   80..         SJMP    ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
     38           
     39          /****************
     40          *   —” ±∫Ø ˝ms
     41          ****************/
     42          static void delay_nms(uint ms)
     43          {
     44           
     45            uint i;
     46            while(ms--)
     47            {
     48           
     49              for(i=0;i<200;i++)
     50                delay_nus();
     51              
     52          } 
     53           
     54          }
     55           
     56          /****************
     57          *  ø™ º∫Ø ˝
     58          ****************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     59          static void start_i2c(void)
   \                     start_i2c:
     60          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     61           
     62            set_sda_out() ;
   \   000004   43FD10       ORL     0xfd,#0x10
     63            SDA=1;
   \   000007   D284         SETB    0x80.4
     64            SCL=1 ;
   \   000009   D285         SETB    0x80.5
     65            delay_nus() ;
   \   00000B                ; Setup parameters for call to function delay_nus
   \   00000B   12....       LCALL   ??delay_nus?relay
     66            SDA=0 ;
   \   00000E   C284         CLR     0x80.4
     67            delay_nus()  ;
   \   000010                ; Setup parameters for call to function delay_nus
   \   000010   12....       LCALL   ??Subroutine6_0 & 0xFFFF
     68            SCL=0;
     69           
     70          }
   \                     ??CrossCallReturnLabel_6:
   \   000013   80..         SJMP    ?Subroutine0
   \   000015                REQUIRE P0DIR
   \   000015                REQUIRE _A_P0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine6_0:
   \   000000   12....       LCALL   ??delay_nus?relay
   \   000003   C285         CLR     0x80.5
   \   000005   22           RET
     71           
     72          /****************
     73          *   Õ£÷π∫Ø ˝
     74          ****************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     75          static void stop_i2c(void)
   \                     stop_i2c:
     76          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     77           
     78            set_sda_out() ;
   \   000004   43FD10       ORL     0xfd,#0x10
     79            SDA=0;
   \   000007   C284         CLR     0x80.4
     80            delay_nus();
   \   000009                ; Setup parameters for call to function delay_nus
   \   000009   12....       LCALL   ??delay_nus?relay
     81            SCL=1;
   \   00000C   D285         SETB    0x80.5
     82            delay_nus();
   \   00000E                ; Setup parameters for call to function delay_nus
   \   00000E   12....       LCALL   ??delay_nus?relay
     83            SDA=1;;
   \   000011   D284         SETB    0x80.4
     84            delay_nus(); 
   \   000013                ; Setup parameters for call to function delay_nus
   \   000013   12....       LCALL   ??delay_nus?relay
     85           
     86          }
   \   000016                REQUIRE ?Subroutine0
   \   000016                REQUIRE P0DIR
   \   000016                REQUIRE _A_P0
   \   000016                ; // Fall through to label ?Subroutine0
     87           
     88          /*********************
     89          *  ¥”ª˙”¶¥ 1£∫≤ª”¶¥
     90          *           0£∫”¶¥
     91          **********************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     92          uchar IIC_SalveCK(void)
   \                     IIC_SalveCK:
     93          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
     94           
     95             uchar error;
     96             set_sda_in();
   \   000005   53FDEF       ANL     0xfd,#0xef
     97             SCL=1;
   \   000008   D285         SETB    0x80.5
     98             delay_nus();
   \   00000A                ; Setup parameters for call to function delay_nus
   \   00000A   12....       LCALL   ??delay_nus?relay
     99             if(SDA==1)
   \   00000D   E580         MOV     A,0x80
   \   00000F   12....       LCALL   ?Subroutine4 & 0xFFFF
    100                 error=1;
    101             else
    102                 error=0;
    103             delay_nus();
    104             SCL=0 ;
    105             return error;
   \                     ??CrossCallReturnLabel_4:
   \   000012   EE           MOV     A,R6
   \   000013   A2E4         MOV     C,0xE0 /* A   */.4
   \   000015   E4           CLR     A
   \   000016   33           RLC     A
   \   000017                REQUIRE ?Subroutine1
   \   000017                REQUIRE P0DIR
   \   000017                REQUIRE _A_P0
   \   000017                ; // Fall through to label ?Subroutine1
    106           
    107          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   F9           MOV     R1,A
   \   000001                REQUIRE ??Subroutine5_0
   \   000001                ; // Fall through to label ??Subroutine5_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine5_0:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   FE           MOV     R6,A
   \   000001                ; Setup parameters for call to function delay_nus
   \   000001                ; Setup parameters for call to function delay_nus
   \   000001                REQUIRE ??Subroutine6_0
   \   000001                ; // Fall through to label ??Subroutine6_0
    108           
    109          /************************
    110          * ÷˜ª˙œÚ¥”ª˙–¥ ˝æ› 
    111          *  val£∫“™–¥µƒ ˝æ›         
    112          ************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    113          static void i2c_send(uchar val)                 
   \                     i2c_send:
    114          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FF           MOV     R7,A
    115           
    116                  int i;
    117                  set_sda_out();
   \   000007   43FD10       ORL     0xfd,#0x10
    118                  for(i=0;i<8;i++)
   \   00000A   7E08         MOV     R6,#0x8
    119          {
    120           
    121            if(val&0x80)
   \                     ??i2c_send_0:
   \   00000C   EF           MOV     A,R7
   \   00000D   A2E7         MOV     C,0xE0 /* A   */.7
   \   00000F   5004         JNC     ??i2c_send_1
    122             SDA=1;
   \   000011   D284         SETB    0x80.4
   \   000013   8002         SJMP    ??i2c_send_2
    123            else
    124               SDA=0;
   \                     ??i2c_send_1:
   \   000015   C284         CLR     0x80.4
    125             val<<=1;
   \                     ??i2c_send_2:
   \   000017   C3           CLR     C
   \   000018   33           RLC     A
   \   000019   FF           MOV     R7,A
    126             delay_nus();
   \   00001A                ; Setup parameters for call to function delay_nus
   \   00001A   12....       LCALL   ?Subroutine2 & 0xFFFF
    127             SCL=1; ; 
    128             delay_nus();
    129             SCL=0;;
    130             delay_nus();
   \                     ??CrossCallReturnLabel_0:
   \   00001D                ; Setup parameters for call to function delay_nus
   \   00001D   12....       LCALL   ??delay_nus?relay
    131           
    132          }
   \   000020   1E           DEC     R6
   \   000021   EE           MOV     A,R6
   \   000022   70E8         JNZ     ??i2c_send_0
    133                  IIC_SalveCK();      
   \   000024                ; Setup parameters for call to function IIC_SalveCK
   \   000024   12....       LCALL   ??IIC_SalveCK?relay
    134           
    135          }
   \   000027   80..         SJMP    ??Subroutine5_0
   \   000029                REQUIRE P0DIR
   \   000029                REQUIRE _A_P0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   12....       LCALL   ??delay_nus?relay
   \   000003   D285         SETB    0x80.5
   \   000005                ; Setup parameters for call to function delay_nus
   \   000005                ; Setup parameters for call to function delay_nus
   \   000005   12....       LCALL   ??Subroutine6_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   000008   22           RET
    136           
    137          /*********************
    138          *  ÷˜ª˙”¶¥ 1£∫”¶¥
    139          *           0£∫≤ª”¶¥
    140          **********************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    141          void IIC_MasterACK(uint ack)
   \                     IIC_MasterACK:
    142          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    143           
    144              set_sda_out();
   \   000004   43FD10       ORL     0xfd,#0x10
    145              if(ack)
   \   000007   EA           MOV     A,R2
   \   000008   4B           ORL     A,R3
   \   000009   6004         JZ      ??IIC_MasterACK_0
    146                   SDA=0;
   \   00000B   C284         CLR     0x80.4
   \   00000D   8002         SJMP    ??IIC_MasterACK_1
    147               else
    148                   SDA=1;
   \                     ??IIC_MasterACK_0:
   \   00000F   D284         SETB    0x80.4
    149              delay_nus();
   \                     ??IIC_MasterACK_1:
   \   000011                ; Setup parameters for call to function delay_nus
   \   000011   12....       LCALL   ?Subroutine2 & 0xFFFF
    150              SCL=1;
    151              delay_nus();
    152              SCL=0;
    153              SDA=1;
   \                     ??CrossCallReturnLabel_1:
   \   000014   D284         SETB    0x80.4
    154           
    155          }
   \   000016   80..         SJMP    ?Subroutine0
   \   000018                REQUIRE P0DIR
   \   000018                REQUIRE _A_P0
    156           
    157          /*************************
    158          *  ÷˜ª˙∂¡»°¥”ª˙∑¢¿¥µƒ ˝æ› 
    159          *     val£∫∂¡»°µΩµƒ÷µ 
    160          ************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    161          static char i2c_read()
   \                     i2c_read:
    162          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    163                  int i;
    164                  char val=0;
   \   000005   7E00         MOV     R6,#0x0
    165                  SDA=1;
   \   000007   D284         SETB    0x80.4
    166                  set_sda_in();
   \   000009   53FDEF       ANL     0xfd,#0xef
    167                  for(i=0;i<8;i++)
   \   00000C   7F08         MOV     R7,#0x8
    168                  {
    169                    val<<=1;
    170                    SCL=1;
   \                     ??i2c_read_0:
   \   00000E   D285         SETB    0x80.5
    171                    delay_nus();
   \   000010                ; Setup parameters for call to function delay_nus
   \   000010   12....       LCALL   ??delay_nus?relay
    172                    val |=SDA;
   \   000013   A284         MOV     C,0x80.4
   \   000015   E4           CLR     A
   \   000016   33           RLC     A
   \   000017   F8           MOV     R0,A
   \   000018   EE           MOV     A,R6
   \   000019   33           RLC     A
   \   00001A   48           ORL     A,R0
   \   00001B   12....       LCALL   ?Subroutine4 & 0xFFFF
    173                    delay_nus();
    174                    SCL=0;
    175                    delay_nus();                                       
   \                     ??CrossCallReturnLabel_5:
   \   00001E                ; Setup parameters for call to function delay_nus
   \   00001E   12....       LCALL   ??delay_nus?relay
    176                  }
   \   000021   1F           DEC     R7
   \   000022   EF           MOV     A,R7
   \   000023   70E9         JNZ     ??i2c_read_0
    177                  return val;
   \   000025   EE           MOV     A,R6
   \   000026   02....       LJMP    ?Subroutine1 & 0xFFFF
   \   000029                REQUIRE _A_P0
   \   000029                REQUIRE P0DIR
    178                   
    179           
    180          }
    181           
    182          /*************************
    183          *  ∂¡»°¥´∏–∆˜µƒ ˝æ› 
    184          *    t:π‚∏– ˝÷µ
    185          ************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    186          unsigned short get_light(void)
   \                     get_light:
    187          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    188            unsigned char t0;
    189            unsigned char t1;
    190            unsigned short t;
    191            start_i2c();
   \   000005                ; Setup parameters for call to function start_i2c
   \   000005   12....       LCALL   ?Subroutine3 & 0xFFFF
    192            i2c_send(SlaveAddress);
    193            i2c_send(PowerOn);
   \                     ??CrossCallReturnLabel_2:
   \   000008                ; Setup parameters for call to function i2c_send
   \   000008   7901         MOV     R1,#0x1
   \   00000A   12....       LCALL   ??i2c_send?relay
    194            stop_i2c();            
   \   00000D                ; Setup parameters for call to function stop_i2c
   \   00000D   12....       LCALL   ??stop_i2c?relay
    195            start_i2c();
   \   000010                ; Setup parameters for call to function start_i2c
   \   000010   12....       LCALL   ?Subroutine3 & 0xFFFF
    196            i2c_send(SlaveAddress);
    197            i2c_send(ContinuHMode);
   \                     ??CrossCallReturnLabel_3:
   \   000013                ; Setup parameters for call to function i2c_send
   \   000013   7910         MOV     R1,#0x10
   \   000015   12....       LCALL   ??i2c_send?relay
    198            stop_i2c();                     
   \   000018                ; Setup parameters for call to function stop_i2c
   \   000018   12....       LCALL   ??stop_i2c?relay
    199            delay_nms(1); 
   \   00001B   7E01         MOV     R6,#0x1
   \   00001D   7F00         MOV     R7,#0x0
   \                     ??get_light_0:
   \   00001F   EE           MOV     A,R6
   \   000020   F8           MOV     R0,A
   \   000021   EF           MOV     A,R7
   \   000022   F9           MOV     R1,A
   \   000023   E8           MOV     A,R0
   \   000024   24FF         ADD     A,#-0x1
   \   000026   1E           DEC     R6
   \   000027   E9           MOV     A,R1
   \   000028   34FF         ADDC    A,#-0x1
   \   00002A   FF           MOV     R7,A
   \   00002B   E8           MOV     A,R0
   \   00002C   49           ORL     A,R1
   \   00002D   600E         JZ      ??get_light_1
   \   00002F   75..C8       MOV     ?V0 + 0,#-0x38
   \                     ??get_light_2:
   \   000032                ; Setup parameters for call to function delay_nus
   \   000032   12....       LCALL   ??delay_nus?relay
   \   000035   15..         DEC     ?V0 + 0
   \   000037   E5..         MOV     A,?V0 + 0
   \   000039   60E4         JZ      ??get_light_0
   \   00003B   80F5         SJMP    ??get_light_2
    200            start_i2c();
   \                     ??get_light_1:
   \   00003D                ; Setup parameters for call to function start_i2c
   \   00003D   12....       LCALL   ??start_i2c?relay
    201            i2c_send(SlaveAddress+1);                     
   \   000040                ; Setup parameters for call to function i2c_send
   \   000040   7947         MOV     R1,#0x47
   \   000042   12....       LCALL   ??i2c_send?relay
    202            t0 = i2c_read();
   \   000045                ; Setup parameters for call to function i2c_read
   \   000045   12....       LCALL   ??i2c_read?relay
   \   000048   E9           MOV     A,R1
   \   000049   FE           MOV     R6,A
    203            IIC_MasterACK(1);
   \   00004A                ; Setup parameters for call to function IIC_MasterACK
   \   00004A   7A01         MOV     R2,#0x1
   \   00004C   7B00         MOV     R3,#0x0
   \   00004E   12....       LCALL   ??IIC_MasterACK?relay
    204            t1 = i2c_read();
   \   000051                ; Setup parameters for call to function i2c_read
   \   000051   12....       LCALL   ??i2c_read?relay
   \   000054   E9           MOV     A,R1
   \   000055   F5..         MOV     ?V0 + 0,A
    205            IIC_MasterACK(0);
   \   000057                ; Setup parameters for call to function IIC_MasterACK
   \   000057   7A00         MOV     R2,#0x0
   \   000059   7B00         MOV     R3,#0x0
   \   00005B   12....       LCALL   ??IIC_MasterACK?relay
    206            stop_i2c();
   \   00005E                ; Setup parameters for call to function stop_i2c
   \   00005E   12....       LCALL   ??stop_i2c?relay
    207            t =  ((short)t0)<<8;
    208            t |= t1;
    209            return t;
   \   000061   EE           MOV     A,R6
   \   000062   AA..         MOV     R2,?V0 + 0
   \   000064   FB           MOV     R3,A
   \   000065   7F02         MOV     R7,#0x2
   \   000067   02....       LJMP    ?BANKED_LEAVE_XDATA
    210          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   12....       LCALL   ??start_i2c?relay
   \   000003                ; Setup parameters for call to function i2c_send
   \   000003                ; Setup parameters for call to function i2c_send
   \   000003   7946         MOV     R1,#0x46
   \   000005   12....       LCALL   ??i2c_send?relay
   \   000008   22           RET
    211           

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    212          uint Light(void)
   \                     Light:
    213          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
    214           
    215              uint w=0;
    216              LIGHT_INIT();
   \   000005   53F3CF       ANL     0xf3,#0xcf
   \   000008   43FD30       ORL     0xfd,#0x30
   \   00000B   D285         SETB    0x80.5
   \   00000D   D284         SETB    0x80.4
    217              w = (uint)(get_light()/1.2);
    218              uint lightData = w;  
    219              return lightData;    
   \   00000F                ; Setup parameters for call to function get_light
   \   00000F   12....       LCALL   ??get_light?relay
   \   000012   8A..         MOV     ?V0 + 0,R2
   \   000014   8B..         MOV     ?V0 + 1,R3
   \   000016   E4           CLR     A
   \   000017   F5..         MOV     ?V0 + 2,A
   \   000019   F5..         MOV     ?V0 + 3,A
   \   00001B   78..         MOV     R0,#?V0 + 0
   \   00001D   12....       LCALL   ?UL_TO_FLT
   \   000020   90....       MOV     DPTR,#__Constant_3f99999a
   \   000023   78..         MOV     R0,#?V0 + 4
   \   000025   12....       LCALL   ?L_MOV_X
   \   000028   78..         MOV     R0,#?V0 + 0
   \   00002A   79..         MOV     R1,#?V0 + 4
   \   00002C   12....       LCALL   ?FLT_DIV
   \   00002F   78..         MOV     R0,#?V0 + 0
   \   000031   12....       LCALL   ?FLT_TO_L
   \   000034   AA..         MOV     R2,?V0 + 0
   \   000036   AB..         MOV     R3,?V0 + 1
   \   000038   7F08         MOV     R7,#0x8
   \   00003A   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00003D                REQUIRE P0SEL
   \   00003D                REQUIRE P0DIR
   \   00003D                REQUIRE _A_P0
    220           
    221          }

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_3f99999a:
   \   000000   9A99993F     DD 3F99999AH

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Delay_1us?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Delay_1us

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??delay_nus?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    delay_nus

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??start_i2c?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    start_i2c

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??stop_i2c?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    stop_i2c

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??IIC_SalveCK?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    IIC_SalveCK

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??i2c_send?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    i2c_send

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??IIC_MasterACK?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    IIC_MasterACK

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??i2c_read?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    i2c_read

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??get_light?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    get_light

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Light?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Light

   Maximum stack usage in bytes:

     Function           ISTACK PSTACK XSTACK
     --------           ------ ------ ------
     Delay_1us              0      0      0
     IIC_MasterACK          2      0     10
       -> delay_nus         4      0      0
       -> delay_nus         4      0      0
     IIC_SalveCK            0      0     18
       -> delay_nus         0      0     18
       -> delay_nus         0      0     18
     Light                  0      0     16
       -> get_light         0      0     32
     delay_nus              2      0     10
       -> Delay_1us         4      0      0
       -> Delay_1us         4      0      0
       -> Delay_1us         4      0      0
       -> Delay_1us         4      0      0
       -> Delay_1us         4      0      0
     get_light              0      0     26
       -> start_i2c         0      0     20
       -> i2c_send          0      0     20
       -> i2c_send          0      0     20
       -> stop_i2c          0      0     20
       -> start_i2c         0      0     20
       -> i2c_send          0      0     20
       -> i2c_send          0      0     20
       -> stop_i2c          0      0     20
       -> delay_nus         0      0     20
       -> start_i2c         0      0     20
       -> i2c_send          0      0     20
       -> i2c_read          0      0     20
       -> IIC_MasterACK     0      0     20
       -> i2c_read          0      0     20
       -> IIC_MasterACK     0      0     20
       -> stop_i2c          0      0     20
     i2c_read               0      0     19
       -> delay_nus         0      0     18
       -> delay_nus         0      0     18
       -> delay_nus         0      0     18
     i2c_send               0      0     19
       -> delay_nus         0      0     18
       -> delay_nus         0      0     18
       -> delay_nus         0      0     18
       -> IIC_SalveCK       0      0     18
     start_i2c              2      0     10
       -> delay_nus         4      0      0
       -> delay_nus         4      0      0
     stop_i2c               2      0     10
       -> delay_nus         4      0      0
       -> delay_nus         4      0      0
       -> delay_nus         4      0      0


   Segment part sizes:

     Function/Label        Bytes
     --------------        -----
     _A_P0                    1
     P0SEL                    1
     P0DIR                    1
     Delay_1us               13
     delay_nus               21
     ?Subroutine0             7
     start_i2c               21
     ??Subroutine6_0          6
     stop_i2c                22
     IIC_SalveCK             23
     ?Subroutine1             1
     ??Subroutine5_0          5
     ?Subroutine4             1
     i2c_send                41
     ?Subroutine2             9
     IIC_MasterACK           24
     i2c_read                41
     get_light              106
     ?Subroutine3             9
     Light                   61
     __Constant_3f99999a      4
     ??Delay_1us?relay        6
     ??delay_nus?relay        6
     ??start_i2c?relay        6
     ??stop_i2c?relay         6
     ??IIC_SalveCK?relay      6
     ??i2c_send?relay         6
     ??IIC_MasterACK?relay    6
     ??i2c_read?relay         6
     ??get_light?relay        6
     ??Light?relay            6

 
 411 bytes in segment BANKED_CODE
  60 bytes in segment BANK_RELAYS
   3 bytes in segment SFR_AN
   4 bytes in segment XDATA_ROM_C
 
 471 bytes of CODE  memory
   0 bytes of CONST memory (+ 4 bytes shared)
   0 bytes of DATA  memory (+ 3 bytes shared)

Errors: none
Warnings: none
