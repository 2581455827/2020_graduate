///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.1.10194/W32 for 8051        26/Nov/2019  18:53:03 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Co /
//                          mponents\stack\zdo\ZDProfile.c                    /
//    Command line       =  -f C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\..\.. /
//                          \..\Tools\CC2530DB\f8wEndev.cfg (-DCPU32MHZ       /
//                          -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3        /
//                          -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f         /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO        /
//                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR      /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 C:\Users\25814\Desktop\6.Z /
//                          Stack-2.5.1a¹¤³ÌÄ£°å\Components\stack\zdo\ZDProfi /
//                          le.c -D NWK_AUTO_POLL -D ZAPP_P1 -D MT_TASK -D    /
//                          MT_SYS_FUNC -D MT_ZDO_FUNC -D                     /
//                          LCD_SUPPORTED=DEBUG -lC                           /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\EndDevic /
//                          eEB\List\ -lA C:\Users\25814\Desktop\6.ZStack-2.5 /
//                          .1a¹¤³ÌÄ£°å\Projects\zstack\Samples\SampleApp\CC2 /
//                          530DB\EndDeviceEB\List\ --diag_suppress           /
//                          Pe001,Pa010 -o C:\Users\25814\Desktop\6.ZStack-2. /
//                          5.1a¹¤³ÌÄ£°å\Projects\zstack\Samples\SampleApp\CC /
//                          2530DB\EndDeviceEB\Obj\ -e --no_code_motion       /
//                          --debug --core=plain --dptr=16,1                  /
//                          --data_model=large --code_model=banked            /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data_rom --nr_virtual_regs 16   /
//                          -I C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å /
//                          \Projects\zstack\Samples\SampleApp\CC2530DB\ -I   /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\Sourc /
//                          e\ -I C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ /
//                          £°å\Projects\zstack\Samples\SampleApp\CC2530DB\.. /
//                          \..\..\ZMain\TI2530DB\ -I                         /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \..\..\Components\hal\include\ -I                 /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \..\..\Components\hal\target\CC2530EB\ -I         /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \..\..\Components\mac\include\ -I                 /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \..\..\Components\mac\high_level\ -I              /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \..\..\Components\mac\low_level\srf04\ -I         /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \..\..\Components\mac\low_level\srf04\single_chip /
//                          \ -I C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£ /
//                          °å\Projects\zstack\Samples\SampleApp\CC2530DB\..\ /
//                          ..\..\..\..\Components\mt\ -I                     /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \..\..\Components\osal\include\ -I                /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \..\..\Components\services\saddr\ -I              /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \..\..\Components\services\sdata\ -I              /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \..\..\Components\stack\af\ -I                    /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \..\..\Components\stack\nwk\ -I                   /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \..\..\Components\stack\sapi\ -I                  /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \..\..\Components\stack\sec\ -I                   /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \..\..\Components\stack\sys\ -I                   /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \..\..\Components\stack\zdo\ -I                   /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \..\..\Components\zmac\ -I                        /
//                          C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\.. /
//                          \..\..\Components\zmac\f8w\ -Ohz                  /
//    List file          =  C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Pr /
//                          ojects\zstack\Samples\SampleApp\CC2530DB\EndDevic /
//                          eEB\List\ZDProfile.s51                            /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME ZDProfile

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_MOV_X
        EXTERN ?PUSH_XSTACK_I_FOUR
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?S_SHL
        EXTERN ?US_SHR
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC ??ZDO_RegisterForZDOMsg?relay
        FUNCTION ??ZDO_RegisterForZDOMsg?relay,0203H
        PUBLIC ??ZDO_RemoveRegisteredCB?relay
        FUNCTION ??ZDO_RemoveRegisteredCB?relay,0203H
        PUBLIC ??ZDO_SendMsgCBs?relay
        FUNCTION ??ZDO_SendMsgCBs?relay,0203H
        PUBLIC ??ZDP_BindUnbindReq?relay
        FUNCTION ??ZDP_BindUnbindReq?relay,0203H
        PUBLIC ??ZDP_DeviceAnnce?relay
        FUNCTION ??ZDP_DeviceAnnce?relay,0203H
        PUBLIC ??ZDP_EPRsp?relay
        FUNCTION ??ZDP_EPRsp?relay,0203H
        PUBLIC ??ZDP_EndDeviceBindReq?relay
        FUNCTION ??ZDP_EndDeviceBindReq?relay,0203H
        PUBLIC ??ZDP_GenericRsp?relay
        FUNCTION ??ZDP_GenericRsp?relay,0203H
        PUBLIC ??ZDP_IEEEAddrReq?relay
        FUNCTION ??ZDP_IEEEAddrReq?relay,0203H
        PUBLIC ??ZDP_IncomingData?relay
        FUNCTION ??ZDP_IncomingData?relay,0203H
        PUBLIC ??ZDP_MatchDescReq?relay
        FUNCTION ??ZDP_MatchDescReq?relay,0203H
        PUBLIC ??ZDP_MgmtBindRsp?relay
        FUNCTION ??ZDP_MgmtBindRsp?relay,0203H
        PUBLIC ??ZDP_MgmtDirectJoinReq?relay
        FUNCTION ??ZDP_MgmtDirectJoinReq?relay,0203H
        PUBLIC ??ZDP_MgmtLeaveReq?relay
        FUNCTION ??ZDP_MgmtLeaveReq?relay,0203H
        PUBLIC ??ZDP_MgmtLqiRsp?relay
        FUNCTION ??ZDP_MgmtLqiRsp?relay,0203H
        PUBLIC ??ZDP_MgmtNwkDiscReq?relay
        FUNCTION ??ZDP_MgmtNwkDiscReq?relay,0203H
        PUBLIC ??ZDP_MgmtNwkDiscRsp?relay
        FUNCTION ??ZDP_MgmtNwkDiscRsp?relay,0203H
        PUBLIC ??ZDP_MgmtNwkUpdateNotify?relay
        FUNCTION ??ZDP_MgmtNwkUpdateNotify?relay,0203H
        PUBLIC ??ZDP_MgmtNwkUpdateReq?relay
        FUNCTION ??ZDP_MgmtNwkUpdateReq?relay,0203H
        PUBLIC ??ZDP_MgmtPermitJoinReq?relay
        FUNCTION ??ZDP_MgmtPermitJoinReq?relay,0203H
        PUBLIC ??ZDP_MgmtRtgRsp?relay
        FUNCTION ??ZDP_MgmtRtgRsp?relay,0203H
        PUBLIC ??ZDP_NWKAddrOfInterestReq?relay
        FUNCTION ??ZDP_NWKAddrOfInterestReq?relay,0203H
        PUBLIC ??ZDP_NodeDescMsg?relay
        FUNCTION ??ZDP_NodeDescMsg?relay,0203H
        PUBLIC ??ZDP_NwkAddrReq?relay
        FUNCTION ??ZDP_NwkAddrReq?relay,0203H
        PUBLIC ??ZDP_PowerDescMsg?relay
        FUNCTION ??ZDP_PowerDescMsg?relay,0203H
        PUBLIC ??ZDP_SendData?relay
        FUNCTION ??ZDP_SendData?relay,0203H
        PUBLIC ??ZDP_ServerDiscReq?relay
        FUNCTION ??ZDP_ServerDiscReq?relay,0203H
        PUBLIC ??ZDP_ServerDiscRsp?relay
        FUNCTION ??ZDP_ServerDiscRsp?relay,0203H
        PUBLIC ??ZDP_SimpleDescMsg?relay
        FUNCTION ??ZDP_SimpleDescMsg?relay,0203H
        PUBLIC ??ZDP_SimpleDescReq?relay
        FUNCTION ??ZDP_SimpleDescReq?relay,0203H
        PUBLIC ??ZDP_UserDescRsp?relay
        FUNCTION ??ZDP_UserDescRsp?relay,0203H
        PUBLIC ??ZDP_UserDescSet?relay
        FUNCTION ??ZDP_UserDescSet?relay,0203H
        FUNCTION ??fillAndSend?relay,0203H
        PUBLIC ??zdpProcessAddrReq?relay
        FUNCTION ??zdpProcessAddrReq?relay,0203H
        PUBLIC ZDO_RegisterForZDOMsg
        FUNCTION ZDO_RegisterForZDOMsg,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_RemoveRegisteredCB
        FUNCTION ZDO_RemoveRegisteredCB,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_SendMsgCBs
        FUNCTION ZDO_SendMsgCBs,021203H
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 19, STACK
        PUBLIC ZDP_AF_ENDPOINT
        PUBLIC ZDP_BindUnbindReq
        FUNCTION ZDP_BindUnbindReq,021203H
        ARGFRAME XSTACK, 8, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDP_DeviceAnnce
        FUNCTION ZDP_DeviceAnnce,021203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_EPRsp
        FUNCTION ZDP_EPRsp,021203H
        ARGFRAME XSTACK, 7, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDP_EndDeviceBindReq
        FUNCTION ZDP_EndDeviceBindReq,021203H
        ARGFRAME XSTACK, 9, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC ZDP_GenericRsp
        FUNCTION ZDP_GenericRsp,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC ZDP_IEEEAddrReq
        FUNCTION ZDP_IEEEAddrReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_IncomingData
        FUNCTION ZDP_IncomingData,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC ZDP_MatchDescReq
        FUNCTION ZDP_MatchDescReq,021203H
        ARGFRAME XSTACK, 8, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC ZDP_MgmtBindRsp
        FUNCTION ZDP_MgmtBindRsp,021203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_MgmtDirectJoinReq
        FUNCTION ZDP_MgmtDirectJoinReq,021203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDP_MgmtLeaveReq
        FUNCTION ZDP_MgmtLeaveReq,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDP_MgmtLqiRsp
        FUNCTION ZDP_MgmtLqiRsp,021203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC ZDP_MgmtNwkDiscReq
        FUNCTION ZDP_MgmtNwkDiscReq,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC ZDP_MgmtNwkDiscRsp
        FUNCTION ZDP_MgmtNwkDiscRsp,021203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDP_MgmtNwkUpdateNotify
        FUNCTION ZDP_MgmtNwkUpdateNotify,021203H
        ARGFRAME XSTACK, 12, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 31, STACK
        PUBLIC ZDP_MgmtNwkUpdateReq
        FUNCTION ZDP_MgmtNwkUpdateReq,021203H
        ARGFRAME XSTACK, 6, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDP_MgmtPermitJoinReq
        FUNCTION ZDP_MgmtPermitJoinReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_MgmtRtgRsp
        FUNCTION ZDP_MgmtRtgRsp,021203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDP_NWKAddrOfInterestReq
        FUNCTION ZDP_NWKAddrOfInterestReq,021203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_NodeDescMsg
        FUNCTION ZDP_NodeDescMsg,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_NwkAddrReq
        FUNCTION ZDP_NwkAddrReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDP_PowerDescMsg
        FUNCTION ZDP_PowerDescMsg,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_SendData
        FUNCTION ZDP_SendData,021203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDP_ServerDiscReq
        FUNCTION ZDP_ServerDiscReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_ServerDiscRsp
        FUNCTION ZDP_ServerDiscRsp,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC ZDP_SimpleDescMsg
        FUNCTION ZDP_SimpleDescMsg,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDP_SimpleDescReq
        FUNCTION ZDP_SimpleDescReq,021203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_TransID
        PUBLIC ZDP_TxOptions
        PUBLIC ZDP_UserDescRsp
        FUNCTION ZDP_UserDescRsp,021203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDP_UserDescSet
        FUNCTION ZDP_UserDescSet,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        FUNCTION fillAndSend,021203H
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 37, STACK
        PUBLIC zdoMsgCBs
        PUBLIC zdpMsgProcs
        PUBLIC zdpProcessAddrReq
        FUNCTION zdpProcessAddrReq,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 15, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
osal_memset         SYMBOL "osal_memset"
AF_DataRequest      SYMBOL "AF_DataRequest"
sAddrExtCmp         SYMBOL "sAddrExtCmp"
sAddrExtCpy         SYMBOL "sAddrExtCpy"
osal_memcpy         SYMBOL "osal_memcpy"
NLME_GetShortAddr   SYMBOL "NLME_GetShortAddr"
NLME_GetExtAddr     SYMBOL "NLME_GetExtAddr"
osal_buffer_uint32  SYMBOL "osal_buffer_uint32"
osal_mem_alloc      SYMBOL "osal_mem_alloc"
osal_mem_free       SYMBOL "osal_mem_free"
osal_msg_allocate   SYMBOL "osal_msg_allocate"
osal_msg_send       SYMBOL "osal_msg_send"
ZDApp_InMsgCB       SYMBOL "ZDApp_InMsgCB"
??AF_DataRequest?relay SYMBOL "?relay", AF_DataRequest
??NLME_GetExtAddr?relay SYMBOL "?relay", NLME_GetExtAddr
??NLME_GetShortAddr?relay SYMBOL "?relay", NLME_GetShortAddr
??ZDApp_InMsgCB?relay SYMBOL "?relay", ZDApp_InMsgCB
`?<Name ZDO_ProcessActiveEPR 17>` SYMBOL "ZDO_ProcessActiveEPReq"
??ZDO_ProcessActiveEPReq?relay SYMBOL "?relay", `?<Name ZDO_ProcessActiveEPR 17>`
`?<Name ZDO_ProcessMatchDesc 19>` SYMBOL "ZDO_ProcessMatchDescReq"
??ZDO_ProcessMatchDescReq?relay SYMBOL "?relay", `?<Name ZDO_ProcessMatchDesc 19>`
`?<Name ZDO_ProcessNodeDescR 21>` SYMBOL "ZDO_ProcessNodeDescReq"
??ZDO_ProcessNodeDescReq?relay SYMBOL "?relay", `?<Name ZDO_ProcessNodeDescR 21>`
`?<Name ZDO_ProcessPowerDesc 23>` SYMBOL "ZDO_ProcessPowerDescReq"
??ZDO_ProcessPowerDescReq?relay SYMBOL "?relay", `?<Name ZDO_ProcessPowerDesc 23>`
`?<Name ZDO_ProcessServerDis 25>` SYMBOL "ZDO_ProcessServerDiscReq"
??ZDO_ProcessServerDiscReq?relay SYMBOL "?relay", `?<Name ZDO_ProcessServerDis 25>`
`?<Name ZDO_ProcessSimpleDes 27>` SYMBOL "ZDO_ProcessSimpleDescReq"
??ZDO_ProcessSimpleDescReq?relay SYMBOL "?relay", `?<Name ZDO_ProcessSimpleDes 27>`
`?<Name ZDO_ProcessUserDescR 29>` SYMBOL "ZDO_ProcessUserDescReq"
??ZDO_ProcessUserDescReq?relay SYMBOL "?relay", `?<Name ZDO_ProcessUserDescR 29>`
`?<Name ZDO_ProcessUserDescS 31>` SYMBOL "ZDO_ProcessUserDescSet"
??ZDO_ProcessUserDescSet?relay SYMBOL "?relay", `?<Name ZDO_ProcessUserDescS 31>`
??osal_buffer_uint32?relay SYMBOL "?relay", osal_buffer_uint32
??osal_mem_alloc?relay SYMBOL "?relay", osal_mem_alloc
??osal_mem_free?relay SYMBOL "?relay", osal_mem_free
??osal_memcpy?relay SYMBOL "?relay", osal_memcpy
??osal_memset?relay SYMBOL "?relay", osal_memset
??osal_msg_allocate?relay SYMBOL "?relay", osal_msg_allocate
??osal_msg_send?relay SYMBOL "?relay", osal_msg_send
??sAddrExtCmp?relay SYMBOL "?relay", sAddrExtCmp
??sAddrExtCpy?relay SYMBOL "?relay", sAddrExtCpy
ZDO_RegisterForZDOMsg SYMBOL "ZDO_RegisterForZDOMsg"
??ZDO_RegisterForZDOMsg?relay SYMBOL "?relay", ZDO_RegisterForZDOMsg
ZDO_RemoveRegisteredCB SYMBOL "ZDO_RemoveRegisteredCB"
??ZDO_RemoveRegisteredCB?relay SYMBOL "?relay", ZDO_RemoveRegisteredCB
ZDO_SendMsgCBs      SYMBOL "ZDO_SendMsgCBs"
??ZDO_SendMsgCBs?relay SYMBOL "?relay", ZDO_SendMsgCBs
ZDP_BindUnbindReq   SYMBOL "ZDP_BindUnbindReq"
??ZDP_BindUnbindReq?relay SYMBOL "?relay", ZDP_BindUnbindReq
ZDP_DeviceAnnce     SYMBOL "ZDP_DeviceAnnce"
??ZDP_DeviceAnnce?relay SYMBOL "?relay", ZDP_DeviceAnnce
ZDP_EPRsp           SYMBOL "ZDP_EPRsp"
??ZDP_EPRsp?relay   SYMBOL "?relay", ZDP_EPRsp
ZDP_EndDeviceBindReq SYMBOL "ZDP_EndDeviceBindReq"
??ZDP_EndDeviceBindReq?relay SYMBOL "?relay", ZDP_EndDeviceBindReq
ZDP_GenericRsp      SYMBOL "ZDP_GenericRsp"
??ZDP_GenericRsp?relay SYMBOL "?relay", ZDP_GenericRsp
ZDP_IEEEAddrReq     SYMBOL "ZDP_IEEEAddrReq"
??ZDP_IEEEAddrReq?relay SYMBOL "?relay", ZDP_IEEEAddrReq
ZDP_IncomingData    SYMBOL "ZDP_IncomingData"
??ZDP_IncomingData?relay SYMBOL "?relay", ZDP_IncomingData
ZDP_MatchDescReq    SYMBOL "ZDP_MatchDescReq"
??ZDP_MatchDescReq?relay SYMBOL "?relay", ZDP_MatchDescReq
ZDP_MgmtBindRsp     SYMBOL "ZDP_MgmtBindRsp"
??ZDP_MgmtBindRsp?relay SYMBOL "?relay", ZDP_MgmtBindRsp
ZDP_MgmtDirectJoinReq SYMBOL "ZDP_MgmtDirectJoinReq"
??ZDP_MgmtDirectJoinReq?relay SYMBOL "?relay", ZDP_MgmtDirectJoinReq
ZDP_MgmtLeaveReq    SYMBOL "ZDP_MgmtLeaveReq"
??ZDP_MgmtLeaveReq?relay SYMBOL "?relay", ZDP_MgmtLeaveReq
ZDP_MgmtLqiRsp      SYMBOL "ZDP_MgmtLqiRsp"
??ZDP_MgmtLqiRsp?relay SYMBOL "?relay", ZDP_MgmtLqiRsp
ZDP_MgmtNwkDiscReq  SYMBOL "ZDP_MgmtNwkDiscReq"
??ZDP_MgmtNwkDiscReq?relay SYMBOL "?relay", ZDP_MgmtNwkDiscReq
ZDP_MgmtNwkDiscRsp  SYMBOL "ZDP_MgmtNwkDiscRsp"
??ZDP_MgmtNwkDiscRsp?relay SYMBOL "?relay", ZDP_MgmtNwkDiscRsp
ZDP_MgmtNwkUpdateNotify SYMBOL "ZDP_MgmtNwkUpdateNotify"
??ZDP_MgmtNwkUpdateNotify?relay SYMBOL "?relay", ZDP_MgmtNwkUpdateNotify
ZDP_MgmtNwkUpdateReq SYMBOL "ZDP_MgmtNwkUpdateReq"
??ZDP_MgmtNwkUpdateReq?relay SYMBOL "?relay", ZDP_MgmtNwkUpdateReq
ZDP_MgmtPermitJoinReq SYMBOL "ZDP_MgmtPermitJoinReq"
??ZDP_MgmtPermitJoinReq?relay SYMBOL "?relay", ZDP_MgmtPermitJoinReq
ZDP_MgmtRtgRsp      SYMBOL "ZDP_MgmtRtgRsp"
??ZDP_MgmtRtgRsp?relay SYMBOL "?relay", ZDP_MgmtRtgRsp
ZDP_NWKAddrOfInterestReq SYMBOL "ZDP_NWKAddrOfInterestReq"
??ZDP_NWKAddrOfInterestReq?relay SYMBOL "?relay", ZDP_NWKAddrOfInterestReq
ZDP_NodeDescMsg     SYMBOL "ZDP_NodeDescMsg"
??ZDP_NodeDescMsg?relay SYMBOL "?relay", ZDP_NodeDescMsg
ZDP_NwkAddrReq      SYMBOL "ZDP_NwkAddrReq"
??ZDP_NwkAddrReq?relay SYMBOL "?relay", ZDP_NwkAddrReq
ZDP_PowerDescMsg    SYMBOL "ZDP_PowerDescMsg"
??ZDP_PowerDescMsg?relay SYMBOL "?relay", ZDP_PowerDescMsg
ZDP_SendData        SYMBOL "ZDP_SendData"
??ZDP_SendData?relay SYMBOL "?relay", ZDP_SendData
ZDP_ServerDiscReq   SYMBOL "ZDP_ServerDiscReq"
??ZDP_ServerDiscReq?relay SYMBOL "?relay", ZDP_ServerDiscReq
ZDP_ServerDiscRsp   SYMBOL "ZDP_ServerDiscRsp"
??ZDP_ServerDiscRsp?relay SYMBOL "?relay", ZDP_ServerDiscRsp
ZDP_SimpleDescMsg   SYMBOL "ZDP_SimpleDescMsg"
??ZDP_SimpleDescMsg?relay SYMBOL "?relay", ZDP_SimpleDescMsg
ZDP_SimpleDescReq   SYMBOL "ZDP_SimpleDescReq"
??ZDP_SimpleDescReq?relay SYMBOL "?relay", ZDP_SimpleDescReq
ZDP_UserDescRsp     SYMBOL "ZDP_UserDescRsp"
??ZDP_UserDescRsp?relay SYMBOL "?relay", ZDP_UserDescRsp
ZDP_UserDescSet     SYMBOL "ZDP_UserDescSet"
??ZDP_UserDescSet?relay SYMBOL "?relay", ZDP_UserDescSet
zdpProcessAddrReq   SYMBOL "zdpProcessAddrReq"
??zdpProcessAddrReq?relay SYMBOL "?relay", zdpProcessAddrReq

        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AF_DataRequest
        FUNCTION AF_DataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCmp
        FUNCTION sAddrExtCmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCpy
        FUNCTION sAddrExtCpy,0202H
        ARGFRAME ISTACK, 1, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 1, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetShortAddr
        FUNCTION NLME_GetShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetExtAddr
        FUNCTION NLME_GetExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_buffer_uint32
        FUNCTION osal_buffer_uint32,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_allocate
        FUNCTION osal_msg_allocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_send
        FUNCTION osal_msg_send,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_InMsgCB
        FUNCTION ZDApp_InMsgCB,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??AF_DataRequest?relay
        FUNCTION ??AF_DataRequest?relay,00H
        EXTERN ??NLME_GetExtAddr?relay
        FUNCTION ??NLME_GetExtAddr?relay,00H
        EXTERN ??NLME_GetShortAddr?relay
        FUNCTION ??NLME_GetShortAddr?relay,00H
        EXTERN ??ZDApp_InMsgCB?relay
        FUNCTION ??ZDApp_InMsgCB?relay,00H
        EXTERN ??ZDO_ProcessActiveEPReq?relay
        FUNCTION ??ZDO_ProcessActiveEPReq?relay,00H
        EXTERN ??ZDO_ProcessMatchDescReq?relay
        FUNCTION ??ZDO_ProcessMatchDescReq?relay,00H
        EXTERN ??ZDO_ProcessNodeDescReq?relay
        FUNCTION ??ZDO_ProcessNodeDescReq?relay,00H
        EXTERN ??ZDO_ProcessPowerDescReq?relay
        FUNCTION ??ZDO_ProcessPowerDescReq?relay,00H
        EXTERN ??ZDO_ProcessServerDiscReq?relay
        FUNCTION ??ZDO_ProcessServerDiscReq?relay,00H
        EXTERN ??ZDO_ProcessSimpleDescReq?relay
        FUNCTION ??ZDO_ProcessSimpleDescReq?relay,00H
        EXTERN ??ZDO_ProcessUserDescReq?relay
        FUNCTION ??ZDO_ProcessUserDescReq?relay,00H
        EXTERN ??ZDO_ProcessUserDescSet?relay
        FUNCTION ??ZDO_ProcessUserDescSet?relay,00H
        EXTERN ??osal_buffer_uint32?relay
        FUNCTION ??osal_buffer_uint32?relay,00H
        EXTERN ??osal_mem_alloc?relay
        FUNCTION ??osal_mem_alloc?relay,00H
        EXTERN ??osal_mem_free?relay
        FUNCTION ??osal_mem_free?relay,00H
        EXTERN ??osal_memcpy?relay
        FUNCTION ??osal_memcpy?relay,00H
        EXTERN ??osal_memset?relay
        FUNCTION ??osal_memset?relay,00H
        EXTERN ??osal_msg_allocate?relay
        FUNCTION ??osal_msg_allocate?relay,00H
        EXTERN ??osal_msg_send?relay
        FUNCTION ??osal_msg_send?relay,00H
        EXTERN ??sAddrExtCmp?relay
        FUNCTION ??sAddrExtCmp?relay,00H
        EXTERN ??sAddrExtCpy?relay
        FUNCTION ??sAddrExtCpy?relay,00H
        EXTERN ZDAppNwkAddr
        EXTERN ZDApp_epDesc
        EXTERN saveExtAddr

// C:\Users\25814\Desktop\6.ZStack-2.5.1a¹¤³ÌÄ£°å\Components\stack\zdo\ZDProfile.c
//    1 /**************************************************************************************************
//    2   Filename:       ZDProfile.c
//    3   Revised:        $Date: 2010-10-13 10:54:13 -0700 (Wed, 13 Oct 2010) $
//    4   Revision:       $Revision: 24112 $
//    5 
//    6   Description:    This is the Zigbee Device Profile.
//    7 
//    8 
//    9   Copyright 2004-2010 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License").  You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product.  Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 /*********************************************************************
//   41  * INCLUDES
//   42  */
//   43 #include "ZComdef.h"
//   44 #include "OSAL.h"
//   45 #include "AF.h"
//   46 #include "NLMEDE.h"
//   47 #include "nwk_util.h"
//   48 #include "APS.h"
//   49 
//   50 #include "AddrMgr.h"
//   51 #include "ZDConfig.h"
//   52 #include "ZDProfile.h"
//   53 #include "ZDObject.h"
//   54 #include "ZDNwkMgr.h"
//   55 
//   56 #if defined( LCD_SUPPORTED )
//   57   #include "OnBoard.h"
//   58 #endif
//   59 
//   60 #include "nwk_util.h"
//   61 
//   62 #if defined( MT_ZDO_FUNC )
//   63   #include "MT_ZDO.h"
//   64 #endif
//   65 
//   66 /*********************************************************************
//   67  * MACROS
//   68  */
//   69 
//   70 #define ZADDR_TO_AFADDR( pZADDR, AFADDR ) {                            \ 
//   71   (AFADDR).endPoint = ZDP_AF_ENDPOINT;                                 \ 
//   72   (AFADDR).addrMode = (afAddrMode_t)(pZADDR)->addrMode;                \ 
//   73   (AFADDR).addr.shortAddr = (pZADDR)->addr.shortAddr;                  \ 
//   74 }
//   75 
//   76 #define FillAndSendBuffer( TRANSSEQ, ADDR, ID, LEN, BUF ) {     \ 
//   77   afStatus_t stat;                                    \ 
//   78   ZDP_TmpBuf = (BUF)+1;                               \ 
//   79   stat = fillAndSend( (TRANSSEQ), (ADDR), (ID), (LEN) );          \ 
//   80   osal_mem_free( (BUF) );                             \ 
//   81   ZDP_TmpBuf = ZDP_Buf+1;                             \ 
//   82   return stat;                                        \ 
//   83 }
//   84 
//   85 #define FillAndSendTxOptions( TRANSSEQ, ADDR, ID, LEN, TxO ) {  \ 
//   86   afStatus_t stat;                                    \ 
//   87   ZDP_TxOptions = (TxO);                              \ 
//   88   stat = fillAndSend( (TRANSSEQ), (ADDR), (ID), (LEN) );          \ 
//   89   ZDP_TxOptions = AF_TX_OPTIONS_NONE;                 \ 
//   90   return stat;                                        \ 
//   91 }
//   92 
//   93 #define FillAndSendBufferTxOptions( TRANSSEQ, ADDR, ID, LEN, BUF, TxO ) { \ 
//   94   afStatus_t stat;                                    \ 
//   95   ZDP_TmpBuf = (BUF)+1;                               \ 
//   96   ZDP_TxOptions = (TxO);                              \ 
//   97   stat = fillAndSend( (TRANSSEQ), (ADDR), (ID), (LEN) );          \ 
//   98   osal_mem_free( (BUF) );                             \ 
//   99   ZDP_TmpBuf = ZDP_Buf+1;                             \ 
//  100   ZDP_TxOptions = AF_TX_OPTIONS_NONE;                 \ 
//  101   return stat;                                        \ 
//  102 }
//  103 
//  104 /*********************************************************************
//  105  * CONSTANTS
//  106  */
//  107 
//  108 #define ZDP_BUF_SZ          80
//  109 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  110 CONST byte ZDP_AF_ENDPOINT = 0;
ZDP_AF_ENDPOINT:
        DB 0
//  111 
//  112 /*********************************************************************
//  113  * TYPEDEFS
//  114  */
//  115 typedef struct
//  116 {
//  117   void *next;
//  118   uint8 taskID;
//  119   uint16 clusterID;
//  120 } ZDO_MsgCB_t;
//  121 
//  122 
//  123 /*********************************************************************
//  124  * GLOBAL VARIABLES
//  125  */
//  126 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  127 byte ZDP_TransID = 0;
ZDP_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  128 
//  129 /*********************************************************************
//  130  * EXTERNAL VARIABLES
//  131  */
//  132 
//  133 extern endPointDesc_t ZDApp_epDesc;
//  134 
//  135 /*********************************************************************
//  136  * EXTERNAL FUNCTIONS
//  137  */
//  138 
//  139 /*********************************************************************
//  140  * LOCAL FUNCTIONS
//  141  */
//  142 
//  143 static afStatus_t fillAndSend( uint8 *transSeq, zAddrType_t *addr, cId_t clusterID, byte len );
//  144 uint8 ZDO_SendMsgCBs( zdoIncomingMsg_t *inMsg );
//  145 void zdpProcessAddrReq( zdoIncomingMsg_t *inMsg );
//  146 
//  147 /*********************************************************************
//  148  * LOCAL VARIABLES
//  149  */
//  150 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  151 static uint8  ZDP_Buf[ ZDP_BUF_SZ ];
ZDP_Buf:
        DS 80
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_I:XDATA:NOROOT(0)
//  152 static uint8 *ZDP_TmpBuf = ZDP_Buf+1;
ZDP_TmpBuf:
        DATA16
        DS 2
        REQUIRE `?<Initializer for ZDP_TmpBuf>`
        REQUIRE __INIT_XDATA_I
//  153 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  154 byte ZDP_TxOptions = AF_TX_OPTIONS_NONE;
ZDP_TxOptions:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  155 ZDO_MsgCB_t *zdoMsgCBs = (ZDO_MsgCB_t *)NULL;
zdoMsgCBs:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  156 
//  157 /*********************************************************************
//  158  * ZDO Message Processing table
//  159  */
//  160 
//  161 typedef void (*pfnZDPMsgProcessor)( zdoIncomingMsg_t *inMsg );
//  162 
//  163 typedef struct
//  164 {
//  165   uint16                clusterID;
//  166   pfnZDPMsgProcessor    pFn;
//  167 } zdpMsgProcItem_t;
//  168 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  169 CONST zdpMsgProcItem_t zdpMsgProcs[] =
zdpMsgProcs:
        DATA16
        DW 1
        DW ??zdpProcessAddrReq?relay
        DW 2
        DW ??ZDO_ProcessNodeDescReq?relay
        DW 3
        DW ??ZDO_ProcessPowerDescReq?relay
        DW 4
        DW ??ZDO_ProcessSimpleDescReq?relay
        DW 5
        DW ??ZDO_ProcessActiveEPReq?relay
        DW 6
        DW ??ZDO_ProcessMatchDescReq?relay
        DW 17
        DW ??ZDO_ProcessUserDescReq?relay
        DW 20
        DW ??ZDO_ProcessUserDescSet?relay
        DW 21
        DW ??ZDO_ProcessServerDiscReq?relay
        DW 65535
        DW 0H
//  170 {
//  171 #if ( RFD_RCVC_ALWAYS_ON==TRUE ) || ( ZG_BUILD_RTR_TYPE )
//  172   // These aren't processed by sleeping end devices.
//  173   { NWK_addr_req,           zdpProcessAddrReq },
//  174   { Device_annce,           ZDO_ProcessDeviceAnnce },
//  175 #endif
//  176   { IEEE_addr_req,          zdpProcessAddrReq },
//  177   { Node_Desc_req,          ZDO_ProcessNodeDescReq },
//  178   { Power_Desc_req,         ZDO_ProcessPowerDescReq },
//  179   { Simple_Desc_req,        ZDO_ProcessSimpleDescReq },
//  180   { Active_EP_req,          ZDO_ProcessActiveEPReq },
//  181   { Match_Desc_req,         ZDO_ProcessMatchDescReq },
//  182 #if defined ( ZDO_MGMT_NWKDISC_RESPONSE )
//  183   { Mgmt_NWK_Disc_req,      ZDO_ProcessMgmtNwkDiscReq },
//  184 #endif
//  185 #if defined ( ZDO_MGMT_LQI_RESPONSE ) && ( ZG_BUILD_RTR_TYPE )
//  186   { Mgmt_Lqi_req,           ZDO_ProcessMgmtLqiReq },
//  187 #endif
//  188 #if defined ( ZDO_MGMT_RTG_RESPONSE ) && ( ZG_BUILD_RTR_TYPE )
//  189   { Mgmt_Rtg_req,           ZDO_ProcessMgmtRtgReq },
//  190 #endif
//  191 #if defined ( ZDO_MGMT_BIND_RESPONSE ) && defined ( REFLECTOR )
//  192   { Mgmt_Bind_req,          ZDO_ProcessMgmtBindReq },
//  193 #endif
//  194 #if defined ( ZDO_MGMT_JOINDIRECT_RESPONSE ) && ( ZG_BUILD_RTR_TYPE )
//  195   { Mgmt_Direct_Join_req,   ZDO_ProcessMgmtDirectJoinReq },
//  196 #endif
//  197 #if defined ( ZDO_MGMT_LEAVE_RESPONSE )
//  198   { Mgmt_Leave_req,         ZDO_ProcessMgmtLeaveReq },
//  199 #endif
//  200 #if defined ( ZDO_MGMT_PERMIT_JOIN_RESPONSE )  && ( ZG_BUILD_RTR_TYPE )
//  201   { Mgmt_Permit_Join_req,   ZDO_ProcessMgmtPermitJoinReq },
//  202 #endif
//  203 #if defined ( ZDO_USERDESC_RESPONSE )
//  204   { User_Desc_req,          ZDO_ProcessUserDescReq },
//  205 #endif
//  206 #if defined ( ZDO_USERDESCSET_RESPONSE )
//  207   { User_Desc_set,          ZDO_ProcessUserDescSet },
//  208 #endif
//  209 #if defined ( ZDO_SERVERDISC_RESPONSE )
//  210   { Server_Discovery_req,   ZDO_ProcessServerDiscReq },
//  211 #endif
//  212   {0xFFFF, NULL} // Last
//  213 };
//  214 
//  215 /*********************************************************************
//  216  * @fn          fillAndSend
//  217  *
//  218  * @brief       Combined to reduce space
//  219  *
//  220  * @param
//  221  * @param
//  222  *
//  223  * @return      afStatus_t
//  224  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  225 static afStatus_t fillAndSend( uint8 *transSeq, zAddrType_t *addr, cId_t clusterID, byte len )
fillAndSend:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function fillAndSend
        CODE
//  226 {
        FUNCALL fillAndSend, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL fillAndSend, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 28)
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     ?V0 + 6,R1
        MOV     A,#0x1c
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine114_0 & 0xFFFF
//  227   afAddrType_t afAddr;
//  228 
//  229   osal_memset( &afAddr, 0, sizeof(afAddrType_t) );
??CrossCallReturnLabel_203:
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0xc
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memset?relay
//  230   ZADDR_TO_AFADDR( addr, afAddr );
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        POP     A
        CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_26:
        MOVX    @DPTR,A
//  231 
//  232   *(ZDP_TmpBuf-1) = *transSeq;
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        ADD     A,#-0x1
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
        MOV     ?V0 + 5,A
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        MOVX    @DPTR,A
//  233 
//  234   return AF_DataRequest( &afAddr, &ZDApp_epDesc, clusterID,
//  235                            (uint16)(len+1), (uint8*)(ZDP_TmpBuf-1),
//  236                            transSeq, ZDP_TxOptions,  AF_DEFAULT_RADIUS );
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V0 + 7,#0x1e
        MOV     R0,#?V0 + 7
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 29)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 31)
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 33)
        MOV     ?V0 + 2,?V0 + 6
        MOV     A,?V0 + 2
        ADD     A,#0x1
        MOV     ?V0 + 2,A
        CLR     A
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 35)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 37)
        MOV     DPTR,#ZDP_TxOptions
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     R4,#ZDApp_epDesc & 0xff
        MOV     R5,#(ZDApp_epDesc >> 8) & 0xff
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AF_DataRequest?relay
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,#0xc
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock0
//  237 
//  238 }
//  239 
//  240 /*********************************************************************
//  241  * @fn          ZDP_SendData
//  242  *
//  243  * @brief       This builds and send a request message that has
//  244  *              NWKAddrOfInterest as its only parameter.
//  245  *
//  246  * @param       dstAddr - destination address
//  247  * @param       cmd - clusterID
//  248  * @param       dataLen - number of bytes of data
//  249  * @param       data - pointer to the data
//  250  * @param       SecurityEnable - Security Options
//  251  *
//  252  * @return      afStatus_t
//  253  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  254 afStatus_t ZDP_SendData( uint8 *TransSeq, zAddrType_t *dstAddr, uint16 cmd,
ZDP_SendData:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function ZDP_SendData
        CODE
//  255                         byte len, uint8 *buf, byte SecurityEnable )
//  256 {
        FUNCALL ZDP_SendData, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine111_0 & 0xFFFF
??CrossCallReturnLabel_189:
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_46:
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
//  257   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ?Subroutine42 & 0xFFFF
//  258   byte cnt = len;
??CrossCallReturnLabel_57:
        MOV     R7,A
        SJMP    ??ZDP_SendData_0
//  259 
//  260   while ( cnt-- )
//  261   {
//  262     *pBuf++ = *buf++;
??ZDP_SendData_1:
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        LCALL   ?Subroutine43 & 0xFFFF
//  263   }
??CrossCallReturnLabel_60:
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        INC     DPTR
        MOV     ?V0 + 4,DPL
        MOV     ?V0 + 5,DPH
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
??ZDP_SendData_0:
        MOV     ?V0 + 0,R7
        MOV     A,#-0x1
        ADD     A,?V0 + 0
        DEC     R7
        INC     A
        JNZ     ??ZDP_SendData_1
//  264 
//  265   FillAndSendTxOptions( TransSeq, dstAddr, cmd, len, ((SecurityEnable) ? AF_EN_SECURITY : 0) );
        MOV     A,?V0 + 1
        MOV     DPTR,#ZDP_TxOptions
        JZ      ??ZDP_SendData_2
        MOV     A,#0x40
        SJMP    ??ZDP_SendData_3
??ZDP_SendData_2:
        CLR     A
??ZDP_SendData_3:
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R6
        MOV     R1,A
        LCALL   ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_269:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
        CFI EndBlock cfiBlock1
        REQUIRE ?Subroutine1
        ; // Fall through to label ?Subroutine1
//  266 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock2
//  267 
//  268 /*********************************************************************
//  269  * @fn          ZDP_NWKAddrOfInterestReq
//  270  *
//  271  * @brief       This builds and send a request message that has
//  272  *              NWKAddrOfInterest as its only parameter.
//  273  *
//  274  * @param       dstAddr - destination address
//  275  * @param       nwkAddr - 16 bit address
//  276  * @param       SecurityEnable - Security Options
//  277  *
//  278  * @return      afStatus_t
//  279  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  280 afStatus_t ZDP_NWKAddrOfInterestReq( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_NWKAddrOfInterestReq:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function ZDP_NWKAddrOfInterestReq
        CODE
//  281                                      byte cmd, byte SecurityEnable )
//  282 {
        FUNCALL ZDP_NWKAddrOfInterestReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
//  283   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  284 
//  285   ZDP_TmpBuf[0] = LO_UINT16( nwkAddr );
        LCALL   ?Subroutine17 & 0xFFFF
//  286   ZDP_TmpBuf[1] = HI_UINT16( nwkAddr );
//  287 
//  288   return fillAndSend( &ZDP_TransID, dstAddr, cmd, 2 );
??CrossCallReturnLabel_9:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 0,R6
        LJMP    ?Subroutine2 & 0xFFFF
        CFI EndBlock cfiBlock3
//  289 }
//  290 
//  291 /*********************************************************************
//  292  * Address Requests
//  293  */
//  294 
//  295 /*********************************************************************
//  296  * @fn          ZDP_NwkAddrReq
//  297  *
//  298  * @brief       This builds and send a NWK_addr_req message.  This
//  299  *              function sends a broadcast message looking for a 16
//  300  *              bit address with a 64 bit address as bait.
//  301  *
//  302  * @param       IEEEAddress - looking for this device
//  303  * @param       SecurityEnable - Security Options
//  304  *
//  305  * @return      afStatus_t
//  306  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  307 afStatus_t ZDP_NwkAddrReq( uint8 *IEEEAddress, byte ReqType,
ZDP_NwkAddrReq:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function ZDP_NwkAddrReq
        CODE
//  308                            byte StartIndex, byte SecurityEnable )
//  309 {
        FUNCALL ZDP_NwkAddrReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_NwkAddrReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_NwkAddrReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 9
        MOV     A,#-0x9
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 2,R1
        MOV     ?V0 + 3,R4
//  310   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ?Subroutine41 & 0xFFFF
//  311   byte len = Z_EXTADDR_LEN + 1 + 1;  // IEEEAddress + ReqType + StartIndex.
//  312   zAddrType_t dstAddr;
//  313 
//  314   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  315 
//  316   if ( osal_ExtAddrEqual( saveExtAddr, IEEEAddress ) == FALSE )
??CrossCallReturnLabel_212:
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,#saveExtAddr & 0xff
        MOV     R3,#(saveExtAddr >> 8) & 0xff
        LCALL   ??sAddrExtCmp?relay
        MOV     A,R1
        JNZ     ??ZDP_NwkAddrReq_0
//  317   {
//  318     dstAddr.addrMode = AddrBroadcast;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine75 & 0xFFFF
//  319     dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
//  320   }
??CrossCallReturnLabel_107:
        SJMP    ??CrossCallReturnLabel_27
//  321   else
//  322   {
//  323     dstAddr.addrMode = Addr16Bit;
??ZDP_NwkAddrReq_0:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
//  324     dstAddr.addr.shortAddr = ZDAppNwkAddr.addr.shortAddr;
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?Subroutine26 & 0xFFFF
//  325   }
??CrossCallReturnLabel_27:
        MOVX    @DPTR,A
//  326 
//  327   pBuf = osal_cpyExtAddr( pBuf, IEEEAddress );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ?Subroutine71 & 0xFFFF
//  328 
//  329   *pBuf++ = ReqType;
??CrossCallReturnLabel_100:
        MOV     A,?V0 + 2
        MOVX    @DPTR,A
        INC     DPTR
//  330   *pBuf++ = StartIndex;
        MOV     A,?V0 + 3
        MOVX    @DPTR,A
//  331 
//  332   return fillAndSend( &ZDP_TransID, &dstAddr, NWK_addr_req, len );
        ; Setup parameters for call to function fillAndSend
        CLR     A
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 25)
        MOV     R1,#0xa
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_259:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        SJMP    ?Subroutine1
        CFI EndBlock cfiBlock4
//  333 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine26:
        CFI Block cfiCond5 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_26
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond6 Using cfiCommon0
        CFI (cfiCond6) NoFunction
        CFI (cfiCond6) Conditional ??CrossCallReturnLabel_27
        CFI (cfiCond6) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond6) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond6) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond6) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond6) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond6) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond6) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond6) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond6) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond6) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond6) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond6) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond6) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond6) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond6) CFA_SP SP+0
        CFI (cfiCond6) CFA_XSP16 add(XSP16, 23)
        CFI Block cfiPicker7 Using cfiCommon1
        CFI (cfiPicker7) NoFunction
        CFI (cfiPicker7) Picker
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_176:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        RET
        CFI EndBlock cfiCond5
        CFI EndBlock cfiCond6
        CFI EndBlock cfiPicker7
//  334 
//  335 /*********************************************************************
//  336  * @fn          ZDP_IEEEAddrReq
//  337  *
//  338  * @brief       This builds and send a IEEE_addr_req message.  This
//  339  *              function sends a unicast message looking for a 64
//  340  *              bit IEEE address with a 16 bit address as bait.
//  341  *
//  342  * @param       ReqType - ZDP_IEEEADDR_REQTYPE_SINGLE or
//  343  *                        ZDP_IEEEADDR_REQTYPE_EXTENDED
//  344  * @param       SecurityEnable - Security Options
//  345  *
//  346  * @return      afStatus_t
//  347  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  348 afStatus_t ZDP_IEEEAddrReq( uint16 shortAddr, byte ReqType,
ZDP_IEEEAddrReq:
        CFI Block cfiBlock8 Using cfiCommon0
        CFI Function ZDP_IEEEAddrReq
        CODE
//  349                             byte StartIndex, byte SecurityEnable )
//  350 {
        FUNCALL ZDP_IEEEAddrReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 9
        MOV     A,#-0x9
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
//  351   uint8 *pBuf = ZDP_TmpBuf;
        MOV     DPTR,#ZDP_TmpBuf
        LCALL   ??Subroutine107_0 & 0xFFFF
//  352   byte len = 2 + 1 + 1;  // shortAddr + ReqType + StartIndex.
//  353   zAddrType_t dstAddr;
//  354 
//  355   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  356 
//  357   dstAddr.addrMode = (afAddrMode_t)Addr16Bit;
??CrossCallReturnLabel_162:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
//  358   dstAddr.addr.shortAddr = shortAddr;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//  359 
//  360   *pBuf++ = LO_UINT16( shortAddr );
        MOV     A,R2
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
        INC     DPTR
//  361   *pBuf++ = HI_UINT16( shortAddr );
        MOV     A,R3
        MOVX    @DPTR,A
        INC     DPTR
//  362 
//  363   *pBuf++ = ReqType;
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
//  364   *pBuf++ = StartIndex;
        MOV     A,R7
        MOVX    @DPTR,A
//  365 
//  366   return fillAndSend( &ZDP_TransID, &dstAddr, IEEE_addr_req, len );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 0,#0x1
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 21)
        MOV     R1,#0x4
        CFI EndBlock cfiBlock8
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8
//  367 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine8:
        CFI Block cfiBlock9 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 21)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_260:
        LCALL   ?DEALLOC_XSTACK8
        CFI EndBlock cfiBlock9
        REQUIRE ??Subroutine91_0
        ; // Fall through to label ??Subroutine91_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine91_0:
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 19)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x9
        SJMP    ??Subroutine94_0
        CFI EndBlock cfiBlock10

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
        CFI Block cfiBlock11 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R1,#0x2
        CFI EndBlock cfiBlock11
        REQUIRE ??Subroutine92_0
        ; // Fall through to label ??Subroutine92_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine92_0:
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
        CFI EndBlock cfiBlock12
        REQUIRE ??Subroutine93_0
        ; // Fall through to label ??Subroutine93_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine93_0:
        CFI Block cfiBlock13 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL   ??Subroutine124_0 & 0xFFFF
        CFI EndBlock cfiBlock13
??CrossCallReturnLabel_270:
        REQUIRE ??Subroutine94_0
        ; // Fall through to label ??Subroutine94_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine94_0:
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 19)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Valid
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock14
//  368 
//  369 /*********************************************************************
//  370  * @fn          ZDP_MatchDescReq
//  371  *
//  372  * @brief       This builds and send a Match_Desc_req message.  This
//  373  *              function sends a broadcast or unicast message
//  374  *              requesting the list of endpoint/interfaces that
//  375  *              match profile ID and cluster IDs.
//  376  *
//  377  * @param       dstAddr - destination address
//  378  * @param       nwkAddr - network address of interest
//  379  * @param       ProfileID - Profile ID
//  380  * @param       NumInClusters - number of input clusters
//  381  * @param       InClusterList - input cluster ID list
//  382  * @param       NumOutClusters - number of output clusters
//  383  * @param       OutClusterList - output cluster ID list
//  384  * @param       SecurityEnable - Security Options
//  385  *
//  386  * @return      afStatus_t
//  387  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  388 afStatus_t ZDP_MatchDescReq( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_MatchDescReq:
        CFI Block cfiBlock15 Using cfiCommon0
        CFI Function ZDP_MatchDescReq
        CODE
//  389                                 uint16 ProfileID,
//  390                                 byte NumInClusters, cId_t *InClusterList,
//  391                                 byte NumOutClusters, cId_t *OutClusterList,
//  392                                 byte SecurityEnable )
//  393 {
        FUNCALL ZDP_MatchDescReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine114_0 & 0xFFFF
??CrossCallReturnLabel_204:
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine107_0 & 0xFFFF
??CrossCallReturnLabel_163:
        MOV     ?V0 + 2,R0
        MOV     ?V0 + 3,R1
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine107_0 & 0xFFFF
??CrossCallReturnLabel_164:
        MOV     ?V0 + 6,R0
        MOV     ?V0 + 7,R1
//  394   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ?Subroutine42 & 0xFFFF
//  395   // nwkAddr+ProfileID+NumInClusters+NumOutClusters.
//  396   byte i, len = 2 + 2 + 1 + 1;  // nwkAddr+ProfileID+NumInClusters+NumOutClusters.
//  397 
//  398   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  399 
//  400   len += (NumInClusters + NumOutClusters) * sizeof(uint16);
??CrossCallReturnLabel_58:
        ADD     A,R7
        CLR     C
        RLC     A
        ADD     A,#0x6
        MOV     ?V0 + 4,A
//  401 
//  402   if ( len >= ZDP_BUF_SZ-1 )
        CLR     C
        SUBB    A,#0x4f
        JC      ??ZDP_MatchDescReq_0
//  403   {
//  404     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??ZDP_MatchDescReq_1 & 0xFFFF
//  405   }
//  406 
//  407   // The spec changed in Zigbee 2007 (2.4.3.1.7.1) to not allow sending
//  408   // this command to 0xFFFF.  So, here we will filter this and replace 
//  409   // with 0xFFFD to only send to devices with RX ON.  This includes the 
//  410   // network address of interest.
//  411   if ( ((dstAddr->addrMode == AddrBroadcast) || (dstAddr->addrMode == Addr16Bit))
//  412       && (dstAddr->addr.shortAddr == NWK_BROADCAST_SHORTADDR_DEVALL) )
??ZDP_MatchDescReq_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0xf
        JZ      ??ZDP_MatchDescReq_2
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x2
        JNZ     ??ZDP_MatchDescReq_3
??ZDP_MatchDescReq_2:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??ZDP_MatchDescReq_4
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
??ZDP_MatchDescReq_4:
        JNZ     ??ZDP_MatchDescReq_3
//  413   {
//  414     dstAddr->addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x3
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x1
        MOVX    @DPTR,A
//  415   }
//  416   if ( nwkAddr == NWK_BROADCAST_SHORTADDR_DEVALL )
??ZDP_MatchDescReq_3:
        MOV     A,#-0x1
        XRL     A,R4
        JNZ     ??ZDP_MatchDescReq_5
        MOV     A,#-0x1
        XRL     A,R5
??ZDP_MatchDescReq_5:
        JNZ     ??ZDP_MatchDescReq_6
//  417   {
//  418     nwkAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
        MOV     R4,#-0x3
        MOV     R5,#-0x1
//  419   }
//  420   
//  421   *pBuf++ = LO_UINT16( nwkAddr );   // NWKAddrOfInterest
??ZDP_MatchDescReq_6:
        MOV     A,R4
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
        INC     DPTR
//  422   *pBuf++ = HI_UINT16( nwkAddr );
        MOV     A,R5
        MOVX    @DPTR,A
        INC     DPTR
//  423 
//  424   *pBuf++ = LO_UINT16( ProfileID );   // Profile ID
        LCALL   ??Subroutine125_0 & 0xFFFF
//  425   *pBuf++ = HI_UINT16( ProfileID );
??CrossCallReturnLabel_283:
        INC     DPTR
//  426 
//  427   *pBuf++ = NumInClusters; // Input cluster list
        MOV     A,R6
        LCALL   ??Subroutine119_0 & 0xFFFF
//  428   if ( NumInClusters )
??CrossCallReturnLabel_235:
        JZ      ??ZDP_MatchDescReq_7
//  429   {
//  430     for (i=0; i<NumInClusters; ++i)  {
        MOV     ?V0 + 0,#0x0
//  431       *pBuf++ = LO_UINT16( InClusterList[i] );
??ZDP_MatchDescReq_8:
        MOV     A,?V0 + 0
        CLR     C
        RLC     A
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        MOV     A,?V0 + 2
        ADD     A,R4
        MOV     R4,A
        MOV     A,?V0 + 3
        LCALL   ?Subroutine12 & 0xFFFF
//  432       *pBuf++ = HI_UINT16( InClusterList[i] );
//  433     }
//  434   }
??CrossCallReturnLabel_2:
        SUBB    A,R6
        JC      ??ZDP_MatchDescReq_8
//  435 
//  436   *pBuf++ = NumOutClusters; // Output cluster list
??ZDP_MatchDescReq_7:
        MOV     A,R7
        LCALL   ?Subroutine50 & 0xFFFF
//  437   if ( NumOutClusters )
??CrossCallReturnLabel_238:
        JZ      ??ZDP_MatchDescReq_9
//  438   {
//  439     for (i=0; i<NumOutClusters; ++i)  {
        MOV     ?V0 + 0,#0x0
//  440       *pBuf++ = LO_UINT16( OutClusterList[i] );
??ZDP_MatchDescReq_10:
        MOV     A,?V0 + 0
        CLR     C
        RLC     A
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        MOV     A,?V0 + 6
        ADD     A,R4
        MOV     R4,A
        MOV     A,?V0 + 7
        LCALL   ?Subroutine12 & 0xFFFF
//  441       *pBuf++ = HI_UINT16( OutClusterList[i] );
//  442     }
//  443   }
??CrossCallReturnLabel_3:
        SUBB    A,R7
        JC      ??ZDP_MatchDescReq_10
//  444 
//  445   return fillAndSend( &ZDP_TransID, dstAddr, Match_Desc_req, len );
??ZDP_MatchDescReq_9:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 0,#0x6
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     R1,?V0 + 4
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_262:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
??ZDP_MatchDescReq_1:
        LJMP    ??Subroutine110_0 & 0xFFFF
        CFI EndBlock cfiBlock15
//  446 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine42:
        CFI Block cfiCond16 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_57
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond17 Using cfiCommon0
        CFI (cfiCond17) NoFunction
        CFI (cfiCond17) Conditional ??CrossCallReturnLabel_58
        CFI (cfiCond17) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond17) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond17) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond17) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond17) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond17) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond17) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond17) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond17) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond17) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond17) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond17) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond17) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond17) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond17) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond17) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond17) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond17) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond17) CFA_SP SP+0
        CFI (cfiCond17) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond18 Using cfiCommon0
        CFI (cfiCond18) NoFunction
        CFI (cfiCond18) Conditional ??CrossCallReturnLabel_59
        CFI (cfiCond18) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond18) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond18) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond18) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond18) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond18) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond18) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond18) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond18) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond18) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond18) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond18) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond18) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond18) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond18) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond18) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond18) CFA_SP SP+0
        CFI (cfiCond18) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker19 Using cfiCommon1
        CFI (cfiPicker19) NoFunction
        CFI (cfiPicker19) Picker
        MOV     DPTR,#ZDP_TmpBuf
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_177:
        MOV     A,R6
        RET
        CFI EndBlock cfiCond16
        CFI EndBlock cfiCond17
        CFI EndBlock cfiCond18
        CFI EndBlock cfiPicker19

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine12:
        CFI Block cfiCond20 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_2
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond21 Using cfiCommon0
        CFI (cfiCond21) NoFunction
        CFI (cfiCond21) Conditional ??CrossCallReturnLabel_3
        CFI (cfiCond21) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond21) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond21) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond21) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond21) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond21) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond21) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond21) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond21) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond21) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond21) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond21) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond21) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond21) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond21) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond21) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond21) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond21) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond21) CFA_SP SP+0
        CFI (cfiCond21) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker22 Using cfiCommon1
        CFI (cfiPicker22) NoFunction
        CFI (cfiPicker22) Picker
        ADDC    A,R5
        MOV     R5,A
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_241:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_249:
        INC     ?V0 + 0
        MOV     A,?V0 + 0
        CLR     C
        RET
        CFI EndBlock cfiCond20
        CFI EndBlock cfiCond21
        CFI EndBlock cfiPicker22
//  447 
//  448 /*********************************************************************
//  449  * @fn          ZDP_SimpleDescReq
//  450  *
//  451  * @brief       This builds and send a NWK_Simple_Desc_req
//  452  *              message.  This function sends unicast message to the
//  453  *              destination device.
//  454  *
//  455  * @param       dstAddr - destination address
//  456  * @param       nwkAddr - 16 bit address
//  457  * @param       epIntf - endpoint/interface
//  458  * @param       SecurityEnable - Security Options
//  459  *
//  460  * @return      afStatus_t
//  461  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  462 afStatus_t ZDP_SimpleDescReq( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_SimpleDescReq:
        CFI Block cfiBlock23 Using cfiCommon0
        CFI Function ZDP_SimpleDescReq
        CODE
//  463                                     byte endPoint, byte SecurityEnable )
//  464 
//  465 {
        FUNCALL ZDP_SimpleDescReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  466   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  467 
//  468   ZDP_TmpBuf[0] = LO_UINT16( nwkAddr );
        LCALL   ?Subroutine17 & 0xFFFF
//  469   ZDP_TmpBuf[1] = HI_UINT16( nwkAddr );
//  470   ZDP_TmpBuf[2] = endPoint;
??CrossCallReturnLabel_10:
        LCALL   ?Subroutine28 & 0xFFFF
//  471 
//  472   return fillAndSend( &ZDP_TransID, dstAddr, Simple_Desc_req, 3 );
??CrossCallReturnLabel_35:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 0,#0x4
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R1,#0x3
        LJMP    ??Subroutine92_0 & 0xFFFF
        CFI EndBlock cfiBlock23
//  473 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine17:
        CFI Block cfiCond24 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_9
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond25 Using cfiCommon0
        CFI (cfiCond25) NoFunction
        CFI (cfiCond25) Conditional ??CrossCallReturnLabel_10
        CFI (cfiCond25) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond25) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond25) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond25) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond25) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond25) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond25) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond25) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond25) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond25) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond25) CFA_SP SP+0
        CFI (cfiCond25) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker26 Using cfiCommon1
        CFI (cfiPicker26) NoFunction
        CFI (cfiPicker26) Picker
        MOV     DPTR,#ZDP_TmpBuf
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_185:
        MOV     A,R4
        MOVX    @DPTR,A
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_132:
        MOV     A,R5
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond24
        CFI EndBlock cfiCond25
        CFI EndBlock cfiPicker26
//  474 
//  475 /*********************************************************************
//  476  * @fn          ZDP_UserDescSet
//  477  *
//  478  * @brief       This builds and send a User_Desc_set message to set
//  479  *              the user descriptor.  This function sends unicast
//  480  *              message to the destination device.
//  481  *
//  482  * @param       dstAddr - destination address
//  483  * @param       nwkAddr - 16 bit address
//  484  * @param       UserDescriptor - user descriptor
//  485  * @param       SecurityEnable - Security Options
//  486  *
//  487  * @return      afStatus_t
//  488  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  489 afStatus_t ZDP_UserDescSet( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_UserDescSet:
        CFI Block cfiBlock27 Using cfiCommon0
        CFI Function ZDP_UserDescSet
        CODE
//  490                           UserDescriptorFormat_t *UserDescriptor,
//  491                           byte SecurityEnable )
//  492 {
        FUNCALL ZDP_UserDescSet, osal_memcpy
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 1, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_UserDescSet, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_UserDescSet, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x13
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 19)
        ; Saved register size: 19
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine107_0 & 0xFFFF
??CrossCallReturnLabel_165:
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
//  493   uint8 *pBuf = ZDP_TmpBuf;
        MOV     DPTR,#ZDP_TmpBuf
        LCALL   ??Subroutine111_0 & 0xFFFF
//  494   byte len = (UserDescriptor->len < AF_MAX_USER_DESCRIPTOR_LEN) ?
//  495               UserDescriptor->len : AF_MAX_USER_DESCRIPTOR_LEN;
??CrossCallReturnLabel_190:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,#0x10
        JNC     ??ZDP_UserDescSet_0
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
        SJMP    ??ZDP_UserDescSet_1
??ZDP_UserDescSet_0:
        MOV     ?V0 + 6,#0x10
//  496   byte addrLen = 2;
//  497 
//  498   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  499 
//  500   *pBuf++ = LO_UINT16( nwkAddr );
??ZDP_UserDescSet_1:
        MOV     A,R4
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    @DPTR,A
        INC     DPTR
//  501   *pBuf++ = HI_UINT16( nwkAddr );
        MOV     A,R5
        MOVX    @DPTR,A
        INC     DPTR
//  502 
//  503   *pBuf++ = len;
        MOV     A,?V0 + 6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
//  504   addrLen = 3;
//  505 
//  506   pBuf = osal_memcpy( pBuf, UserDescriptor->desc, len );
//  507   osal_memset( pBuf, AF_USER_DESCRIPTOR_FILL, AF_MAX_USER_DESCRIPTOR_LEN-len );
        ; Setup parameters for call to function osal_memset
        MOV     ?V0 + 4,A
        MOV     A,#0x10
        CLR     C
        SUBB    A,?V0 + 4
        MOV     R4,A
        SUBB    A,0xE0 /* A   */
        MOV     R5,A
        MOV     R1,#0x20
        MOV     A,R1
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V0 + 8,R1
        MOV     ?V0 + 9,R2
        MOV     ?V0 + 10,#0x0
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_THREE
        CFI CFA_XSP16 add(XSP16, 22)
        MOV     R4,?V0 + 6
        MOV     R5,#0x0
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??Subroutine105_0 & 0xFFFF
??CrossCallReturnLabel_160:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        POP     A
        CFI CFA_SP SP+0
        MOV     R1,A
        LCALL   ??osal_memset?relay
//  508 
//  509   return fillAndSend( &ZDP_TransID, dstAddr, User_Desc_set, (AF_MAX_USER_DESCRIPTOR_LEN + addrLen) );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 2,#0x14
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 21)
        MOV     R1,#0x13
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        LCALL   ??Subroutine123_0 & 0xFFFF
        CFI EndBlock cfiBlock27
??CrossCallReturnLabel_263:
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4
//  510 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
        CFI Block cfiBlock28 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 21)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 19)
        CFI Valid
        MOV     R7,#0xb
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock28
//  511 
//  512 /*********************************************************************
//  513  * @fn          ZDP_ServerDiscReq
//  514  *
//  515  * @brief       Build and send a Server_Discovery_req request message.
//  516  *
//  517  * @param       serverMask - 16-bit bit-mask of server services being sought.
//  518  * @param       SecurityEnable - Security Options
//  519  *
//  520  * @return      afStatus_t
//  521  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  522 afStatus_t ZDP_ServerDiscReq( uint16 serverMask, byte SecurityEnable )
ZDP_ServerDiscReq:
        CFI Block cfiBlock29 Using cfiCommon0
        CFI Function ZDP_ServerDiscReq
        CODE
//  523 {
        FUNCALL ZDP_ServerDiscReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 9
        MOV     A,#-0x9
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R1
        MOV     R6,A
//  524   uint8 *pBuf = ZDP_TmpBuf;
        MOV     DPTR,#ZDP_TmpBuf
        LCALL   ??Subroutine107_0 & 0xFFFF
//  525   zAddrType_t dstAddr;
//  526 
//  527   dstAddr.addrMode = AddrBroadcast;
??CrossCallReturnLabel_166:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine51 & 0xFFFF
//  528   dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
//  529 
//  530   *pBuf++ = LO_UINT16( serverMask );
??CrossCallReturnLabel_73:
        MOV     A,R2
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
        INC     DPTR
//  531   *pBuf = HI_UINT16( serverMask );
        MOV     A,R3
        MOVX    @DPTR,A
//  532 
//  533   FillAndSendTxOptions( &ZDP_TransID, &dstAddr, Server_Discovery_req, 2,
//  534              ((SecurityEnable) ? AF_EN_SECURITY : AF_TX_OPTIONS_NONE) );
        MOV     A,R6
        MOV     DPTR,#ZDP_TxOptions
        JZ      ??ZDP_ServerDiscReq_0
        MOV     A,#0x40
        SJMP    ??ZDP_ServerDiscReq_1
??ZDP_ServerDiscReq_0:
        CLR     A
??ZDP_ServerDiscReq_1:
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 0,#0x15
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 21)
        MOV     R1,#0x2
        MOV     A,R1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_261:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 19)
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
        LJMP    ??Subroutine91_0 & 0xFFFF
        CFI EndBlock cfiBlock29
//  535 }
//  536 
//  537 /*********************************************************************
//  538  * @fn          ZDP_DeviceAnnce
//  539  *
//  540  * @brief       This builds and send a Device_Annce message.  This
//  541  *              function sends a broadcast message.
//  542  *
//  543  * @param       nwkAddr - 16 bit address of the device
//  544  * @param       IEEEAddr - 64 bit address of the device
//  545  * @param       capabilities - device capabilities.  This field is only
//  546  *                 sent for v1.1 networks.
//  547  * @param       SecurityEnable - Security Options
//  548  *
//  549  * @return      afStatus_t
//  550  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  551 afStatus_t ZDP_DeviceAnnce( uint16 nwkAddr, uint8 *IEEEAddr,
ZDP_DeviceAnnce:
        CFI Block cfiBlock30 Using cfiCommon0
        CFI Function ZDP_DeviceAnnce
        CODE
//  552                               byte capabilities, byte SecurityEnable )
//  553 {
        FUNCALL ZDP_DeviceAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_DeviceAnnce, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 9
        MOV     A,#-0x9
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R1
        MOV     R6,A
//  554   zAddrType_t dstAddr;
//  555   uint8 len;
//  556 
//  557   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  558 
//  559   dstAddr.addrMode = (afAddrMode_t)AddrBroadcast;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine51 & 0xFFFF
//  560   dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
//  561 
//  562   ZDP_TmpBuf[0] = LO_UINT16( nwkAddr );
??CrossCallReturnLabel_74:
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_182:
        MOV     A,R2
        LCALL   ?Subroutine29 & 0xFFFF
//  563   ZDP_TmpBuf[1] = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_124:
        MOV     A,R3
        MOVX    @DPTR,A
//  564   osal_cpyExtAddr( &ZDP_TmpBuf[2], IEEEAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        ADD     A,#0x2
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        LCALL   ??Subroutine96_0 & 0xFFFF
//  565   len = 2 + Z_EXTADDR_LEN;
//  566 
//  567   ZDP_TmpBuf[10] = capabilities;
??CrossCallReturnLabel_129:
        INC     DPTR
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
//  568   len++;
//  569 
//  570   return fillAndSend( &ZDP_TransID, &dstAddr, Device_annce, len );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 0,#0x13
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 21)
        MOV     R1,#0xb
        LJMP    ?Subroutine8 & 0xFFFF
        CFI EndBlock cfiBlock30
//  571 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine51:
        CFI Block cfiCond31 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_73
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond32 Using cfiCommon0
        CFI (cfiCond32) NoFunction
        CFI (cfiCond32) Conditional ??CrossCallReturnLabel_74
        CFI (cfiCond32) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond32) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond32) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond32) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond32) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond32) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond32) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond32) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond32) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond32) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond32) CFA_SP SP+0
        CFI (cfiCond32) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiPicker33 Using cfiCommon1
        CFI (cfiPicker33) NoFunction
        CFI (cfiPicker33) Picker
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_108:
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond31
        CFI EndBlock cfiCond32
        CFI EndBlock cfiPicker33

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine75:
        CFI Block cfiCond34 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_107
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond35 Using cfiCommon0
        CFI (cfiCond35) NoFunction
        CFI (cfiCond35) Conditional ??CrossCallReturnLabel_108, ??CrossCallReturnLabel_73
        CFI (cfiCond35) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond35) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond35) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond35) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond35) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond35) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond35) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond35) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond35) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond35) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond35) CFA_SP SP+0
        CFI (cfiCond35) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond36 Using cfiCommon0
        CFI (cfiCond36) NoFunction
        CFI (cfiCond36) Conditional ??CrossCallReturnLabel_108, ??CrossCallReturnLabel_74
        CFI (cfiCond36) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond36) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond36) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond36) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond36) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond36) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond36) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond36) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond36) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond36) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond36) CFA_SP SP+0
        CFI (cfiCond36) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiPicker37 Using cfiCommon1
        CFI (cfiPicker37) NoFunction
        CFI (cfiPicker37) Picker
        MOV     A,#0xf
        MOVX    @DPTR,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x3
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x1
        RET
        CFI EndBlock cfiCond34
        CFI EndBlock cfiCond35
        CFI EndBlock cfiCond36
        CFI EndBlock cfiPicker37

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine29:
        CFI Block cfiCond38 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_124
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond39 Using cfiCommon0
        CFI (cfiCond39) NoFunction
        CFI (cfiCond39) Conditional ??CrossCallReturnLabel_125
        CFI (cfiCond39) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond39) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond39) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond39) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond39) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond39) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond39) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond39) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond39) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond39) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond39) CFA_SP SP+0
        CFI (cfiCond39) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker40 Using cfiCommon1
        CFI (cfiPicker40) NoFunction
        CFI (cfiPicker40) Picker
        MOVX    @DPTR,A
        CFI EndBlock cfiCond38
        CFI EndBlock cfiCond39
        CFI EndBlock cfiPicker40
        REQUIRE ??Subroutine95_0
        ; // Fall through to label ??Subroutine95_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine95_0:
        CFI Block cfiCond41 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_126
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond42 Using cfiCommon0
        CFI (cfiCond42) NoFunction
        CFI (cfiCond42) Conditional ??CrossCallReturnLabel_124
        CFI (cfiCond42) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond42) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond42) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond42) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond42) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond42) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond42) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond42) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond42) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond42) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond42) CFA_SP SP+0
        CFI (cfiCond42) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond43 Using cfiCommon0
        CFI (cfiCond43) NoFunction
        CFI (cfiCond43) Conditional ??CrossCallReturnLabel_125
        CFI (cfiCond43) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond43) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond43) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond43) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond43) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond43) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond43) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond43) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond43) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond43) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond43) CFA_SP SP+0
        CFI (cfiCond43) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker44 Using cfiCommon1
        CFI (cfiPicker44) NoFunction
        CFI (cfiPicker44) Picker
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_134:
        RET
        CFI EndBlock cfiCond41
        CFI EndBlock cfiCond42
        CFI EndBlock cfiCond43
        CFI EndBlock cfiPicker44

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine80:
        CFI Block cfiCond45 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_9
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond46 Using cfiCommon0
        CFI (cfiCond46) NoFunction
        CFI (cfiCond46) Conditional ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_10
        CFI (cfiCond46) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond46) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond46) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond46) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond46) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond46) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond46) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond46) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond46) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond46) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond46) CFA_SP SP+0
        CFI (cfiCond46) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond47 Using cfiCommon0
        CFI (cfiCond47) NoFunction
        CFI (cfiCond47) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_124
        CFI (cfiCond47) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond47) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond47) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond47) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond47) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond47) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond47) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond47) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond47) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond47) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond47) CFA_SP SP+0
        CFI (cfiCond47) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond48 Using cfiCommon0
        CFI (cfiCond48) NoFunction
        CFI (cfiCond48) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_125
        CFI (cfiCond48) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond48) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond48) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond48) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond48) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond48) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond48) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond48) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond48) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond48) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond48) CFA_SP SP+0
        CFI (cfiCond48) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond49 Using cfiCommon0
        CFI (cfiCond49) NoFunction
        CFI (cfiCond49) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_126
        CFI (cfiCond49) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond49) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond49) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond49) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond49) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond49) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond49) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond49) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond49) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond49) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond49) CFA_SP SP+0
        CFI (cfiCond49) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond50 Using cfiCommon0
        CFI (cfiCond50) NoFunction
        CFI (cfiCond50) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_127
        CFI (cfiCond50) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond50) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond50) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond50) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond50) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond50) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond50) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond50) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond50) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond50) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond50) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond50) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond50) CFA_SP SP+0
        CFI (cfiCond50) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond51 Using cfiCommon0
        CFI (cfiCond51) NoFunction
        CFI (cfiCond51) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_128
        CFI (cfiCond51) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond51) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond51) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond51) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond51) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond51) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond51) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond51) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond51) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond51) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond51) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond51) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond51) CFA_SP SP+0
        CFI (cfiCond51) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond52 Using cfiCommon0
        CFI (cfiCond52) NoFunction
        CFI (cfiCond52) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_129
        CFI (cfiCond52) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond52) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond52) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond52) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond52) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond52) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond52) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond52) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond52) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond52) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond52) CFA_SP SP+0
        CFI (cfiCond52) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond53 Using cfiCommon0
        CFI (cfiCond53) NoFunction
        CFI (cfiCond53) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_130
        CFI (cfiCond53) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond53) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond53) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond53) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond53) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond53) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond53) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond53) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond53) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond53) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond53) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond53) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond53) CFA_SP SP+0
        CFI (cfiCond53) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond54 Using cfiCommon0
        CFI (cfiCond54) NoFunction
        CFI (cfiCond54) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_131
        CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond54) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond54) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond54) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond54) CFA_SP SP+0
        CFI (cfiCond54) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond55 Using cfiCommon0
        CFI (cfiCond55) NoFunction
        CFI (cfiCond55) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_35
        CFI (cfiCond55) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond55) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond55) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond55) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond55) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond55) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond55) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond55) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond55) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond55) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond55) CFA_SP SP+0
        CFI (cfiCond55) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond56 Using cfiCommon0
        CFI (cfiCond56) NoFunction
        CFI (cfiCond56) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_36
        CFI (cfiCond56) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond56) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond56) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond56) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond56) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond56) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond56) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond56) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond56) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond56) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond56) CFA_SP SP+0
        CFI (cfiCond56) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker57 Using cfiCommon1
        CFI (cfiPicker57) NoFunction
        CFI (cfiPicker57) Picker
        MOV     DPTR,#ZDP_TmpBuf
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_187:
        INC     DPTR
        RET
        CFI EndBlock cfiCond45
        CFI EndBlock cfiCond46
        CFI EndBlock cfiCond47
        CFI EndBlock cfiCond48
        CFI EndBlock cfiCond49
        CFI EndBlock cfiCond50
        CFI EndBlock cfiCond51
        CFI EndBlock cfiCond52
        CFI EndBlock cfiCond53
        CFI EndBlock cfiCond54
        CFI EndBlock cfiCond55
        CFI EndBlock cfiCond56
        CFI EndBlock cfiPicker57

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine10:
        CFI Block cfiCond58 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_127
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond59 Using cfiCommon0
        CFI (cfiCond59) NoFunction
        CFI (cfiCond59) Conditional ??CrossCallReturnLabel_128
        CFI (cfiCond59) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond59) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond59) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond59) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond59) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond59) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond59) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond59) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond59) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond59) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond59) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond59) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond59) CFA_SP SP+0
        CFI (cfiCond59) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker60 Using cfiCommon1
        CFI (cfiPicker60) NoFunction
        CFI (cfiPicker60) Picker
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        CFI EndBlock cfiCond58
        CFI EndBlock cfiCond59
        CFI EndBlock cfiPicker60
        REQUIRE ??Subroutine96_0
        ; // Fall through to label ??Subroutine96_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine96_0:
        CFI Block cfiCond61 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_129
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond62 Using cfiCommon0
        CFI (cfiCond62) NoFunction
        CFI (cfiCond62) Conditional ??CrossCallReturnLabel_127
        CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond62) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond62) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond62) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond62) CFA_SP SP+0
        CFI (cfiCond62) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond63 Using cfiCommon0
        CFI (cfiCond63) NoFunction
        CFI (cfiCond63) Conditional ??CrossCallReturnLabel_128
        CFI (cfiCond63) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond63) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond63) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond63) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond63) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond63) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond63) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond63) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond63) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond63) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond63) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond63) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond63) CFA_SP SP+0
        CFI (cfiCond63) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker64 Using cfiCommon1
        CFI (cfiPicker64) NoFunction
        CFI (cfiPicker64) Picker
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay
        CFI EndBlock cfiCond61
        CFI EndBlock cfiCond62
        CFI EndBlock cfiCond63
        CFI EndBlock cfiPicker64
        REQUIRE ??Subroutine97_0
        ; // Fall through to label ??Subroutine97_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine97_0:
        CFI Block cfiCond65 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_130
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond66 Using cfiCommon0
        CFI (cfiCond66) NoFunction
        CFI (cfiCond66) Conditional ??CrossCallReturnLabel_131
        CFI (cfiCond66) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond66) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond66) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond66) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond66) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond66) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond66) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond66) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond66) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond66) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond66) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond66) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond66) CFA_SP SP+0
        CFI (cfiCond66) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond67 Using cfiCommon0
        CFI (cfiCond67) NoFunction
        CFI (cfiCond67) Conditional ??CrossCallReturnLabel_129
        CFI (cfiCond67) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond67) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond67) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond67) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond67) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond67) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond67) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond67) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond67) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond67) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond67) CFA_SP SP+0
        CFI (cfiCond67) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond68 Using cfiCommon0
        CFI (cfiCond68) NoFunction
        CFI (cfiCond68) Conditional ??CrossCallReturnLabel_127
        CFI (cfiCond68) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond68) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond68) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond68) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond68) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond68) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond68) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond68) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond68) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond68) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond68) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond68) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond68) CFA_SP SP+0
        CFI (cfiCond68) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond69 Using cfiCommon0
        CFI (cfiCond69) NoFunction
        CFI (cfiCond69) Conditional ??CrossCallReturnLabel_128
        CFI (cfiCond69) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond69) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond69) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond69) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond69) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond69) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond69) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond69) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond69) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond69) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond69) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond69) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond69) CFA_SP SP+0
        CFI (cfiCond69) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker70 Using cfiCommon1
        CFI (cfiPicker70) NoFunction
        CFI (cfiPicker70) Picker
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_135:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond65
        CFI EndBlock cfiCond66
        CFI EndBlock cfiCond67
        CFI EndBlock cfiCond68
        CFI EndBlock cfiCond69
        CFI EndBlock cfiPicker70
//  572 
//  573 /*********************************************************************
//  574  * Address Responses
//  575  */
//  576 
//  577 /*********************************************************************
//  578  * @fn      zdpProcessAddrReq
//  579  *
//  580  * @brief   Process an incoming NWK_addr_req or IEEE_addr_req message and then
//  581  *          build and send a corresponding NWK_addr_rsp or IEEE_addr_rsp msg.
//  582  *
//  583  * @param   inMsg - incoming message
//  584  *
//  585  * @return  none
//  586  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  587 void zdpProcessAddrReq( zdoIncomingMsg_t *inMsg )
zdpProcessAddrReq:
        CFI Block cfiBlock71 Using cfiCommon0
        CFI Function zdpProcessAddrReq
        CODE
//  588 {
        FUNCALL zdpProcessAddrReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xd
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 13)
        ; Saved register size: 13
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  589   associated_devices_t *pAssoc;
//  590   uint8 reqType;
//  591   uint16 aoi = INVALID_NODE_ADDR;
        MOV     ?V0 + 0,#-0x2
        MOV     ?V0 + 1,#-0x1
//  592   uint8 *ieee = NULL;
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
//  593 
//  594   reqType = inMsg->asdu[(inMsg->clusterID == NWK_addr_req) ? Z_EXTADDR_LEN : sizeof( uint16 ) ];
        LCALL   ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_137:
        JNZ     ??zdpProcessAddrReq_0
        MOV     R0,#0x8
        SJMP    ??zdpProcessAddrReq_1
??zdpProcessAddrReq_0:
        MOV     R0,#0x2
??zdpProcessAddrReq_1:
        MOV     A,R6
        ADD     A,#0x13
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_286:
        ADD     A,R0
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     DPL,R2
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
//  595 
//  596   if ( inMsg->clusterID == NWK_addr_req )
        MOV     A,R6
        ADD     A,#0xc
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_287:
        ORL     A,R1
        JNZ     ??zdpProcessAddrReq_2
//  597 
//  598   {
//  599     ieee = inMsg->asdu;
        MOV     A,R6
        ADD     A,#0x13
        MOV     DPL,A
        MOV     A,R7
        LCALL   ?Subroutine18 & 0xFFFF
//  600 
//  601     if ( osal_ExtAddrEqual( saveExtAddr, ieee ) )
??CrossCallReturnLabel_193:
        ; Setup parameters for call to function sAddrExtCmp
        MOV     R4,?V0 + 2
        MOV     R5,A
        MOV     R2,#saveExtAddr & 0xff
        MOV     R3,#(saveExtAddr >> 8) & 0xff
        LCALL   ??sAddrExtCmp?relay
        MOV     A,R1
        JZ      ??zdpProcessAddrReq_3
//  602     {
//  603       aoi = ZDAppNwkAddr.addr.shortAddr;
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ??Subroutine114_0 & 0xFFFF
//  604     }
//  605     // Handle response for sleeping end devices
//  606     else if ( (ZSTACK_ROUTER_BUILD)
//  607       && (((pAssoc = AssocGetWithExt( ieee )) != NULL)
//  608              && (pAssoc->nodeRelation == CHILD_RFD)) )
//  609     {
//  610       aoi = pAssoc->shortAddr;
//  611       if ( reqType != ZDP_ADDR_REQTYPE_SINGLE )
//  612         reqType = 0xFF; // Force Invalid
//  613     }
//  614   }
??CrossCallReturnLabel_205:
        SJMP    ??zdpProcessAddrReq_4
//  615   else  // if ( inMsg->clusterID == IEEE_addr_req )
//  616   {
//  617     aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
??zdpProcessAddrReq_2:
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_145:
        LCALL   ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_64:
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        ADD     A,#0x0
        MOV     ?V0 + 0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 1,A
//  618 
//  619     if ( aoi == ZDAppNwkAddr.addr.shortAddr )
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,?V0 + 0
        JNZ     ??zdpProcessAddrReq_5
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 1
??zdpProcessAddrReq_5:
        JNZ     ??zdpProcessAddrReq_4
//  620     {
//  621       ieee = saveExtAddr;
        MOV     ?V0 + 2,#saveExtAddr & 0xff
        MOV     ?V0 + 3,#(saveExtAddr >> 8) & 0xff
//  622     }
//  623     else if ( (ZSTACK_ROUTER_BUILD)
//  624       && (((pAssoc = AssocGetWithShort( aoi )) != NULL)
//  625              && (pAssoc->nodeRelation == CHILD_RFD)) )
//  626     {
//  627       AddrMgrEntry_t addrEntry;
//  628       addrEntry.user = ADDRMGR_USER_DEFAULT;
//  629       addrEntry.index = pAssoc->addrIdx;
//  630       if ( AddrMgrEntryGet( &addrEntry ) )
//  631       {
//  632         ieee = addrEntry.extAddr;
//  633       }
//  634 
//  635       if ( reqType != ZDP_ADDR_REQTYPE_SINGLE )
//  636         reqType = 0xFF; // Force Invalid
//  637     }
//  638   }
//  639 
//  640   if ( ((aoi != INVALID_NODE_ADDR) && (ieee != NULL)) || (inMsg->wasBroadcast == FALSE) )
??zdpProcessAddrReq_4:
        MOV     A,#-0x2
        XRL     A,?V0 + 0
        JNZ     ??zdpProcessAddrReq_6
        MOV     A,#-0x1
        XRL     A,?V0 + 1
??zdpProcessAddrReq_6:
        JZ      ??zdpProcessAddrReq_3
        MOV     A,?V0 + 2
        ORL     A,?V0 + 3
        JNZ     ??zdpProcessAddrReq_7
??zdpProcessAddrReq_3:
        MOV     A,R6
        ADD     A,#0xb
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_288:
        JNZ     ??zdpProcessAddrReq_8
//  641   {
//  642     uint8 stat;
//  643     uint8 *pBuf = ZDP_TmpBuf;
??zdpProcessAddrReq_7:
        LCALL   ?Subroutine38 & 0xFFFF
//  644     // Status + IEEE-Addr + Nwk-Addr.
//  645     uint8 len = 1 + Z_EXTADDR_LEN + 2;
//  646     
//  647     // If aoi and iee are both setup, we found results
//  648     if ( (aoi != INVALID_NODE_ADDR) && (ieee != NULL) )
??CrossCallReturnLabel_152:
        MOV     A,#-0x2
        XRL     A,?V0 + 0
        JNZ     ??zdpProcessAddrReq_9
        MOV     A,#-0x1
        XRL     A,?V0 + 1
??zdpProcessAddrReq_9:
        JZ      ??zdpProcessAddrReq_10
        MOV     A,?V0 + 2
        ORL     A,?V0 + 3
        JZ      ??zdpProcessAddrReq_10
//  649     {
//  650       stat = ((reqType == ZDP_ADDR_REQTYPE_SINGLE) || (reqType == ZDP_ADDR_REQTYPE_EXTENDED)) 
//  651                     ? ZDP_SUCCESS : ZDP_INVALID_REQTYPE;
        MOV     A,?V0 + 4
        JZ      ??zdpProcessAddrReq_11
        MOV     A,#0x1
        XRL     A,?V0 + 4
        JNZ     ??zdpProcessAddrReq_12
??zdpProcessAddrReq_11:
        MOV     R4,#0x0
        SJMP    ??zdpProcessAddrReq_13
??zdpProcessAddrReq_12:
        MOV     R4,#-0x80
        SJMP    ??zdpProcessAddrReq_13
//  652     }
//  653     else 
//  654     {
//  655       // not found and the req was unicast to this device
//  656       stat = ZDP_DEVICE_NOT_FOUND;
??zdpProcessAddrReq_10:
        MOV     R4,#-0x7f
//  657       
//  658       // Fill in the missing field with this device's address
//  659       if ( inMsg->clusterID == NWK_addr_req )
        LCALL   ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_138:
        JNZ     ??zdpProcessAddrReq_14
//  660       {
//  661         aoi = ZDAppNwkAddr.addr.shortAddr;
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ??Subroutine114_0 & 0xFFFF
//  662       }
??CrossCallReturnLabel_206:
        SJMP    ??zdpProcessAddrReq_13
//  663       else
//  664       {
//  665         ieee = saveExtAddr;
??zdpProcessAddrReq_14:
        MOV     ?V0 + 2,#saveExtAddr & 0xff
        MOV     ?V0 + 3,#(saveExtAddr >> 8) & 0xff
//  666       }
//  667     }
//  668 
//  669     *pBuf++ = stat;
??zdpProcessAddrReq_13:
        MOV     A,R4
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine122_0 & 0xFFFF
//  670 
//  671     pBuf = osal_cpyExtAddr( pBuf, ieee );
??CrossCallReturnLabel_254:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        LCALL   ??sAddrExtCpy?relay
//  672 
//  673     *pBuf++ = LO_UINT16( aoi );
        LCALL   ?Subroutine54 & 0xFFFF
//  674     *pBuf++ = HI_UINT16( aoi );
//  675 
//  676     if ( ZSTACK_ROUTER_BUILD )
//  677     {
//  678       if ( (reqType == ZDP_ADDR_REQTYPE_EXTENDED) && (aoi == ZDAppNwkAddr.addr.shortAddr)
//  679            && (stat == ZDP_SUCCESS) )
//  680       {
//  681         uint8  cnt = 0;
//  682         uint16 *list = AssocMakeList( &cnt );
//  683 
//  684         if ( list != NULL )
//  685         {
//  686           byte idx = inMsg->asdu[(((inMsg->clusterID == NWK_addr_req) ? Z_EXTADDR_LEN : sizeof( uint16 )) + 1)];
//  687           uint16 *pList = list + idx;
//  688 
//  689           // NumAssocDev field is only present on success.
//  690           if ( cnt > idx )
//  691           {
//  692             cnt -= idx;
//  693             len += (cnt * sizeof( uint16 ));
//  694           }
//  695           else
//  696           {
//  697             cnt = 0;
//  698           }
//  699           *pBuf++ = cnt;
//  700           len++;
//  701 
//  702           // StartIndex field is only present if NumAssocDev field is non-zero.
//  703           *pBuf++ = idx;
//  704           len++;
//  705 
//  706           while ( cnt != 0 )
//  707           {
//  708             *pBuf++ = LO_UINT16( *pList );
//  709             *pBuf++ = HI_UINT16( *pList );
//  710             pList++;
//  711             cnt--;
//  712           }
//  713 
//  714           osal_mem_free( (uint8 *)list );
//  715         }
//  716         else
//  717         {
//  718           // NumAssocDev field is only present on success.
//  719           *pBuf++ = 0;
//  720           len++;
//  721         }
//  722       }
//  723     }
//  724 
//  725     ZDP_TxOptions = AF_MSG_ACK_REQUEST;
??CrossCallReturnLabel_281:
        MOV     DPTR,#ZDP_TxOptions
        MOV     A,#0x10
        MOVX    @DPTR,A
//  726     fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), (cId_t)(inMsg->clusterID | ZDO_RESPONSE_BIT), len );
        ; Setup parameters for call to function fillAndSend
        MOV     A,R6
        ADD     A,#0xc
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_289:
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        ORL     A,#0x80
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 15)
        MOV     R1,#0xb
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_96:
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_98:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 13)
//  727     ZDP_TxOptions = AF_TX_OPTIONS_NONE;
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
//  728   }
//  729 }
??zdpProcessAddrReq_8:
        MOV     R7,#0x5
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock71

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine35:
        CFI Block cfiCond72 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_137
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond73 Using cfiCommon0
        CFI (cfiCond73) NoFunction
        CFI (cfiCond73) Conditional ??CrossCallReturnLabel_138
        CFI (cfiCond73) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond73) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond73) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond73) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond73) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond73) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond73) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond73) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond73) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond73) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond73) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond73) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond73) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond73) CFA_SP SP+0
        CFI (cfiCond73) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker74 Using cfiCommon1
        CFI (cfiPicker74) NoFunction
        CFI (cfiPicker74) Picker
        MOV     A,R6
        ADD     A,#0xc
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        CFI EndBlock cfiCond72
        CFI EndBlock cfiCond73
        CFI EndBlock cfiPicker74
        REQUIRE ??Subroutine98_0
        ; // Fall through to label ??Subroutine98_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine98_0:
        CFI Block cfiCond75 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_136
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond76 Using cfiCommon0
        CFI (cfiCond76) NoFunction
        CFI (cfiCond76) Conditional ??CrossCallReturnLabel_137
        CFI (cfiCond76) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond76) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond76) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond76) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond76) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond76) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond76) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond76) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond76) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond76) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond76) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond76) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond76) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond76) CFA_SP SP+0
        CFI (cfiCond76) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond77 Using cfiCommon0
        CFI (cfiCond77) NoFunction
        CFI (cfiCond77) Conditional ??CrossCallReturnLabel_138
        CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond77) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond77) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond77) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond77) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond77) CFA_SP SP+0
        CFI (cfiCond77) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiPicker78 Using cfiCommon1
        CFI (cfiPicker78) NoFunction
        CFI (cfiPicker78) Picker
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_179:
        MOV     A,R0
        ORL     A,R1
        RET
        CFI EndBlock cfiCond75
        CFI EndBlock cfiCond76
        CFI EndBlock cfiCond77
        CFI EndBlock cfiPicker78
//  730 
//  731 /*********************************************************************
//  732  * @fn          ZDP_NodeDescMsg
//  733  *
//  734  * @brief       Builds and sends a Node Descriptor message, unicast to the
//  735  *              specified device.
//  736  *
//  737  * @param       inMsg - incoming message
//  738  * @param       nwkAddr - 16 bit network address for device
//  739  * @param       pNodeDesc - pointer to the node descriptor
//  740  *
//  741  * @return      afStatus_t
//  742  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  743 afStatus_t ZDP_NodeDescMsg( zdoIncomingMsg_t *inMsg,
ZDP_NodeDescMsg:
        CFI Block cfiBlock79 Using cfiCommon0
        CFI Function ZDP_NodeDescMsg
        CODE
//  744                            uint16 nwkAddr, NodeDescriptorFormat_t *pNodeDesc )
//  745 {
        FUNCALL ZDP_NodeDescMsg, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
//  746   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_28:
        MOV     DPTR,#ZDP_TmpBuf
        LCALL   ?Subroutine44 & 0xFFFF
//  747   byte len;
//  748 
//  749   len = 1 + 2 + 13;  // Status + nwkAddr + Node descriptor
//  750 
//  751   *pBuf++ = ZDP_SUCCESS;
??CrossCallReturnLabel_63:
        LCALL   ?Subroutine57 & 0xFFFF
//  752 
//  753   *pBuf++ = LO_UINT16( nwkAddr );
//  754   *pBuf++ = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_79:
        LCALL   ??Subroutine119_0 & 0xFFFF
//  755 
//  756   *pBuf++ = (byte)((pNodeDesc->ComplexDescAvail << 3) |
//  757                      (pNodeDesc->UserDescAvail << 4) |
//  758                      (pNodeDesc->LogicalType & 0x07));
??CrossCallReturnLabel_236:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ANL     A,#0x1f
        LCALL   ?Subroutine77 & 0xFFFF
//  759 
//  760   *pBuf++ = (byte)((pNodeDesc->FrequencyBand << 3) | (pNodeDesc->APSFlags & 0x07));
??CrossCallReturnLabel_109:
        LCALL   ?Subroutine32 & 0xFFFF
//  761   *pBuf++ = pNodeDesc->CapabilityFlags;
??CrossCallReturnLabel_39:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine23 & 0xFFFF
//  762   *pBuf++ = pNodeDesc->ManufacturerCode[0];
??CrossCallReturnLabel_20:
        LCALL   ?Subroutine23 & 0xFFFF
//  763   *pBuf++ = pNodeDesc->ManufacturerCode[1];
??CrossCallReturnLabel_21:
        INC     DPTR
        LCALL   ?Subroutine21 & 0xFFFF
//  764   *pBuf++ = pNodeDesc->MaxBufferSize;
??CrossCallReturnLabel_15:
        LCALL   ?Subroutine21 & 0xFFFF
//  765   *pBuf++ = pNodeDesc->MaxInTransferSize[0];
??CrossCallReturnLabel_16:
        INC     DPTR
        LCALL   ?Subroutine20 & 0xFFFF
//  766   *pBuf++ = pNodeDesc->MaxInTransferSize[1];
??CrossCallReturnLabel_13:
        LCALL   ?Subroutine22 & 0xFFFF
//  767 
//  768   *pBuf++ = LO_UINT16( pNodeDesc->ServerMask );
??CrossCallReturnLabel_17:
        ADD     A,#0x8
        MOV     R4,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R5,A
        LCALL   ?Subroutine14 & 0xFFFF
//  769   *pBuf++ = HI_UINT16( pNodeDesc->ServerMask );
??CrossCallReturnLabel_147:
        LCALL   ?Subroutine20 & 0xFFFF
//  770   *pBuf++ = pNodeDesc->MaxOutTransferSize[0];
??CrossCallReturnLabel_14:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine22 & 0xFFFF
//  771   *pBuf++ = pNodeDesc->MaxOutTransferSize[1];
??CrossCallReturnLabel_18:
        ADD     A,#0xb
        LCALL   ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_142:
        LCALL   ?Subroutine22 & 0xFFFF
//  772   *pBuf = pNodeDesc->DescriptorCapability;
??CrossCallReturnLabel_19:
        ADD     A,#0xc
        LCALL   ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_143:
        LCALL   ?Subroutine43 & 0xFFFF
//  773 
//  774   return fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), Node_Desc_rsp, len );
??CrossCallReturnLabel_61:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 0,#0x2
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R1,#0x10
        MOV     A,R2
        ADD     A,#0x2
        MOV     R4,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,R2
        ADD     A,#0xf
        MOV     R2,A
        MOV     A,R3
        CFI EndBlock cfiBlock79
        REQUIRE ?Subroutine9
        ; // Fall through to label ?Subroutine9
//  775 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine9:
        CFI Block cfiBlock80 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        ADDC    A,#0x0
        MOV     R3,A
        LJMP    ??Subroutine93_0 & 0xFFFF
        CFI EndBlock cfiBlock80

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine66:
        CFI Block cfiCond81 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_145
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond82 Using cfiCommon0
        CFI (cfiCond82) NoFunction
        CFI (cfiCond82) Conditional ??CrossCallReturnLabel_146
        CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond82) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond82) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond82) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond82) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond82) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond82) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond82) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond82) CFA_SP SP+0
        CFI (cfiCond82) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker83 Using cfiCommon1
        CFI (cfiPicker83) NoFunction
        CFI (cfiPicker83) Picker
        MOV     A,R6
        ADD     A,#0x13
        CFI EndBlock cfiCond81
        CFI EndBlock cfiCond82
        CFI EndBlock cfiPicker83
        REQUIRE ??Subroutine99_0
        ; // Fall through to label ??Subroutine99_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine99_0:
        CFI Block cfiCond84 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_142
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond85 Using cfiCommon0
        CFI (cfiCond85) NoFunction
        CFI (cfiCond85) Conditional ??CrossCallReturnLabel_143
        CFI (cfiCond85) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond85) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond85) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond85) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond85) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond85) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond85) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond85) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond85) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond85) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond85) CFA_SP SP+0
        CFI (cfiCond85) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond86 Using cfiCommon0
        CFI (cfiCond86) NoFunction
        CFI (cfiCond86) Conditional ??CrossCallReturnLabel_144
        CFI (cfiCond86) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond86) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond86) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond86) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond86) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond86) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond86) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond86) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond86) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond86) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond86) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond86) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond86) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond86) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond86) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond86) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond86) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond86) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond86) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond86) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond86) CFA_SP SP+0
        CFI (cfiCond86) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond87 Using cfiCommon0
        CFI (cfiCond87) NoFunction
        CFI (cfiCond87) Conditional ??CrossCallReturnLabel_145
        CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond87) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond87) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond87) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond87) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond87) CFA_SP SP+0
        CFI (cfiCond87) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond88 Using cfiCommon0
        CFI (cfiCond88) NoFunction
        CFI (cfiCond88) Conditional ??CrossCallReturnLabel_146
        CFI (cfiCond88) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond88) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond88) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond88) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond88) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond88) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond88) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond88) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond88) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond88) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond88) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond88) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond88) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond88) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond88) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond88) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond88) CFA_SP SP+0
        CFI (cfiCond88) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker89 Using cfiCommon1
        CFI (cfiPicker89) NoFunction
        CFI (cfiPicker89) Picker
        MOV     DPL,A
        MOV     A,R7
        CFI EndBlock cfiCond84
        CFI EndBlock cfiCond85
        CFI EndBlock cfiCond86
        CFI EndBlock cfiCond87
        CFI EndBlock cfiCond88
        CFI EndBlock cfiPicker89
        REQUIRE ??Subroutine100_0
        ; // Fall through to label ??Subroutine100_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine100_0:
        CFI Block cfiCond90 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_139
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond91 Using cfiCommon0
        CFI (cfiCond91) NoFunction
        CFI (cfiCond91) Conditional ??CrossCallReturnLabel_140
        CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond91) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond91) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond91) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond91) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond91) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond91) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond91) CFA_SP SP+0
        CFI (cfiCond91) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond92 Using cfiCommon0
        CFI (cfiCond92) NoFunction
        CFI (cfiCond92) Conditional ??CrossCallReturnLabel_141
        CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond92) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond92) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond92) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond92) CFA_SP SP+0
        CFI (cfiCond92) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiCond93 Using cfiCommon0
        CFI (cfiCond93) NoFunction
        CFI (cfiCond93) Conditional ??CrossCallReturnLabel_142
        CFI (cfiCond93) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond93) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond93) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond93) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond93) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond93) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond93) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond93) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond93) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond93) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond93) CFA_SP SP+0
        CFI (cfiCond93) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond94 Using cfiCommon0
        CFI (cfiCond94) NoFunction
        CFI (cfiCond94) Conditional ??CrossCallReturnLabel_143
        CFI (cfiCond94) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond94) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond94) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond94) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond94) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond94) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond94) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond94) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond94) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond94) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond94) CFA_SP SP+0
        CFI (cfiCond94) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond95 Using cfiCommon0
        CFI (cfiCond95) NoFunction
        CFI (cfiCond95) Conditional ??CrossCallReturnLabel_144
        CFI (cfiCond95) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond95) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond95) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond95) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond95) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond95) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond95) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond95) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond95) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond95) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond95) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond95) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond95) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond95) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond95) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond95) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond95) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond95) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond95) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond95) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond95) CFA_SP SP+0
        CFI (cfiCond95) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond96 Using cfiCommon0
        CFI (cfiCond96) NoFunction
        CFI (cfiCond96) Conditional ??CrossCallReturnLabel_145
        CFI (cfiCond96) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond96) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond96) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond96) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond96) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond96) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond96) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond96) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond96) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond96) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond96) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond96) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond96) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond96) CFA_SP SP+0
        CFI (cfiCond96) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond97 Using cfiCommon0
        CFI (cfiCond97) NoFunction
        CFI (cfiCond97) Conditional ??CrossCallReturnLabel_146
        CFI (cfiCond97) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond97) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond97) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond97) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond97) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond97) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond97) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond97) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond97) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond97) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond97) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond97) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond97) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond97) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond97) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond97) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond97) CFA_SP SP+0
        CFI (cfiCond97) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker98 Using cfiCommon1
        CFI (cfiPicker98) NoFunction
        CFI (cfiPicker98) Picker
        ADDC    A,#0x0
        MOV     DPH,A
        RET
        CFI EndBlock cfiCond90
        CFI EndBlock cfiCond91
        CFI EndBlock cfiCond92
        CFI EndBlock cfiCond93
        CFI EndBlock cfiCond94
        CFI EndBlock cfiCond95
        CFI EndBlock cfiCond96
        CFI EndBlock cfiCond97
        CFI EndBlock cfiPicker98

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine44:
        CFI Block cfiCond99 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_64
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond100 Using cfiCommon0
        CFI (cfiCond100) NoFunction
        CFI (cfiCond100) Conditional ??CrossCallReturnLabel_63
        CFI (cfiCond100) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond100) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond100) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond100) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond100) CFA_SP SP+0
        CFI (cfiCond100) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker101 Using cfiCommon1
        CFI (cfiPicker101) NoFunction
        CFI (cfiPicker101) Picker
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_178:
        MOV     DPL,R0
        MOV     DPH,R1
        RET
        CFI EndBlock cfiCond99
        CFI EndBlock cfiCond100
        CFI EndBlock cfiPicker101

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine43:
        CFI Block cfiCond102 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_60
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond103 Using cfiCommon0
        CFI (cfiCond103) NoFunction
        CFI (cfiCond103) Conditional ??CrossCallReturnLabel_61
        CFI (cfiCond103) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond103) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond103) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond103) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond103) CFA_SP SP+0
        CFI (cfiCond103) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond104 Using cfiCommon0
        CFI (cfiCond104) NoFunction
        CFI (cfiCond104) Conditional ??CrossCallReturnLabel_62
        CFI (cfiCond104) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond104) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond104) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond104) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond104) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond104) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond104) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond104) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond104) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond104) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond104) CFA_SP SP+0
        CFI (cfiCond104) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker105 Using cfiCommon1
        CFI (cfiPicker105) NoFunction
        CFI (cfiPicker105) Picker
        MOVX    A,@DPTR
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond102
        CFI EndBlock cfiCond103
        CFI EndBlock cfiCond104
        CFI EndBlock cfiPicker105

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine23:
        CFI Block cfiCond106 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_20
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond107 Using cfiCommon0
        CFI (cfiCond107) NoFunction
        CFI (cfiCond107) Conditional ??CrossCallReturnLabel_21
        CFI (cfiCond107) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond107) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond107) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond107) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond107) CFA_SP SP+0
        CFI (cfiCond107) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker108 Using cfiCommon1
        CFI (cfiPicker108) NoFunction
        CFI (cfiPicker108) Picker
        MOVX    A,@DPTR
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_110:
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond106
        CFI EndBlock cfiCond107
        CFI EndBlock cfiPicker108

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine77:
        CFI Block cfiCond109 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_109
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond110 Using cfiCommon0
        CFI (cfiCond110) NoFunction
        CFI (cfiCond110) Conditional ??CrossCallReturnLabel_110, ??CrossCallReturnLabel_20
        CFI (cfiCond110) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond110) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond110) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond110) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond110) CFA_SP SP+0
        CFI (cfiCond110) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond111 Using cfiCommon0
        CFI (cfiCond111) NoFunction
        CFI (cfiCond111) Conditional ??CrossCallReturnLabel_110, ??CrossCallReturnLabel_21
        CFI (cfiCond111) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond111) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond111) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond111) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond111) CFA_SP SP+0
        CFI (cfiCond111) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker112 Using cfiCommon1
        CFI (cfiPicker112) NoFunction
        CFI (cfiPicker112) Picker
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_117:
        RET
        CFI EndBlock cfiCond109
        CFI EndBlock cfiCond110
        CFI EndBlock cfiCond111
        CFI EndBlock cfiPicker112

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine87:
        CFI Block cfiCond113 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_117, ??CrossCallReturnLabel_109
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond114 Using cfiCommon0
        CFI (cfiCond114) NoFunction
        CFI (cfiCond114) Conditional ??CrossCallReturnLabel_117, ??CrossCallReturnLabel_110, ??CrossCallReturnLabel_20
        CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond114) CFA_SP SP+0
        CFI (cfiCond114) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond115 Using cfiCommon0
        CFI (cfiCond115) NoFunction
        CFI (cfiCond115) Conditional ??CrossCallReturnLabel_117, ??CrossCallReturnLabel_110, ??CrossCallReturnLabel_21
        CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond115) CFA_SP SP+0
        CFI (cfiCond115) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond116 Using cfiCommon0
        CFI (cfiCond116) NoFunction
        CFI (cfiCond116) Conditional ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_105, ??CrossCallReturnLabel_15
        CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond116) CFA_SP SP+0
        CFI (cfiCond116) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond117 Using cfiCommon0
        CFI (cfiCond117) NoFunction
        CFI (cfiCond117) Conditional ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_105, ??CrossCallReturnLabel_16
        CFI (cfiCond117) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond117) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond117) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond117) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond117) CFA_SP SP+0
        CFI (cfiCond117) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond118 Using cfiCommon0
        CFI (cfiCond118) NoFunction
        CFI (cfiCond118) Conditional ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_106, ??CrossCallReturnLabel_13
        CFI (cfiCond118) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond118) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond118) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond118) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond118) CFA_SP SP+0
        CFI (cfiCond118) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond119 Using cfiCommon0
        CFI (cfiCond119) NoFunction
        CFI (cfiCond119) Conditional ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_106, ??CrossCallReturnLabel_14
        CFI (cfiCond119) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond119) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond119) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond119) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond119) CFA_SP SP+0
        CFI (cfiCond119) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker120 Using cfiCommon1
        CFI (cfiPicker120) NoFunction
        CFI (cfiPicker120) Picker
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
        INC     DPTR
        INC     R0
        MOV     R1,DPH
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        RET
        CFI EndBlock cfiCond113
        CFI EndBlock cfiCond114
        CFI EndBlock cfiCond115
        CFI EndBlock cfiCond116
        CFI EndBlock cfiCond117
        CFI EndBlock cfiCond118
        CFI EndBlock cfiCond119
        CFI EndBlock cfiPicker120

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine22:
        CFI Block cfiCond121 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_17
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond122 Using cfiCommon0
        CFI (cfiCond122) NoFunction
        CFI (cfiCond122) Conditional ??CrossCallReturnLabel_18
        CFI (cfiCond122) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond122) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond122) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond122) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond122) CFA_SP SP+0
        CFI (cfiCond122) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond123 Using cfiCommon0
        CFI (cfiCond123) NoFunction
        CFI (cfiCond123) Conditional ??CrossCallReturnLabel_19
        CFI (cfiCond123) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond123) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond123) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond123) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond123) CFA_SP SP+0
        CFI (cfiCond123) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker124 Using cfiCommon1
        CFI (cfiPicker124) NoFunction
        CFI (cfiPicker124) Picker
        LCALL   ??Subroutine120_0 & 0xFFFF
??CrossCallReturnLabel_246:
        MOV     A,R6
        RET
        CFI EndBlock cfiCond121
        CFI EndBlock cfiCond122
        CFI EndBlock cfiCond123
        CFI EndBlock cfiPicker124

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine21:
        CFI Block cfiCond125 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_15
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond126 Using cfiCommon0
        CFI (cfiCond126) NoFunction
        CFI (cfiCond126) Conditional ??CrossCallReturnLabel_16
        CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond126) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond126) CFA_SP SP+0
        CFI (cfiCond126) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker127 Using cfiCommon1
        CFI (cfiPicker127) NoFunction
        CFI (cfiPicker127) Picker
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_105:
        RET
        CFI EndBlock cfiCond125
        CFI EndBlock cfiCond126
        CFI EndBlock cfiPicker127

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine74:
        CFI Block cfiCond128 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_105, ??CrossCallReturnLabel_15
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond129 Using cfiCommon0
        CFI (cfiCond129) NoFunction
        CFI (cfiCond129) Conditional ??CrossCallReturnLabel_105, ??CrossCallReturnLabel_16
        CFI (cfiCond129) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond129) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond129) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond129) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond129) CFA_SP SP+0
        CFI (cfiCond129) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond130 Using cfiCommon0
        CFI (cfiCond130) NoFunction
        CFI (cfiCond130) Conditional ??CrossCallReturnLabel_106, ??CrossCallReturnLabel_13
        CFI (cfiCond130) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond130) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond130) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond130) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond130) CFA_SP SP+0
        CFI (cfiCond130) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond131 Using cfiCommon0
        CFI (cfiCond131) NoFunction
        CFI (cfiCond131) Conditional ??CrossCallReturnLabel_106, ??CrossCallReturnLabel_14
        CFI (cfiCond131) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond131) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond131) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond131) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond131) CFA_SP SP+0
        CFI (cfiCond131) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker132 Using cfiCommon1
        CFI (cfiPicker132) NoFunction
        CFI (cfiPicker132) Picker
        MOVX    A,@DPTR
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_118:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond128
        CFI EndBlock cfiCond129
        CFI EndBlock cfiCond130
        CFI EndBlock cfiCond131
        CFI EndBlock cfiPicker132

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine20:
        CFI Block cfiCond133 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_13
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond134 Using cfiCommon0
        CFI (cfiCond134) NoFunction
        CFI (cfiCond134) Conditional ??CrossCallReturnLabel_14
        CFI (cfiCond134) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond134) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond134) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond134) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond134) CFA_SP SP+0
        CFI (cfiCond134) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker135 Using cfiCommon1
        CFI (cfiPicker135) NoFunction
        CFI (cfiPicker135) Picker
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_106:
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond133
        CFI EndBlock cfiCond134
        CFI EndBlock cfiPicker135

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine14:
        CFI Block cfiCond136 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_147
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond137 Using cfiCommon0
        CFI (cfiCond137) NoFunction
        CFI (cfiCond137) Conditional ??CrossCallReturnLabel_148
        CFI (cfiCond137) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond137) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond137) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond137) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond137) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond137) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond137) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond137) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond137) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond137) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond137) CFA_SP SP+0
        CFI (cfiCond137) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker138 Using cfiCommon1
        CFI (cfiPicker138) NoFunction
        CFI (cfiPicker138) Picker
        MOV     DPL,R4
        MOV     DPH,R5
        CFI EndBlock cfiCond136
        CFI EndBlock cfiCond137
        CFI EndBlock cfiPicker138
        REQUIRE ??Subroutine101_0
        ; // Fall through to label ??Subroutine101_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine101_0:
        CFI Block cfiCond139 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_149
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond140 Using cfiCommon0
        CFI (cfiCond140) NoFunction
        CFI (cfiCond140) Conditional ??CrossCallReturnLabel_147
        CFI (cfiCond140) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond140) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond140) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond140) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond140) CFA_SP SP+0
        CFI (cfiCond140) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond141 Using cfiCommon0
        CFI (cfiCond141) NoFunction
        CFI (cfiCond141) Conditional ??CrossCallReturnLabel_148
        CFI (cfiCond141) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond141) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond141) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond141) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond141) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond141) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond141) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond141) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond141) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond141) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond141) CFA_SP SP+0
        CFI (cfiCond141) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker142 Using cfiCommon1
        CFI (cfiPicker142) NoFunction
        CFI (cfiPicker142) Picker
        LCALL   ??Subroutine120_0 & 0xFFFF
??CrossCallReturnLabel_251:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        RET
        CFI EndBlock cfiCond139
        CFI EndBlock cfiCond140
        CFI EndBlock cfiCond141
        CFI EndBlock cfiPicker142
//  776 
//  777 /*********************************************************************
//  778  * @fn          ZDP_PowerDescMsg
//  779  *
//  780  * @brief       Builds and sends a Power Descriptor message, unicast to the
//  781  *              specified device.
//  782  *
//  783  * @param       inMsg - incoming message (request)
//  784  * @param       nwkAddr - 16 bit network address for device
//  785  * @param       pPowerDesc - pointer to the node descriptor
//  786  *
//  787  * @return      afStatus_t
//  788  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  789 afStatus_t ZDP_PowerDescMsg( zdoIncomingMsg_t *inMsg,
ZDP_PowerDescMsg:
        CFI Block cfiBlock143 Using cfiCommon0
        CFI Function ZDP_PowerDescMsg
        CODE
//  790                      uint16 nwkAddr, NodePowerDescriptorFormat_t *pPowerDesc )
//  791 {
        FUNCALL ZDP_PowerDescMsg, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine107_0 & 0xFFFF
//  792   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_167:
        LCALL   ?Subroutine38 & 0xFFFF
//  793   byte len = 1 + 2 + 2;  // Status + nwkAddr + Node Power descriptor.
//  794 
//  795   *pBuf++ = ZDP_SUCCESS;
??CrossCallReturnLabel_153:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine57 & 0xFFFF
//  796 
//  797   *pBuf++ = LO_UINT16( nwkAddr );
//  798   *pBuf++ = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_80:
        LCALL   ??Subroutine122_0 & 0xFFFF
//  799 
//  800   *pBuf++ = (byte)((pPowerDesc->AvailablePowerSources << 4)
//  801                     | (pPowerDesc->PowerMode & 0x0F));
??CrossCallReturnLabel_255:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine39 & 0xFFFF
//  802   *pBuf++ = (byte)((pPowerDesc->CurrentPowerSourceLevel << 4)
//  803                     | (pPowerDesc->CurrentPowerSource & 0x0F));
??CrossCallReturnLabel_53:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine114_0 & 0xFFFF
??CrossCallReturnLabel_207:
        ANL     A,#0xf
        MOV     R1,A
        MOV     A,#0xc
        MOV     R0,#?V0 + 0
        LCALL   ?US_SHR
        MOV     A,?V0 + 0
        SWAP    A
        ORL     A,R1
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
//  804 
//  805   return fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), Power_Desc_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 0,#0x3
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R1,#0x5
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_97:
        LJMP    ?Subroutine9 & 0xFFFF
        CFI EndBlock cfiBlock143
//  806 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine67:
        CFI Block cfiCond144 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_96
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond145 Using cfiCommon0
        CFI (cfiCond145) NoFunction
        CFI (cfiCond145) Conditional ??CrossCallReturnLabel_97
        CFI (cfiCond145) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond145) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond145) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond145) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond145) CFA_SP SP+0
        CFI (cfiCond145) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker146 Using cfiCommon1
        CFI (cfiPicker146) NoFunction
        CFI (cfiPicker146) Picker
        MOV     A,R6
        ADD     A,#0x2
        MOV     R4,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,R6
        ADD     A,#0xf
        MOV     R2,A
        MOV     A,R7
        RET
        CFI EndBlock cfiCond144
        CFI EndBlock cfiCond145
        CFI EndBlock cfiPicker146

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine57:
        CFI Block cfiCond147 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_79
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond148 Using cfiCommon0
        CFI (cfiCond148) NoFunction
        CFI (cfiCond148) Conditional ??CrossCallReturnLabel_80
        CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond148) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond148) CFA_SP SP+0
        CFI (cfiCond148) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond149 Using cfiCommon0
        CFI (cfiCond149) NoFunction
        CFI (cfiCond149) Conditional ??CrossCallReturnLabel_81
        CFI (cfiCond149) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond149) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond149) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond149) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond149) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond149) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond149) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond149) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond149) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond149) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond149) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond149) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond149) CFA_SP SP+0
        CFI (cfiCond149) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiPicker150 Using cfiCommon1
        CFI (cfiPicker150) NoFunction
        CFI (cfiPicker150) Picker
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        RET
        CFI EndBlock cfiCond147
        CFI EndBlock cfiCond148
        CFI EndBlock cfiCond149
        CFI EndBlock cfiPicker150

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine38:
        CFI Block cfiCond151 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_152
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond152 Using cfiCommon0
        CFI (cfiCond152) NoFunction
        CFI (cfiCond152) Conditional ??CrossCallReturnLabel_153
        CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond152) CFA_SP SP+0
        CFI (cfiCond152) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond153 Using cfiCommon0
        CFI (cfiCond153) NoFunction
        CFI (cfiCond153) Conditional ??CrossCallReturnLabel_154
        CFI (cfiCond153) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond153) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond153) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond153) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond153) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond153) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond153) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond153) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond153) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond153) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond153) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond153) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond153) CFA_SP SP+0
        CFI (cfiCond153) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond154 Using cfiCommon0
        CFI (cfiCond154) NoFunction
        CFI (cfiCond154) Conditional ??CrossCallReturnLabel_155
        CFI (cfiCond154) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond154) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond154) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond154) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond154) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond154) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond154) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond154) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond154) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond154) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond154) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond154) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond154) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond154) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond154) CFA_SP SP+0
        CFI (cfiCond154) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker155 Using cfiCommon1
        CFI (cfiPicker155) NoFunction
        CFI (cfiPicker155) Picker
        MOV     DPTR,#ZDP_TmpBuf
        CFI EndBlock cfiCond151
        CFI EndBlock cfiCond152
        CFI EndBlock cfiCond153
        CFI EndBlock cfiCond154
        CFI EndBlock cfiPicker155
        REQUIRE ??Subroutine102_0
        ; // Fall through to label ??Subroutine102_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine102_0:
        CFI Block cfiCond156 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_150
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond157 Using cfiCommon0
        CFI (cfiCond157) NoFunction
        CFI (cfiCond157) Conditional ??CrossCallReturnLabel_151
        CFI (cfiCond157) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond157) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond157) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond157) CFA_SP SP+0
        CFI (cfiCond157) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond158 Using cfiCommon0
        CFI (cfiCond158) NoFunction
        CFI (cfiCond158) Conditional ??CrossCallReturnLabel_152
        CFI (cfiCond158) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond158) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond158) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond158) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond158) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond158) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond158) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond158) CFA_SP SP+0
        CFI (cfiCond158) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond159 Using cfiCommon0
        CFI (cfiCond159) NoFunction
        CFI (cfiCond159) Conditional ??CrossCallReturnLabel_153
        CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond159) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond159) CFA_SP SP+0
        CFI (cfiCond159) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond160 Using cfiCommon0
        CFI (cfiCond160) NoFunction
        CFI (cfiCond160) Conditional ??CrossCallReturnLabel_154
        CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond160) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond160) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond160) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond160) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond160) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond160) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond160) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond160) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond160) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond160) CFA_SP SP+0
        CFI (cfiCond160) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond161 Using cfiCommon0
        CFI (cfiCond161) NoFunction
        CFI (cfiCond161) Conditional ??CrossCallReturnLabel_155
        CFI (cfiCond161) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond161) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond161) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond161) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond161) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond161) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond161) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond161) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond161) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond161) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond161) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond161) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond161) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond161) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond161) CFA_SP SP+0
        CFI (cfiCond161) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker162 Using cfiCommon1
        CFI (cfiPicker162) NoFunction
        CFI (cfiPicker162) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        RET
        CFI EndBlock cfiCond156
        CFI EndBlock cfiCond157
        CFI EndBlock cfiCond158
        CFI EndBlock cfiCond159
        CFI EndBlock cfiCond160
        CFI EndBlock cfiCond161
        CFI EndBlock cfiPicker162
//  807 
//  808 /*********************************************************************
//  809  * @fn          ZDP_SimpleDescMsg
//  810  *
//  811  * @brief       Builds and sends a Simple Descriptor message, unicast to the
//  812  *              specified device.
//  813  *
//  814  * @param       inMsg - incoming message (request)
//  815  * @param       Status - message status (ZDP_SUCCESS or other)
//  816  * @param       pSimpleDesc - pointer to the node descriptor
//  817  *
//  818  * @return      afStatus_t
//  819  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  820 afStatus_t ZDP_SimpleDescMsg( zdoIncomingMsg_t *inMsg, byte Status,
ZDP_SimpleDescMsg:
        CFI Block cfiBlock163 Using cfiCommon0
        CFI Function ZDP_SimpleDescMsg
        CODE
//  821                               SimpleDescriptionFormat_t *pSimpleDesc )
//  822 {
        FUNCALL ZDP_SimpleDescMsg, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R1
        MOV     R6,A
//  823   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ?Subroutine42 & 0xFFFF
//  824   uint8 i, len;
//  825 
//  826   if ( Status == ZDP_SUCCESS && pSimpleDesc )
??CrossCallReturnLabel_59:
        JNZ     ??ZDP_SimpleDescMsg_0
        MOV     A,R4
        ORL     A,R5
        JZ      ??ZDP_SimpleDescMsg_0
//  827   {
//  828     // Status + NWKAddrOfInterest + desc length + empty simple descriptor.
//  829     len = 1 + 2 + 1 + 8;
//  830     len += (pSimpleDesc->AppNumInClusters + pSimpleDesc->AppNumOutClusters) * sizeof ( uint16 );
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        MOV     R2,A
        MOVX    A,@DPTR
        ADD     A,R2
        CLR     C
        RLC     A
        ADD     A,#0xc
        MOV     R2,A
//  831   }
//  832   else
//  833   {
//  834     len = 1 + 2 + 1; // Status + desc length
//  835   }
//  836   if ( len >= ZDP_BUF_SZ-1 )
        CLR     C
        SUBB    A,#0x4f
        JC      ??ZDP_SimpleDescMsg_1
//  837   {
//  838     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??ZDP_SimpleDescMsg_2 & 0xFFFF
//  839   }
??ZDP_SimpleDescMsg_0:
        MOV     R2,#0x4
//  840 
//  841   *pBuf++ = Status;
??ZDP_SimpleDescMsg_1:
        MOV     A,R6
        LCALL   ?Subroutine50 & 0xFFFF
//  842 
//  843   *pBuf++ = LO_UINT16( ZDAppNwkAddr.addr.shortAddr );
??CrossCallReturnLabel_239:
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?Subroutine32 & 0xFFFF
//  844   *pBuf++ = HI_UINT16( ZDAppNwkAddr.addr.shortAddr );
??CrossCallReturnLabel_40:
        MOV     DPTR,#ZDAppNwkAddr + 1
        LCALL   ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_62:
        INC     DPTR
//  845 
//  846   if ( len > 4 )
        MOV     A,R2
        CLR     C
        SUBB    A,#0x5
        JNC     $+5
        LJMP    ??ZDP_SimpleDescMsg_3 & 0xFFFF
//  847   {
//  848     *pBuf++ = len - 4;   // Simple descriptor length
        MOV     A,#-0x4
        ADD     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        INC     R0
        INC     R0
        MOV     R1,DPH
//  849 
//  850     *pBuf++ = pSimpleDesc->EndPoint;
        LCALL   ?Subroutine14 & 0xFFFF
//  851     *pBuf++ = LO_UINT16( pSimpleDesc->AppProfId );
??CrossCallReturnLabel_148:
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        LCALL   ?Subroutine15 & 0xFFFF
//  852     *pBuf++ = HI_UINT16( pSimpleDesc->AppProfId );
??CrossCallReturnLabel_4:
        LCALL   ?Subroutine32 & 0xFFFF
//  853     *pBuf++ = LO_UINT16( pSimpleDesc->AppDeviceId );
??CrossCallReturnLabel_41:
        MOV     A,R4
        ADD     A,#0x3
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_89:
        LCALL   ?Subroutine15 & 0xFFFF
//  854     *pBuf++ = HI_UINT16( pSimpleDesc->AppDeviceId );
??CrossCallReturnLabel_5:
        LCALL   ??Subroutine101_0 & 0xFFFF
//  855 
//  856     *pBuf++ = (byte)(pSimpleDesc->AppDevVer << 4);
??CrossCallReturnLabel_149:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf0
        LCALL   ??Subroutine121_0 & 0xFFFF
//  857 
//  858     *pBuf++ = pSimpleDesc->AppNumInClusters;
??CrossCallReturnLabel_244:
        MOV     A,R4
        ADD     A,#0x6
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_90:
        LCALL   ?Subroutine32 & 0xFFFF
//  859     if ( pSimpleDesc->AppNumInClusters )
??CrossCallReturnLabel_42:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        JZ      ??ZDP_SimpleDescMsg_4
//  860     {
//  861       for (i=0; i<pSimpleDesc->AppNumInClusters; ++i)
        MOV     R3,#0x0
        SJMP    ??CrossCallReturnLabel_0
//  862       {
//  863         *pBuf++ = LO_UINT16( pSimpleDesc->pAppInClusterList[i] );
??ZDP_SimpleDescMsg_5:
        MOV     A,R3
        CLR     C
        RLC     A
        MOV     ?V0 + 2,A
        CLR     A
        RLC     A
        MOV     ?V0 + 3,A
        MOV     A,R4
        ADD     A,#0x7
        LCALL   ?Subroutine11 & 0xFFFF
//  864         *pBuf++ = HI_UINT16( pSimpleDesc->pAppInClusterList[i] );
//  865       }
??CrossCallReturnLabel_0:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,R3
        CLR     C
        SUBB    A,R7
        JC      ??ZDP_SimpleDescMsg_5
//  866     }
//  867 
//  868     *pBuf++ = pSimpleDesc->AppNumOutClusters;
??ZDP_SimpleDescMsg_4:
        MOV     A,R4
        ADD     A,#0x9
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_91:
        LCALL   ?Subroutine24 & 0xFFFF
//  869     if ( pSimpleDesc->AppNumOutClusters )
??CrossCallReturnLabel_22:
        MOVX    A,@DPTR
        JZ      ??ZDP_SimpleDescMsg_6
//  870     {
//  871       for (i=0; i<pSimpleDesc->AppNumOutClusters; ++i)
        MOV     R3,#0x0
??ZDP_SimpleDescMsg_7:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,R3
        CLR     C
        SUBB    A,R7
        JNC     ??ZDP_SimpleDescMsg_6
//  872       {
//  873         *pBuf++ = LO_UINT16( pSimpleDesc->pAppOutClusterList[i] );
        MOV     A,R3
        CLR     C
        RLC     A
        MOV     ?V0 + 2,A
        CLR     A
        RLC     A
        MOV     ?V0 + 3,A
        MOV     A,R4
        ADD     A,#0xa
        LCALL   ?Subroutine11 & 0xFFFF
//  874         *pBuf++ = HI_UINT16( pSimpleDesc->pAppOutClusterList[i] );
//  875       }
//  876     }
//  877   }
??CrossCallReturnLabel_1:
        SJMP    ??ZDP_SimpleDescMsg_7
//  878 
//  879   else
//  880   {
//  881     *pBuf = 0; // Description Length = 0;
??ZDP_SimpleDescMsg_3:
        CLR     A
        MOVX    @DPTR,A
//  882   }
//  883 
//  884   return fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), Simple_Desc_rsp, len );
??ZDP_SimpleDescMsg_6:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 2,#0x4
        MOV     ?V0 + 3,#-0x80
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,R2
        MOV     R1,A
        MOV     A,?V0 + 0
        ADD     A,#0x2
        MOV     R4,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,?V0 + 0
        ADD     A,#0xf
        MOV     R2,A
        MOV     A,?V0 + 1
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_99:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
??ZDP_SimpleDescMsg_2:
        SJMP    ??Subroutine104_0
        CFI EndBlock cfiBlock163
//  885 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine68:
        CFI Block cfiCond164 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_98
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 15)
        CFI Block cfiCond165 Using cfiCommon0
        CFI (cfiCond165) NoFunction
        CFI (cfiCond165) Conditional ??CrossCallReturnLabel_99
        CFI (cfiCond165) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond165) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond165) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond165) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond165) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond165) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond165) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond165) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond165) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond165) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond165) CFA_SP SP+0
        CFI (cfiCond165) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker166 Using cfiCommon1
        CFI (cfiPicker166) NoFunction
        CFI (cfiPicker166) Picker
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??fillAndSend?relay
        MOV     A,#0x2
        RET
        CFI EndBlock cfiCond164
        CFI EndBlock cfiCond165
        CFI EndBlock cfiPicker166

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine63:
        CFI Block cfiCond167 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_89
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond168 Using cfiCommon0
        CFI (cfiCond168) NoFunction
        CFI (cfiCond168) Conditional ??CrossCallReturnLabel_90
        CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond168) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond168) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond168) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond168) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond168) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond168) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond168) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond168) CFA_SP SP+0
        CFI (cfiCond168) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond169 Using cfiCommon0
        CFI (cfiCond169) NoFunction
        CFI (cfiCond169) Conditional ??CrossCallReturnLabel_91
        CFI (cfiCond169) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond169) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond169) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond169) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond169) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond169) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond169) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond169) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond169) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond169) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond169) CFA_SP SP+0
        CFI (cfiCond169) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker170 Using cfiCommon1
        CFI (cfiPicker170) NoFunction
        CFI (cfiPicker170) Picker
        MOV     ?V0 + 2,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
        MOV     DPL,?V0 + 2
        MOV     DPH,A
        RET
        CFI EndBlock cfiCond167
        CFI EndBlock cfiCond168
        CFI EndBlock cfiCond169
        CFI EndBlock cfiPicker170

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine32:
        CFI Block cfiCond171 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_39
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond172 Using cfiCommon0
        CFI (cfiCond172) NoFunction
        CFI (cfiCond172) Conditional ??CrossCallReturnLabel_40
        CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond172) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond172) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond172) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond172) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond172) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond172) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond172) CFA_SP SP+0
        CFI (cfiCond172) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond173 Using cfiCommon0
        CFI (cfiCond173) NoFunction
        CFI (cfiCond173) Conditional ??CrossCallReturnLabel_41
        CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond173) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond173) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond173) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond173) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond173) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond173) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond173) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond173) CFA_SP SP+0
        CFI (cfiCond173) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond174 Using cfiCommon0
        CFI (cfiCond174) NoFunction
        CFI (cfiCond174) Conditional ??CrossCallReturnLabel_42
        CFI (cfiCond174) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond174) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond174) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond174) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond174) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond174) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond174) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond174) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond174) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond174) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond174) CFA_SP SP+0
        CFI (cfiCond174) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond175 Using cfiCommon0
        CFI (cfiCond175) NoFunction
        CFI (cfiCond175) Conditional ??CrossCallReturnLabel_43
        CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond175) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond175) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond175) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond175) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond175) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond175) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond175) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond175) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond175) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond175) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond175) CFA_SP SP+0
        CFI (cfiCond175) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker176 Using cfiCommon1
        CFI (cfiPicker176) NoFunction
        CFI (cfiPicker176) Picker
        LCALL   ??Subroutine120_0 & 0xFFFF
??CrossCallReturnLabel_247:
        RET
        CFI EndBlock cfiCond171
        CFI EndBlock cfiCond172
        CFI EndBlock cfiCond173
        CFI EndBlock cfiCond174
        CFI EndBlock cfiCond175
        CFI EndBlock cfiPicker176

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine11:
        CFI Block cfiCond177 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_0
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond178 Using cfiCommon0
        CFI (cfiCond178) NoFunction
        CFI (cfiCond178) Conditional ??CrossCallReturnLabel_1
        CFI (cfiCond178) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond178) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond178) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond178) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond178) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond178) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond178) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond178) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond178) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond178) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond178) CFA_SP SP+0
        CFI (cfiCond178) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker179 Using cfiCommon1
        CFI (cfiPicker179) NoFunction
        CFI (cfiPicker179) Picker
        MOV     ?V0 + 4,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     ?V0 + 5,A
        MOV     DPL,?V0 + 4
        MOV     DPH,A
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_113:
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_240:
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_114:
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_248:
        INC     R3
        RET
        CFI EndBlock cfiCond177
        CFI EndBlock cfiCond178
        CFI EndBlock cfiPicker179

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine81:
        CFI Block cfiCond180 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_113, ??CrossCallReturnLabel_0
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond181 Using cfiCommon0
        CFI (cfiCond181) NoFunction
        CFI (cfiCond181) Conditional ??CrossCallReturnLabel_113, ??CrossCallReturnLabel_1
        CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond181) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond181) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond181) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond181) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond181) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond181) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond181) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond181) CFA_SP SP+0
        CFI (cfiCond181) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond182 Using cfiCommon0
        CFI (cfiCond182) NoFunction
        CFI (cfiCond182) Conditional ??CrossCallReturnLabel_114, ??CrossCallReturnLabel_0
        CFI (cfiCond182) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond182) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond182) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond182) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond182) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond182) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond182) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond182) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond182) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond182) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond182) CFA_SP SP+0
        CFI (cfiCond182) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond183 Using cfiCommon0
        CFI (cfiCond183) NoFunction
        CFI (cfiCond183) Conditional ??CrossCallReturnLabel_114, ??CrossCallReturnLabel_1
        CFI (cfiCond183) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond183) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond183) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond183) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond183) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond183) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond183) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond183) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond183) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond183) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond183) CFA_SP SP+0
        CFI (cfiCond183) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker184 Using cfiCommon1
        CFI (cfiPicker184) NoFunction
        CFI (cfiPicker184) Picker
        MOVX    A,@DPTR
        ADD     A,?V0 + 2
        MOV     R7,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,?V0 + 3
        MOV     DPL,R7
        MOV     DPH,A
        RET
        CFI EndBlock cfiCond180
        CFI EndBlock cfiCond181
        CFI EndBlock cfiCond182
        CFI EndBlock cfiCond183
        CFI EndBlock cfiPicker184

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine76:
        CFI Block cfiCond185 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_2
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond186 Using cfiCommon0
        CFI (cfiCond186) NoFunction
        CFI (cfiCond186) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_3
        CFI (cfiCond186) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond186) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond186) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond186) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond186) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond186) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond186) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond186) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond186) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond186) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond186) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond186) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond186) CFA_SP SP+0
        CFI (cfiCond186) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond187 Using cfiCommon0
        CFI (cfiCond187) NoFunction
        CFI (cfiCond187) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_0
        CFI (cfiCond187) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond187) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond187) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond187) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond187) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond187) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond187) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond187) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond187) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond187) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond187) CFA_SP SP+0
        CFI (cfiCond187) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond188 Using cfiCommon0
        CFI (cfiCond188) NoFunction
        CFI (cfiCond188) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_1
        CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond188) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond188) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond188) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond188) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond188) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond188) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond188) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond188) CFA_SP SP+0
        CFI (cfiCond188) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond189 Using cfiCommon0
        CFI (cfiCond189) NoFunction
        CFI (cfiCond189) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_22
        CFI (cfiCond189) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond189) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond189) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond189) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond189) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond189) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond189) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond189) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond189) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond189) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond189) CFA_SP SP+0
        CFI (cfiCond189) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond190 Using cfiCommon0
        CFI (cfiCond190) NoFunction
        CFI (cfiCond190) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_23
        CFI (cfiCond190) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond190) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond190) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond190) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond190) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond190) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond190) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond190) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond190) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond190) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond190) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond190) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond190) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond190) CFA_SP SP+0
        CFI (cfiCond190) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker191 Using cfiCommon1
        CFI (cfiPicker191) NoFunction
        CFI (cfiPicker191) Picker
        MOVX    A,@DPTR
        MOV     DPL,R0
        MOV     DPH,R1
        CFI EndBlock cfiCond185
        CFI EndBlock cfiCond186
        CFI EndBlock cfiCond187
        CFI EndBlock cfiCond188
        CFI EndBlock cfiCond189
        CFI EndBlock cfiCond190
        CFI EndBlock cfiPicker191
        REQUIRE ??Subroutine103_0
        ; // Fall through to label ??Subroutine103_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine103_0:
        CFI Block cfiCond192 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_238
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond193 Using cfiCommon0
        CFI (cfiCond193) NoFunction
        CFI (cfiCond193) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_239
        CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond193) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond193) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond193) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond193) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond193) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond193) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond193) CFA_SP SP+0
        CFI (cfiCond193) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond194 Using cfiCommon0
        CFI (cfiCond194) NoFunction
        CFI (cfiCond194) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_235
        CFI (cfiCond194) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond194) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond194) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond194) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond194) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond194) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond194) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond194) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond194) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond194) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond194) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond194) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond194) CFA_SP SP+0
        CFI (cfiCond194) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond195 Using cfiCommon0
        CFI (cfiCond195) NoFunction
        CFI (cfiCond195) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_236
        CFI (cfiCond195) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond195) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond195) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond195) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond195) CFA_SP SP+0
        CFI (cfiCond195) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond196 Using cfiCommon0
        CFI (cfiCond196) NoFunction
        CFI (cfiCond196) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_237
        CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond196) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond196) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond196) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond196) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond196) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond196) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond196) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond196) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond196) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond196) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond196) CFA_SP SP+0
        CFI (cfiCond196) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond197 Using cfiCommon0
        CFI (cfiCond197) NoFunction
        CFI (cfiCond197) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_2
        CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond197) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond197) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond197) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond197) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond197) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond197) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond197) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond197) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond197) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond197) CFA_SP SP+0
        CFI (cfiCond197) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond198 Using cfiCommon0
        CFI (cfiCond198) NoFunction
        CFI (cfiCond198) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_3
        CFI (cfiCond198) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond198) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond198) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond198) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond198) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond198) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond198) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond198) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond198) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond198) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond198) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond198) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond198) CFA_SP SP+0
        CFI (cfiCond198) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond199 Using cfiCommon0
        CFI (cfiCond199) NoFunction
        CFI (cfiCond199) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_0
        CFI (cfiCond199) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond199) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond199) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond199) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond199) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond199) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond199) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond199) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond199) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond199) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond199) CFA_SP SP+0
        CFI (cfiCond199) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond200 Using cfiCommon0
        CFI (cfiCond200) NoFunction
        CFI (cfiCond200) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_1
        CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond200) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond200) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond200) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond200) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond200) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond200) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond200) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond200) CFA_SP SP+0
        CFI (cfiCond200) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond201 Using cfiCommon0
        CFI (cfiCond201) NoFunction
        CFI (cfiCond201) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_22
        CFI (cfiCond201) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond201) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond201) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond201) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond201) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond201) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond201) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond201) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond201) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond201) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond201) CFA_SP SP+0
        CFI (cfiCond201) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond202 Using cfiCommon0
        CFI (cfiCond202) NoFunction
        CFI (cfiCond202) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_23
        CFI (cfiCond202) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond202) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond202) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond202) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond202) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond202) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond202) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond202) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond202) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond202) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond202) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond202) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond202) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond202) CFA_SP SP+0
        CFI (cfiCond202) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker203 Using cfiCommon1
        CFI (cfiPicker203) NoFunction
        CFI (cfiPicker203) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        RET
        CFI EndBlock cfiCond192
        CFI EndBlock cfiCond193
        CFI EndBlock cfiCond194
        CFI EndBlock cfiCond195
        CFI EndBlock cfiCond196
        CFI EndBlock cfiCond197
        CFI EndBlock cfiCond198
        CFI EndBlock cfiCond199
        CFI EndBlock cfiCond200
        CFI EndBlock cfiCond201
        CFI EndBlock cfiCond202
        CFI EndBlock cfiPicker203

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock204 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI EndBlock cfiBlock204
        REQUIRE ??Subroutine104_0
        ; // Fall through to label ??Subroutine104_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine104_0:
        CFI Block cfiBlock205 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock205
//  886 
//  887 /*********************************************************************
//  888  * @fn          ZDP_EPRsp
//  889  *
//  890  * @brief       This builds and send an endpoint list. Used in
//  891  *              Active_EP_rsp and Match_Desc_Rsp
//  892  *              message.  This function sends unicast message to the
//  893  *              requesting device.
//  894  *
//  895  * @param       MsgType - either Active_EP_rsp or Match_Desc_Rsp
//  896  * @param       dstAddr - destination address
//  897  * @param       Status - message status (ZDP_SUCCESS or other)
//  898  * @param       nwkAddr - Device's short address that this response describes
//  899  * @param       Count - number of endpoint/interfaces in list
//  900  * @param       pEPIntfList - Array of Endpoint/Interfaces
//  901  * @param       SecurityEnable - Security Options
//  902  *
//  903  * @return      afStatus_t
//  904  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  905 afStatus_t ZDP_EPRsp( uint16 MsgType, byte TransSeq, zAddrType_t *dstAddr,
ZDP_EPRsp:
        CFI Block cfiBlock206 Using cfiCommon0
        CFI Function ZDP_EPRsp
        CODE
//  906                         byte Status, uint16 nwkAddr, byte Count,
//  907                         uint8 *pEPList,
//  908                         byte SecurityEnable )
//  909 {
        FUNCALL ZDP_EPRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EPRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,R5
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine107_0 & 0xFFFF
??CrossCallReturnLabel_168:
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 8,A
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine34 & 0xFFFF
//  910   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_47:
        LCALL   ?Subroutine38 & 0xFFFF
//  911   byte len = 1 + 2 + 1;  // Status + nwkAddr + endpoint/interface count.
??CrossCallReturnLabel_154:
        MOV     ?V0 + 0,#0x4
//  912   byte txOptions;
//  913 
//  914   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  915 
//  916   if ( MsgType == Match_Desc_rsp )
        MOV     A,#0x6
        XRL     A,R6
        JNZ     ??ZDP_EPRsp_0
        MOV     A,#-0x80
        XRL     A,R7
??ZDP_EPRsp_0:
        JNZ     ??ZDP_EPRsp_1
//  917     txOptions = AF_MSG_ACK_REQUEST;
        MOV     ?V0 + 1,#0x10
        SJMP    ??ZDP_EPRsp_2
//  918   else
//  919     txOptions = 0;
??ZDP_EPRsp_1:
        MOV     ?V0 + 1,#0x0
//  920 
//  921     *pBuf++ = Status;
??ZDP_EPRsp_2:
        MOV     A,R4
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        INC     DPTR
//  922   *pBuf++ = LO_UINT16( nwkAddr );
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
//  923   *pBuf++ = HI_UINT16( nwkAddr );
        MOV     A,R1
        LCALL   ?Subroutine49 & 0xFFFF
//  924 
//  925   *pBuf++ = Count;   // Endpoint/Interface count
//  926 
//  927   if ( Count )
??CrossCallReturnLabel_252:
        JZ      ??ZDP_EPRsp_3
//  928   {
//  929     len += Count;
        MOV     A,#0x4
        ADD     A,?V0 + 8
        MOV     ?V0 + 0,A
//  930     osal_memcpy( pBuf, pEPList, Count );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
        CFI CFA_XSP16 add(XSP16, 22)
        MOV     R4,?V0 + 8
        LCALL   ?Subroutine70 & 0xFFFF
//  931   }
??CrossCallReturnLabel_156:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 19)
//  932 
//  933   FillAndSendTxOptions( &TransSeq, dstAddr, MsgType, len, txOptions );
??ZDP_EPRsp_3:
        MOV     A,?V0 + 1
        MOV     DPTR,#ZDP_TxOptions
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 4,R6
        MOV     ?V0 + 5,R7
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 21)
        MOV     R1,?V0 + 0
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_271:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 19)
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
        INC     A
        LJMP    ?Subroutine3 & 0xFFFF
        CFI EndBlock cfiBlock206
//  934 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine70:
        CFI Block cfiCond207 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_156
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond208 Using cfiCommon0
        CFI (cfiCond208) NoFunction
        CFI (cfiCond208) Conditional ??CrossCallReturnLabel_157
        CFI (cfiCond208) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond208) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond208) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond208) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond208) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond208) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond208) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond208) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond208) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond208) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond208) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond208) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond208) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond208) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond208) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond208) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond208) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond208) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond208) CFA_SP SP+0
        CFI (cfiCond208) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond209 Using cfiCommon0
        CFI (cfiCond209) NoFunction
        CFI (cfiCond209) Conditional ??CrossCallReturnLabel_158
        CFI (cfiCond209) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond209) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond209) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond209) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond209) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond209) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond209) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond209) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond209) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond209) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond209) CFA_SP SP+0
        CFI (cfiCond209) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond210 Using cfiCommon0
        CFI (cfiCond210) NoFunction
        CFI (cfiCond210) Conditional ??CrossCallReturnLabel_159
        CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond210) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond210) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond210) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond210) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond210) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond210) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond210) CFA_SP SP+0
        CFI (cfiCond210) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiPicker211 Using cfiCommon1
        CFI (cfiPicker211) NoFunction
        CFI (cfiPicker211) Picker
        MOV     R5,#0x0
        CFI EndBlock cfiCond207
        CFI EndBlock cfiCond208
        CFI EndBlock cfiCond209
        CFI EndBlock cfiCond210
        CFI EndBlock cfiPicker211
        REQUIRE ??Subroutine105_0
        ; // Fall through to label ??Subroutine105_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine105_0:
        CFI Block cfiCond212 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_160
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+-1
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond213 Using cfiCommon0
        CFI (cfiCond213) NoFunction
        CFI (cfiCond213) Conditional ??CrossCallReturnLabel_161
        CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond213) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond213) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond213) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond213) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond213) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond213) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond213) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond213) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond213) CFA_SP SP+0
        CFI (cfiCond213) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond214 Using cfiCommon0
        CFI (cfiCond214) NoFunction
        CFI (cfiCond214) Conditional ??CrossCallReturnLabel_156
        CFI (cfiCond214) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond214) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond214) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond214) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond214) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond214) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond214) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond214) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond214) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond214) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond214) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond214) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond214) CFA_SP SP+0
        CFI (cfiCond214) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond215 Using cfiCommon0
        CFI (cfiCond215) NoFunction
        CFI (cfiCond215) Conditional ??CrossCallReturnLabel_157
        CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond215) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond215) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond215) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond215) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond215) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond215) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond215) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond215) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond215) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond215) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond215) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond215) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond215) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond215) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond215) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond215) CFA_SP SP+0
        CFI (cfiCond215) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond216 Using cfiCommon0
        CFI (cfiCond216) NoFunction
        CFI (cfiCond216) Conditional ??CrossCallReturnLabel_158
        CFI (cfiCond216) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond216) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond216) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond216) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond216) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond216) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond216) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond216) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond216) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond216) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond216) CFA_SP SP+0
        CFI (cfiCond216) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond217 Using cfiCommon0
        CFI (cfiCond217) NoFunction
        CFI (cfiCond217) Conditional ??CrossCallReturnLabel_159
        CFI (cfiCond217) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond217) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond217) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond217) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond217) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond217) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond217) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond217) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond217) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond217) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond217) CFA_SP SP+0
        CFI (cfiCond217) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiPicker218 Using cfiCommon1
        CFI (cfiPicker218) NoFunction
        CFI (cfiPicker218) Picker
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        RET
        CFI EndBlock cfiCond212
        CFI EndBlock cfiCond213
        CFI EndBlock cfiCond214
        CFI EndBlock cfiCond215
        CFI EndBlock cfiCond216
        CFI EndBlock cfiCond217
        CFI EndBlock cfiPicker218

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine45:
        CFI Block cfiCond219 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_174
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 33)
        CFI Block cfiCond220 Using cfiCommon0
        CFI (cfiCond220) NoFunction
        CFI (cfiCond220) Conditional ??CrossCallReturnLabel_175
        CFI (cfiCond220) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond220) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond220) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond220) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond220) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond220) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond220) CFA_SP SP+0
        CFI (cfiCond220) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiPicker221 Using cfiCommon1
        CFI (cfiPicker221) NoFunction
        CFI (cfiPicker221) Picker
        INC     DPTR
        CFI EndBlock cfiCond219
        CFI EndBlock cfiCond220
        CFI EndBlock cfiPicker221
        REQUIRE ??Subroutine106_0
        ; // Fall through to label ??Subroutine106_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine106_0:
        CFI Block cfiCond222 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_173
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond223 Using cfiCommon0
        CFI (cfiCond223) NoFunction
        CFI (cfiCond223) Conditional ??CrossCallReturnLabel_174
        CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond223) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond223) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond223) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond223) CFA_SP SP+0
        CFI (cfiCond223) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiCond224 Using cfiCommon0
        CFI (cfiCond224) NoFunction
        CFI (cfiCond224) Conditional ??CrossCallReturnLabel_175
        CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond224) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond224) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond224) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond224) CFA_SP SP+0
        CFI (cfiCond224) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiPicker225 Using cfiCommon1
        CFI (cfiPicker225) NoFunction
        CFI (cfiPicker225) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond222
        CFI EndBlock cfiCond223
        CFI EndBlock cfiCond224
        CFI EndBlock cfiPicker225
        REQUIRE ??Subroutine107_0
        ; // Fall through to label ??Subroutine107_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine107_0:
        CFI Block cfiCond226 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_162
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond227 Using cfiCommon0
        CFI (cfiCond227) NoFunction
        CFI (cfiCond227) Conditional ??CrossCallReturnLabel_163
        CFI (cfiCond227) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond227) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond227) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond227) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond227) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond227) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond227) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond227) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond227) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond227) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond227) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond227) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond227) CFA_SP SP+0
        CFI (cfiCond227) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond228 Using cfiCommon0
        CFI (cfiCond228) NoFunction
        CFI (cfiCond228) Conditional ??CrossCallReturnLabel_164
        CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond228) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond228) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond228) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond228) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond228) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond228) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond228) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond228) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond228) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond228) CFA_SP SP+0
        CFI (cfiCond228) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond229 Using cfiCommon0
        CFI (cfiCond229) NoFunction
        CFI (cfiCond229) Conditional ??CrossCallReturnLabel_165
        CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond229) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond229) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond229) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond229) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond229) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond229) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond229) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond229) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond229) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond229) CFA_SP SP+0
        CFI (cfiCond229) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond230 Using cfiCommon0
        CFI (cfiCond230) NoFunction
        CFI (cfiCond230) Conditional ??CrossCallReturnLabel_166
        CFI (cfiCond230) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond230) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond230) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond230) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond230) CFA_SP SP+0
        CFI (cfiCond230) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond231 Using cfiCommon0
        CFI (cfiCond231) NoFunction
        CFI (cfiCond231) Conditional ??CrossCallReturnLabel_167
        CFI (cfiCond231) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond231) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond231) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond231) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond231) CFA_SP SP+0
        CFI (cfiCond231) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond232 Using cfiCommon0
        CFI (cfiCond232) NoFunction
        CFI (cfiCond232) Conditional ??CrossCallReturnLabel_168
        CFI (cfiCond232) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond232) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond232) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond232) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond232) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond232) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond232) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond232) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond232) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond232) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond232) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond232) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond232) CFA_SP SP+0
        CFI (cfiCond232) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond233 Using cfiCommon0
        CFI (cfiCond233) NoFunction
        CFI (cfiCond233) Conditional ??CrossCallReturnLabel_169
        CFI (cfiCond233) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond233) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond233) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond233) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond233) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond233) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond233) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond233) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond233) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond233) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond233) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond233) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond233) CFA_SP SP+0
        CFI (cfiCond233) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond234 Using cfiCommon0
        CFI (cfiCond234) NoFunction
        CFI (cfiCond234) Conditional ??CrossCallReturnLabel_170
        CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond234) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond234) CFA_SP SP+0
        CFI (cfiCond234) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond235 Using cfiCommon0
        CFI (cfiCond235) NoFunction
        CFI (cfiCond235) Conditional ??CrossCallReturnLabel_171
        CFI (cfiCond235) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond235) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond235) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond235) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond235) CFA_SP SP+0
        CFI (cfiCond235) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond236 Using cfiCommon0
        CFI (cfiCond236) NoFunction
        CFI (cfiCond236) Conditional ??CrossCallReturnLabel_172
        CFI (cfiCond236) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond236) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond236) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond236) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond236) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond236) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond236) CFA_SP SP+0
        CFI (cfiCond236) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiCond237 Using cfiCommon0
        CFI (cfiCond237) NoFunction
        CFI (cfiCond237) Conditional ??CrossCallReturnLabel_173
        CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond237) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond237) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond237) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond237) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond237) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond237) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond237) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond237) CFA_SP SP+0
        CFI (cfiCond237) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond238 Using cfiCommon0
        CFI (cfiCond238) NoFunction
        CFI (cfiCond238) Conditional ??CrossCallReturnLabel_174
        CFI (cfiCond238) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond238) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond238) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond238) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond238) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond238) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond238) CFA_SP SP+0
        CFI (cfiCond238) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiCond239 Using cfiCommon0
        CFI (cfiCond239) NoFunction
        CFI (cfiCond239) Conditional ??CrossCallReturnLabel_175
        CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond239) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond239) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond239) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond239) CFA_SP SP+0
        CFI (cfiCond239) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiPicker240 Using cfiCommon1
        CFI (cfiPicker240) NoFunction
        CFI (cfiPicker240) Picker
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_180:
        RET
        CFI EndBlock cfiCond226
        CFI EndBlock cfiCond227
        CFI EndBlock cfiCond228
        CFI EndBlock cfiCond229
        CFI EndBlock cfiCond230
        CFI EndBlock cfiCond231
        CFI EndBlock cfiCond232
        CFI EndBlock cfiCond233
        CFI EndBlock cfiCond234
        CFI EndBlock cfiCond235
        CFI EndBlock cfiCond236
        CFI EndBlock cfiCond237
        CFI EndBlock cfiCond238
        CFI EndBlock cfiCond239
        CFI EndBlock cfiPicker240

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine82:
        CFI Block cfiCond241 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_26
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond242 Using cfiCommon0
        CFI (cfiCond242) NoFunction
        CFI (cfiCond242) Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_27
        CFI (cfiCond242) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond242) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond242) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond242) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond242) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond242) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond242) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond242) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond242) CFA_SP SP+0
        CFI (cfiCond242) CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond243 Using cfiCommon0
        CFI (cfiCond243) NoFunction
        CFI (cfiCond243) Conditional ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_57
        CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond243) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond243) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond243) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond243) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond243) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond243) CFA_SP SP+0
        CFI (cfiCond243) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond244 Using cfiCommon0
        CFI (cfiCond244) NoFunction
        CFI (cfiCond244) Conditional ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_58
        CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond244) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond244) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond244) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond244) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond244) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond244) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond244) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond244) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond244) CFA_SP SP+0
        CFI (cfiCond244) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond245 Using cfiCommon0
        CFI (cfiCond245) NoFunction
        CFI (cfiCond245) Conditional ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_59
        CFI (cfiCond245) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond245) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond245) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond245) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond245) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond245) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond245) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond245) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond245) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond245) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond245) CFA_SP SP+0
        CFI (cfiCond245) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond246 Using cfiCommon0
        CFI (cfiCond246) NoFunction
        CFI (cfiCond246) Conditional ??CrossCallReturnLabel_179, ??CrossCallReturnLabel_137
        CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond246) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond246) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond246) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond246) CFA_SP SP+0
        CFI (cfiCond246) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond247 Using cfiCommon0
        CFI (cfiCond247) NoFunction
        CFI (cfiCond247) Conditional ??CrossCallReturnLabel_179, ??CrossCallReturnLabel_138
        CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond247) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond247) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond247) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond247) CFA_SP SP+0
        CFI (cfiCond247) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond248 Using cfiCommon0
        CFI (cfiCond248) NoFunction
        CFI (cfiCond248) Conditional ??CrossCallReturnLabel_179, ??CrossCallReturnLabel_136
        CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond248) CFA_SP SP+0
        CFI (cfiCond248) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond249 Using cfiCommon0
        CFI (cfiCond249) NoFunction
        CFI (cfiCond249) Conditional ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_64
        CFI (cfiCond249) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond249) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond249) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond249) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond249) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond249) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond249) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond249) CFA_SP SP+0
        CFI (cfiCond249) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond250 Using cfiCommon0
        CFI (cfiCond250) NoFunction
        CFI (cfiCond250) Conditional ??CrossCallReturnLabel_178, ??CrossCallReturnLabel_63
        CFI (cfiCond250) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond250) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond250) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond250) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond250) CFA_SP SP+0
        CFI (cfiCond250) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond251 Using cfiCommon0
        CFI (cfiCond251) NoFunction
        CFI (cfiCond251) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_174
        CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond251) CFA_SP SP+0
        CFI (cfiCond251) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiCond252 Using cfiCommon0
        CFI (cfiCond252) NoFunction
        CFI (cfiCond252) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_175
        CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond252) CFA_SP SP+0
        CFI (cfiCond252) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiCond253 Using cfiCommon0
        CFI (cfiCond253) NoFunction
        CFI (cfiCond253) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_173
        CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond253) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond253) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond253) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond253) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond253) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond253) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond253) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond253) CFA_SP SP+0
        CFI (cfiCond253) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond254 Using cfiCommon0
        CFI (cfiCond254) NoFunction
        CFI (cfiCond254) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_162
        CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond254) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond254) CFA_SP SP+0
        CFI (cfiCond254) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond255 Using cfiCommon0
        CFI (cfiCond255) NoFunction
        CFI (cfiCond255) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_163
        CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond255) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond255) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond255) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond255) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond255) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond255) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond255) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond255) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond255) CFA_SP SP+0
        CFI (cfiCond255) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond256 Using cfiCommon0
        CFI (cfiCond256) NoFunction
        CFI (cfiCond256) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_164
        CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond256) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond256) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond256) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond256) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond256) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond256) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond256) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond256) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond256) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond256) CFA_SP SP+0
        CFI (cfiCond256) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond257 Using cfiCommon0
        CFI (cfiCond257) NoFunction
        CFI (cfiCond257) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_165
        CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond257) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond257) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond257) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond257) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond257) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond257) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond257) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond257) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond257) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond257) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond257) CFA_SP SP+0
        CFI (cfiCond257) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond258 Using cfiCommon0
        CFI (cfiCond258) NoFunction
        CFI (cfiCond258) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_166
        CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond258) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond258) CFA_SP SP+0
        CFI (cfiCond258) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond259 Using cfiCommon0
        CFI (cfiCond259) NoFunction
        CFI (cfiCond259) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_167
        CFI (cfiCond259) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond259) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond259) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond259) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond259) CFA_SP SP+0
        CFI (cfiCond259) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond260 Using cfiCommon0
        CFI (cfiCond260) NoFunction
        CFI (cfiCond260) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_168
        CFI (cfiCond260) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond260) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond260) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond260) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond260) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond260) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond260) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond260) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond260) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond260) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond260) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond260) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond260) CFA_SP SP+0
        CFI (cfiCond260) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond261 Using cfiCommon0
        CFI (cfiCond261) NoFunction
        CFI (cfiCond261) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_169
        CFI (cfiCond261) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond261) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond261) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond261) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond261) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond261) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond261) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond261) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond261) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond261) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond261) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond261) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond261) CFA_SP SP+0
        CFI (cfiCond261) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond262 Using cfiCommon0
        CFI (cfiCond262) NoFunction
        CFI (cfiCond262) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_170
        CFI (cfiCond262) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond262) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond262) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond262) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond262) CFA_SP SP+0
        CFI (cfiCond262) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond263 Using cfiCommon0
        CFI (cfiCond263) NoFunction
        CFI (cfiCond263) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_171
        CFI (cfiCond263) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond263) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond263) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond263) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond263) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond263) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond263) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond263) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond263) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond263) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond263) CFA_SP SP+0
        CFI (cfiCond263) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond264 Using cfiCommon0
        CFI (cfiCond264) NoFunction
        CFI (cfiCond264) Conditional ??CrossCallReturnLabel_180, ??CrossCallReturnLabel_172
        CFI (cfiCond264) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond264) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond264) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond264) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond264) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond264) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond264) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond264) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond264) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond264) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond264) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond264) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond264) CFA_SP SP+0
        CFI (cfiCond264) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiPicker265 Using cfiCommon1
        CFI (cfiPicker265) NoFunction
        CFI (cfiPicker265) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        RET
        CFI EndBlock cfiCond241
        CFI EndBlock cfiCond242
        CFI EndBlock cfiCond243
        CFI EndBlock cfiCond244
        CFI EndBlock cfiCond245
        CFI EndBlock cfiCond246
        CFI EndBlock cfiCond247
        CFI EndBlock cfiCond248
        CFI EndBlock cfiCond249
        CFI EndBlock cfiCond250
        CFI EndBlock cfiCond251
        CFI EndBlock cfiCond252
        CFI EndBlock cfiCond253
        CFI EndBlock cfiCond254
        CFI EndBlock cfiCond255
        CFI EndBlock cfiCond256
        CFI EndBlock cfiCond257
        CFI EndBlock cfiCond258
        CFI EndBlock cfiCond259
        CFI EndBlock cfiCond260
        CFI EndBlock cfiCond261
        CFI EndBlock cfiCond262
        CFI EndBlock cfiCond263
        CFI EndBlock cfiCond264
        CFI EndBlock cfiPicker265

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine34:
        CFI Block cfiCond266 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_46
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond267 Using cfiCommon0
        CFI (cfiCond267) NoFunction
        CFI (cfiCond267) Conditional ??CrossCallReturnLabel_47
        CFI (cfiCond267) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond267) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond267) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond267) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond267) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond267) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond267) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond267) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond267) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond267) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond267) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond267) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond267) CFA_SP SP+0
        CFI (cfiCond267) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond268 Using cfiCommon0
        CFI (cfiCond268) NoFunction
        CFI (cfiCond268) Conditional ??CrossCallReturnLabel_48
        CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond268) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond268) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond268) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond268) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond268) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond268) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond268) CFA_SP SP+0
        CFI (cfiCond268) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker269 Using cfiCommon1
        CFI (cfiPicker269) NoFunction
        CFI (cfiPicker269) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
        RET
        CFI EndBlock cfiCond266
        CFI EndBlock cfiCond267
        CFI EndBlock cfiCond268
        CFI EndBlock cfiPicker269
//  935 
//  936 /*********************************************************************
//  937  * @fn          ZDP_UserDescRsp
//  938  *
//  939  * @brief       Build and send the User Decriptor Response.
//  940  *
//  941  *
//  942  * @param       dstAddr - destination address
//  943  * @param       nwkAddrOfInterest -
//  944  * @param       userDesc -
//  945  * @param       SecurityEnable - Security Options
//  946  *
//  947  * @return      ZStatus_t
//  948  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  949 ZStatus_t ZDP_UserDescRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_UserDescRsp:
        CFI Block cfiBlock270 Using cfiCommon0
        CFI Function ZDP_UserDescRsp
        CODE
//  950                 uint16 nwkAddrOfInterest, UserDescriptorFormat_t *userDesc,
//  951                 byte SecurityEnable )
//  952 {
        FUNCALL ZDP_UserDescRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_UserDescRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine107_0 & 0xFFFF
??CrossCallReturnLabel_169:
        MOV     ?V0 + 8,R0
        MOV     ?V0 + 9,R1
//  953   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ?Subroutine41 & 0xFFFF
//  954   byte len = 1 + 2 + 1;  // Status + nwkAddr + descriptor length.
//  955 
//  956   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  957 
//  958   len += userDesc->len;
??CrossCallReturnLabel_213:
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        ADD     A,#0x4
        MOV     ?V0 + 2,A
//  959 
//  960   *pBuf++ = ZSUCCESS;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine57 & 0xFFFF
//  961 
//  962   *pBuf++ = LO_UINT16( nwkAddrOfInterest );
//  963   *pBuf++ = HI_UINT16( nwkAddrOfInterest );
??CrossCallReturnLabel_81:
        LCALL   ?Subroutine53 & 0xFFFF
//  964 
//  965   *pBuf++ = userDesc->len;
??CrossCallReturnLabel_75:
        MOVX    A,@DPTR
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine53 & 0xFFFF
//  966   osal_memcpy( pBuf, userDesc->desc, userDesc->len );
??CrossCallReturnLabel_76:
        INC     DPTR
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V0 + 4,R1
        MOV     ?V0 + 5,R2
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
        CFI CFA_XSP16 add(XSP16, 22)
        MOV     DPL,?V0 + 8
        MOV     DPH,?V0 + 9
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??Subroutine105_0 & 0xFFFF
??CrossCallReturnLabel_161:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 19)
//  967 
//  968   return (ZStatus_t)fillAndSend( &TransSeq, dstAddr, User_Desc_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 0,#0x11
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 21)
        MOV     R1,?V0 + 2
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_272:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,#0x1
        LJMP    ?Subroutine3 & 0xFFFF
        CFI EndBlock cfiBlock270
//  969 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine53:
        CFI Block cfiCond271 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_75
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond272 Using cfiCommon0
        CFI (cfiCond272) NoFunction
        CFI (cfiCond272) Conditional ??CrossCallReturnLabel_76
        CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond272) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond272) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond272) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond272) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond272) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond272) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond272) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond272) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond272) CFA_SP SP+0
        CFI (cfiCond272) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiPicker273 Using cfiCommon1
        CFI (cfiPicker273) NoFunction
        CFI (cfiPicker273) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,R0
        MOV     DPH,R1
        RET
        CFI EndBlock cfiCond271
        CFI EndBlock cfiCond272
        CFI EndBlock cfiPicker273
//  970 
//  971 /*********************************************************************
//  972  * @fn          ZDP_ServerDiscRsp
//  973  *
//  974  * @brief       Build and send the Server_Discovery_rsp response.
//  975  *
//  976  * @param       transID - Transaction sequence number of request.
//  977  * @param       dstAddr - Network Destination Address.
//  978  * @param       status - Status of response to request.
//  979  * @param       aoi - Network Address of Interest of request.
//  980  * @param       serverMask - Bit map of service(s) being sought.
//  981  * @param       SecurityEnable - Security Options
//  982  *
//  983  * @return      ZStatus_t
//  984  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  985 ZStatus_t ZDP_ServerDiscRsp( byte transID, zAddrType_t *dstAddr, byte status,
ZDP_ServerDiscRsp:
        CFI Block cfiBlock274 Using cfiCommon0
        CFI Function ZDP_ServerDiscRsp
        CODE
//  986                            uint16 aoi, uint16 serverMask, byte SecurityEnable )
//  987 {
        FUNCALL ZDP_ServerDiscRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     A,R4
        MOV     R6,A
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine107_0 & 0xFFFF
//  988   const byte len = 1  + 2;  // status + aoi + mask.
//  989   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_170:
        MOV     DPTR,#ZDP_TmpBuf
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_65:
        MOV     DPL,R4
        MOV     DPH,R5
//  990   ZStatus_t stat;
//  991 
//  992   // Intentionally unreferenced parameters
//  993   (void)aoi;
//  994   (void)SecurityEnable;
//  995 
//  996   *pBuf++ = status;
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
//  997 
//  998   *pBuf++ = LO_UINT16( serverMask );
        LCALL   ??Subroutine118_0 & 0xFFFF
//  999   *pBuf++ = HI_UINT16( serverMask );
// 1000 
// 1001   ZDP_TxOptions = AF_MSG_ACK_REQUEST;
??CrossCallReturnLabel_225:
        MOV     DPTR,#ZDP_TxOptions
        MOV     A,#0x10
        MOVX    @DPTR,A
// 1002   stat = fillAndSend( &transID, dstAddr, Server_Discovery_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 0,#0x15
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 13)
        MOV     R1,#0x3
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_273:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
// 1003   ZDP_TxOptions = AF_TX_OPTIONS_NONE;
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
// 1004 
// 1005   return ( stat );
        INC     A
        LJMP    ??Subroutine94_0 & 0xFFFF
        CFI EndBlock cfiBlock274
// 1006 }
// 1007 
// 1008 /*********************************************************************
// 1009  * @fn          ZDP_GenericRsp
// 1010  *
// 1011  * @brief       Sends a response message with only the parameter status
// 1012  *              byte and the addr of interest for data.
// 1013  *              This function sends unicast message to the
// 1014  *              requesting device.
// 1015  *
// 1016  * @param       dstAddr - destination address
// 1017  * @param       status  - generic status for response
// 1018  * @param       aoi     - address of interest
// 1019  * @param       dstAddr - destination address
// 1020  * @param       rspId   - response cluster ID
// 1021  * @param       SecurityEnable - Security Options
// 1022  *
// 1023  * @return      afStatus_t
// 1024  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1025 afStatus_t ZDP_GenericRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_GenericRsp:
        CFI Block cfiBlock275 Using cfiCommon0
        CFI Function ZDP_GenericRsp
        CODE
// 1026                      byte status, uint16 aoi, uint16 rspID, byte SecurityEnable )
// 1027 {
        FUNCALL ZDP_GenericRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     A,R4
        MOV     R6,A
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine107_0 & 0xFFFF
??CrossCallReturnLabel_171:
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine114_0 & 0xFFFF
// 1028   uint8 len;
// 1029 
// 1030   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1031 
// 1032   ZDP_TmpBuf[0] = status;
??CrossCallReturnLabel_208:
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_71:
        MOV     A,R6
        MOVX    @DPTR,A
// 1033   ZDP_TmpBuf[1] = LO_UINT16( aoi );
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_72:
        INC     DPTR
        MOV     A,R0
        MOVX    @DPTR,A
// 1034   ZDP_TmpBuf[2] = HI_UINT16( aoi );
        LCALL   ?Subroutine28 & 0xFFFF
// 1035 
// 1036   // Length byte
// 1037   ZDP_TmpBuf[3] = 0;
??CrossCallReturnLabel_36:
        LCALL   ??Subroutine95_0 & 0xFFFF
??CrossCallReturnLabel_126:
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
// 1038   len = 4;
// 1039 
// 1040   return fillAndSend( &TransSeq, dstAddr, rspID, len );
        ; Setup parameters for call to function fillAndSend
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 13)
        MOV     R1,#0x4
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_274:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,#0x1
        LJMP    ??Subroutine94_0 & 0xFFFF
        CFI EndBlock cfiBlock275
// 1041 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine48:
        CFI Block cfiCond276 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_71
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond277 Using cfiCommon0
        CFI (cfiCond277) NoFunction
        CFI (cfiCond277) Conditional ??CrossCallReturnLabel_72
        CFI (cfiCond277) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond277) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond277) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond277) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond277) CFA_SP SP+0
        CFI (cfiCond277) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker278 Using cfiCommon1
        CFI (cfiPicker278) NoFunction
        CFI (cfiPicker278) Picker
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R4
        RET
        CFI EndBlock cfiCond276
        CFI EndBlock cfiCond277
        CFI EndBlock cfiPicker278

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine28:
        CFI Block cfiCond279 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_35
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond280 Using cfiCommon0
        CFI (cfiCond280) NoFunction
        CFI (cfiCond280) Conditional ??CrossCallReturnLabel_36
        CFI (cfiCond280) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond280) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond280) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond280) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond280) CFA_SP SP+0
        CFI (cfiCond280) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker281 Using cfiCommon1
        CFI (cfiPicker281) NoFunction
        CFI (cfiPicker281) Picker
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_133:
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond279
        CFI EndBlock cfiCond280
        CFI EndBlock cfiPicker281
// 1042 
// 1043 /*********************************************************************
// 1044  * Binding
// 1045  */
// 1046 /*********************************************************************
// 1047  * @fn          ZDP_EndDeviceBindReq
// 1048  *
// 1049  * @brief       This builds and sends a End_Device_Bind_req message.
// 1050  *              This function sends a unicast message.
// 1051  *
// 1052  * @param       dstAddr - destination address
// 1053  * @param       LocalCoordinator - short address of local coordinator
// 1054  * @param       epIntf - Endpoint/Interface of Simple Desc
// 1055  * @param       ProfileID - Profile ID
// 1056  *
// 1057  *   The Input cluster list is the opposite of what you would think.
// 1058  *   This is the output cluster list of this device
// 1059  * @param       NumInClusters - number of input clusters
// 1060  * @param       InClusterList - input cluster ID list
// 1061  *
// 1062  *   The Output cluster list is the opposite of what you would think.
// 1063  *   This is the input cluster list of this device
// 1064  * @param       NumOutClusters - number of output clusters
// 1065  * @param       OutClusterList - output cluster ID list
// 1066  *
// 1067  * @param       SecurityEnable - Security Options
// 1068  *
// 1069  * @return      afStatus_t
// 1070  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1071 afStatus_t ZDP_EndDeviceBindReq( zAddrType_t *dstAddr,
ZDP_EndDeviceBindReq:
        CFI Block cfiBlock282 Using cfiCommon0
        CFI Function ZDP_EndDeviceBindReq
        CODE
// 1072                                  uint16 LocalCoordinator,
// 1073                                  byte endPoint,
// 1074                                  uint16 ProfileID,
// 1075                                  byte NumInClusters, cId_t *InClusterList,
// 1076                                  byte NumOutClusters, cId_t *OutClusterList,
// 1077                                  byte SecurityEnable )
// 1078 {
        FUNCALL ZDP_EndDeviceBindReq, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceBindReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceBindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceBindReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 0
        MOV     ?V0 + 14,R2
        MOV     ?V0 + 15,R3
        MOV     ?V0 + 4,R4
        MOV     ?V0 + 5,R5
        MOV     ?V0 + 7,R1
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_55:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        MOV     A,#0x1b
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 12,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 13,A
        MOV     A,#0x1d
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
        MOV     A,#0x1e
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 10,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 11,A
// 1079   uint8 *pBuf = ZDP_TmpBuf;
        MOV     DPTR,#ZDP_TmpBuf
        LCALL   ?Subroutine27 & 0xFFFF
// 1080   uint8 i, len;
// 1081   uint8 *ieeeAddr;
// 1082 
// 1083   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1084 
// 1085   // LocalCoordinator + SrcExtAddr + ep + ProfileID +  NumInClusters + NumOutClusters.
// 1086   len = 2 + Z_EXTADDR_LEN + 1 + 2 + 1 + 1;
// 1087   len += (NumInClusters + NumOutClusters) * sizeof ( uint16 );
??CrossCallReturnLabel_29:
        MOV     A,?V0 + 2
        ADD     A,?V0 + 3
        CLR     C
        RLC     A
        ADD     A,#0xf
        MOV     ?V0 + 6,A
// 1088 
// 1089   if ( len >= ZDP_BUF_SZ-1 )
        CLR     C
        SUBB    A,#0x4f
        JC      ??ZDP_EndDeviceBindReq_0
// 1090   {
// 1091     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??ZDP_EndDeviceBindReq_1 & 0xFFFF
// 1092   }
// 1093 
// 1094   if ( LocalCoordinator != NLME_GetShortAddr() )
??ZDP_EndDeviceBindReq_0:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   ??NLME_GetShortAddr?relay
        MOV     A,R2
        XRL     A,?V0 + 4
        JNZ     ??ZDP_EndDeviceBindReq_2
        MOV     A,R3
        XRL     A,?V0 + 5
??ZDP_EndDeviceBindReq_2:
        JZ      ??ZDP_EndDeviceBindReq_3
// 1095   {
// 1096     return afStatus_INVALID_PARAMETER;
        MOV     R1,#0x2
        SJMP    ??ZDP_EndDeviceBindReq_1
// 1097   }
// 1098 
// 1099   *pBuf++ = LO_UINT16( LocalCoordinator );
??ZDP_EndDeviceBindReq_3:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine56 & 0xFFFF
// 1100   *pBuf++ = HI_UINT16( LocalCoordinator );
// 1101 
// 1102   ieeeAddr = NLME_GetExtAddr();
// 1103   pBuf = osal_cpyExtAddr( pBuf, ieeeAddr );
??CrossCallReturnLabel_77:
        ; Setup parameters for call to function sAddrExtCpy
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   ??NLME_GetExtAddr?relay
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     R6,?V0 + 4
        MOV     R7,?V0 + 5
// 1104 
// 1105   *pBuf++ = endPoint;
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,?V0 + 7
        MOVX    @DPTR,A
        INC     DPTR
// 1106 
// 1107   *pBuf++ = LO_UINT16( ProfileID );   // Profile ID
        LCALL   ??Subroutine125_0 & 0xFFFF
// 1108   *pBuf++ = HI_UINT16( ProfileID );
??CrossCallReturnLabel_284:
        INC     DPTR
// 1109 
// 1110   *pBuf++ = NumInClusters; // Input cluster list
        MOV     A,?V0 + 2
        LCALL   ?Subroutine60 & 0xFFFF
// 1111   for ( i = 0; i < NumInClusters; ++i )
??CrossCallReturnLabel_87:
        SJMP    ??CrossCallReturnLabel_7
// 1112   {
// 1113     *pBuf++ = LO_UINT16(InClusterList[i]);
??ZDP_EndDeviceBindReq_4:
        MOV     A,R2
        CLR     C
        RLC     A
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,?V0 + 12
        ADD     A,R0
        MOV     R0,A
        MOV     A,?V0 + 13
        LCALL   ?Subroutine16 & 0xFFFF
// 1114     *pBuf++ = HI_UINT16(InClusterList[i]);
// 1115   }
??CrossCallReturnLabel_7:
        MOV     A,R2
        CLR     C
        SUBB    A,?V0 + 2
        JC      ??ZDP_EndDeviceBindReq_4
// 1116 
// 1117   *pBuf++ = NumOutClusters; // Output cluster list
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,?V0 + 3
        LCALL   ?Subroutine60 & 0xFFFF
// 1118   for ( i = 0; i < NumOutClusters; ++i )
??CrossCallReturnLabel_88:
        SJMP    ??CrossCallReturnLabel_8
// 1119   {
// 1120     *pBuf++ = LO_UINT16(OutClusterList[i]);
??ZDP_EndDeviceBindReq_5:
        MOV     A,R2
        CLR     C
        RLC     A
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,?V0 + 10
        ADD     A,R0
        MOV     R0,A
        MOV     A,?V0 + 11
        LCALL   ?Subroutine16 & 0xFFFF
// 1121     *pBuf++ = HI_UINT16(OutClusterList[i]);
// 1122   }
??CrossCallReturnLabel_8:
        MOV     A,R2
        CLR     C
        SUBB    A,?V0 + 3
        JC      ??ZDP_EndDeviceBindReq_5
// 1123 
// 1124   return fillAndSend( &ZDP_TransID, dstAddr, End_Device_Bind_req, len );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 0,#0x20
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 26)
        MOV     R1,?V0 + 6
        MOV     R4,?V0 + 14
        MOV     R5,?V0 + 15
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_264:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 24)
        CFI EndBlock cfiBlock282
??ZDP_EndDeviceBindReq_1:
        REQUIRE ?Subroutine5
        ; // Fall through to label ?Subroutine5
// 1125 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine5:
        CFI Block cfiBlock283 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x10
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock283

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine60:
        CFI Block cfiCond284 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_87
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        CFI Block cfiCond285 Using cfiCommon0
        CFI (cfiCond285) NoFunction
        CFI (cfiCond285) Conditional ??CrossCallReturnLabel_88
        CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond285) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond285) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond285) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond285) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond285) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond285) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond285) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond285) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond285) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond285) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond285) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond285) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond285) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond285) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond285) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond285) CFA_SP SP+0
        CFI (cfiCond285) CFA_XSP16 add(XSP16, 24)
        CFI Block cfiPicker286 Using cfiCommon1
        CFI (cfiPicker286) NoFunction
        CFI (cfiPicker286) Picker
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_216:
        MOV     R2,#0x0
        RET
        CFI EndBlock cfiCond284
        CFI EndBlock cfiCond285
        CFI EndBlock cfiPicker286

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine16:
        CFI Block cfiCond287 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_7
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        CFI Block cfiCond288 Using cfiCommon0
        CFI (cfiCond288) NoFunction
        CFI (cfiCond288) Conditional ??CrossCallReturnLabel_8
        CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond288) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond288) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond288) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond288) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond288) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond288) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond288) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond288) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond288) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond288) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond288) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond288) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond288) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond288) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond288) CFA_SP SP+0
        CFI (cfiCond288) CFA_XSP16 add(XSP16, 24)
        CFI Block cfiPicker289 Using cfiCommon1
        CFI (cfiPicker289) NoFunction
        CFI (cfiPicker289) Picker
        ADDC    A,R1
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_217:
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_223:
        INC     R2
        RET
        CFI EndBlock cfiCond287
        CFI EndBlock cfiCond288
        CFI EndBlock cfiPicker289
// 1126 
// 1127 /*********************************************************************
// 1128  * @fn          ZDP_BindUnbindReq
// 1129  *
// 1130  * @brief       This builds and send a Bind_req or Unbind_req message
// 1131  *              Depending on the ClusterID. This function
// 1132  *              sends a unicast message to the local coordinator.
// 1133  *
// 1134  * @param       BindOrUnbind - either Bind_req or Unbind_req
// 1135  * @param       dstAddr - destination address of the message
// 1136  * @param       SourceAddr - source 64 bit address of the binding
// 1137  * @param       SrcEPIntf - Source endpoint/interface
// 1138  * @param       ClusterID - Binding cluster ID
// 1139  * @param       DestinationAddr - destination 64 bit addr of binding
// 1140  * @param       DstEPIntf - destination endpoint/interface
// 1141  * @param       SecurityEnable - Security Options
// 1142  *
// 1143  * @return      afStatus_t
// 1144  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1145 afStatus_t ZDP_BindUnbindReq( uint16 BindOrUnbind, zAddrType_t *dstAddr,
ZDP_BindUnbindReq:
        CFI Block cfiBlock290 Using cfiCommon0
        CFI Function ZDP_BindUnbindReq
        CODE
// 1146                               uint8 *SourceAddr, byte SrcEndPoint,
// 1147                               cId_t ClusterID,
// 1148                               zAddrType_t *destinationAddr, byte DstEndPoint,
// 1149                               byte SecurityEnable )
// 1150 {
        FUNCALL ZDP_BindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_BindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 1, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_BindUnbindReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     ?V0 + 8,R4
        MOV     ?V0 + 9,R5
        MOV     ?V0 + 6,R1
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_66:
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_30:
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_56:
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
// 1151   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ?Subroutine38 & 0xFFFF
// 1152   byte len;
// 1153 
// 1154   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1155 
// 1156   // SourceAddr + SrcEPIntf + ClusterID +  addrMode.
// 1157   len = Z_EXTADDR_LEN + 1 + sizeof( cId_t ) + sizeof( uint8 );
??CrossCallReturnLabel_155:
        MOV     ?V0 + 4,#0xc
// 1158   if ( destinationAddr->addrMode == Addr64Bit )
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x3
        JNZ     ??ZDP_BindUnbindReq_0
// 1159     len += Z_EXTADDR_LEN + 1;     // +1 for DstEPIntf
        MOV     ?V0 + 4,#0x15
        SJMP    ??ZDP_BindUnbindReq_1
// 1160   else if ( destinationAddr->addrMode == AddrGroup )
??ZDP_BindUnbindReq_0:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??ZDP_BindUnbindReq_1
// 1161     len += sizeof ( uint16 );
        MOV     ?V0 + 4,#0xe
// 1162 
// 1163   pBuf = osal_cpyExtAddr( pBuf, SourceAddr );
??ZDP_BindUnbindReq_1:
        ; Setup parameters for call to function sAddrExtCpy
        LCALL   ?Subroutine71 & 0xFFFF
// 1164   *pBuf++ = SrcEndPoint;
??CrossCallReturnLabel_101:
        MOV     A,?V0 + 6
        MOVX    @DPTR,A
        INC     DPTR
// 1165 
// 1166   *pBuf++ = LO_UINT16( ClusterID );
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
// 1167 
// 1168   *pBuf++ = HI_UINT16( ClusterID );
        MOV     A,R7
        LCALL   ??Subroutine122_0 & 0xFFFF
// 1169   *pBuf++ = destinationAddr->addrMode;
??CrossCallReturnLabel_256:
        MOV     A,?V0 + 0
        ADD     A,#0x8
        MOV     R0,A
        MOV     A,?V0 + 1
        LCALL   ?Subroutine25 & 0xFFFF
// 1170   if ( destinationAddr->addrMode == Addr64Bit )
??CrossCallReturnLabel_24:
        JNZ     ??ZDP_BindUnbindReq_2
// 1171   {
// 1172     pBuf = osal_cpyExtAddr( pBuf, destinationAddr->addr.extAddr );
// 1173     *pBuf = DstEndPoint;
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        LCALL   ?Subroutine71 & 0xFFFF
// 1174   }
??CrossCallReturnLabel_102:
        MOV     A,?V0 + 5
        SJMP    ??ZDP_BindUnbindReq_3
// 1175   else if ( destinationAddr->addrMode == AddrGroup )
??ZDP_BindUnbindReq_2:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??ZDP_BindUnbindReq_4
// 1176   {
// 1177     *pBuf++ = LO_UINT16( destinationAddr->addr.shortAddr );
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine39 & 0xFFFF
// 1178     *pBuf++ = HI_UINT16( destinationAddr->addr.shortAddr );
??CrossCallReturnLabel_54:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
??ZDP_BindUnbindReq_3:
        MOVX    @DPTR,A
// 1179   }
// 1180 
// 1181   FillAndSendTxOptions( &ZDP_TransID, dstAddr, BindOrUnbind, len, AF_MSG_ACK_REQUEST );
??ZDP_BindUnbindReq_4:
        MOV     DPTR,#ZDP_TxOptions
        MOV     A,#0x10
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 22)
        MOV     R1,?V0 + 4
        MOV     R4,?V0 + 8
        MOV     R5,?V0 + 9
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_265:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
        CFI EndBlock cfiBlock290
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6
// 1182 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine6:
        CFI Block cfiBlock291 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xc
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock291

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine71:
        CFI Block cfiCond292 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_100
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond293 Using cfiCommon0
        CFI (cfiCond293) NoFunction
        CFI (cfiCond293) Conditional ??CrossCallReturnLabel_101
        CFI (cfiCond293) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond293) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond293) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond293) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond293) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond293) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond293) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond293) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond293) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond293) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond293) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond293) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond293) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond293) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond293) CFA_SP SP+0
        CFI (cfiCond293) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond294 Using cfiCommon0
        CFI (cfiCond294) NoFunction
        CFI (cfiCond294) Conditional ??CrossCallReturnLabel_102
        CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond294) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond294) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond294) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond294) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond294) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond294) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond294) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond294) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond294) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond294) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond294) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond294) CFA_SP SP+0
        CFI (cfiCond294) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker295 Using cfiCommon1
        CFI (cfiPicker295) NoFunction
        CFI (cfiPicker295) Picker
        LCALL   ??sAddrExtCpy?relay
        MOV     DPL,R2
        MOV     DPH,R3
        RET
        CFI EndBlock cfiCond292
        CFI EndBlock cfiCond293
        CFI EndBlock cfiCond294
        CFI EndBlock cfiPicker295

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine40:
        CFI Block cfiCond296 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_55
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        CFI Block cfiCond297 Using cfiCommon0
        CFI (cfiCond297) NoFunction
        CFI (cfiCond297) Conditional ??CrossCallReturnLabel_56
        CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond297) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond297) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond297) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond297) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond297) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond297) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond297) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond297) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond297) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond297) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond297) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond297) CFA_SP SP+0
        CFI (cfiCond297) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker298 Using cfiCommon1
        CFI (cfiPicker298) NoFunction
        CFI (cfiPicker298) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        MOV     A,#0x1a
        RET
        CFI EndBlock cfiCond296
        CFI EndBlock cfiCond297
        CFI EndBlock cfiPicker298

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine39:
        CFI Block cfiCond299 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_53
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond300 Using cfiCommon0
        CFI (cfiCond300) NoFunction
        CFI (cfiCond300) Conditional ??CrossCallReturnLabel_54
        CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond300) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond300) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond300) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond300) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond300) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond300) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond300) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond300) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond300) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond300) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond300) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond300) CFA_SP SP+0
        CFI (cfiCond300) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker301 Using cfiCommon1
        CFI (cfiPicker301) NoFunction
        CFI (cfiPicker301) Picker
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_116:
        MOV     R3,DPH
        RET
        CFI EndBlock cfiCond299
        CFI EndBlock cfiCond300
        CFI EndBlock cfiPicker301
// 1183 
// 1184 /*********************************************************************
// 1185  * Network Management
// 1186  */
// 1187 
// 1188 /*********************************************************************
// 1189  * @fn          ZDP_MgmtNwkDiscReq
// 1190  *
// 1191  * @brief       This builds and send a Mgmt_NWK_Disc_req message. This
// 1192  *              function sends a unicast message.
// 1193  *
// 1194  * @param       dstAddr - destination address of the message
// 1195  * @param       ScanChannels - 32 bit address bit map
// 1196  * @param       StartIndex - Starting index within the reporting network
// 1197  *                           list
// 1198  * @param       SecurityEnable - Security Options
// 1199  *
// 1200  * @return      afStatus_t
// 1201  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1202 afStatus_t ZDP_MgmtNwkDiscReq( zAddrType_t *dstAddr,
ZDP_MgmtNwkDiscReq:
        CFI Block cfiBlock302 Using cfiCommon0
        CFI Function ZDP_MgmtNwkDiscReq
        CODE
// 1203                                uint32 ScanChannels,
// 1204                                byte ScanDuration,
// 1205                                byte StartIndex,
// 1206                                byte SecurityEnable )
// 1207 {
        FUNCALL ZDP_MgmtNwkDiscReq, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R1
        MOV     ?V0 + 1,R4
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
// 1208   uint8 *pBuf = ZDP_TmpBuf;
// 1209   byte len = sizeof( uint32 )+1+1;  // ScanChannels + ScanDuration + StartIndex.
// 1210 
// 1211   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1212 
// 1213   pBuf = osal_buffer_uint32( pBuf, ScanChannels );
        ; Setup parameters for call to function osal_buffer_uint32
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_FOUR
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_51:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ?Subroutine54 & 0xFFFF
// 1214 
// 1215   *pBuf++ = ScanDuration;
// 1216   *pBuf = StartIndex;
// 1217 
// 1218   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_NWK_Disc_req, len );
??CrossCallReturnLabel_282:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 2,#0x30
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R1,#0x6
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_266:
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock302
// 1219 }
// 1220 
// 1221 /*********************************************************************
// 1222  * @fn          ZDP_MgmtDirectJoinReq
// 1223  *
// 1224  * @brief       This builds and send a Mgmt_Direct_Join_req message. This
// 1225  *              function sends a unicast message.
// 1226  *
// 1227  * @param       dstAddr - destination address of the message
// 1228  * @param       deviceAddr - 64 bit IEEE Address
// 1229  * @param       SecurityEnable - Security Options
// 1230  *
// 1231  * @return      afStatus_t
// 1232  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1233 afStatus_t ZDP_MgmtDirectJoinReq( zAddrType_t *dstAddr,
ZDP_MgmtDirectJoinReq:
        CFI Block cfiBlock303 Using cfiCommon0
        CFI Function ZDP_MgmtDirectJoinReq
        CODE
// 1234                                uint8 *deviceAddr,
// 1235                                byte capInfo,
// 1236                                byte SecurityEnable )
// 1237 {
        FUNCALL ZDP_MgmtDirectJoinReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtDirectJoinReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R1
// 1238   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1239 
// 1240   osal_cpyExtAddr( ZDP_TmpBuf, deviceAddr );
        ; Setup parameters for call to function sAddrExtCpy
        LCALL   ?Subroutine10 & 0xFFFF
// 1241   ZDP_TmpBuf[Z_EXTADDR_LEN] = capInfo;
??CrossCallReturnLabel_127:
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
// 1242 
// 1243   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_Direct_Join_req, (Z_EXTADDR_LEN + 1) );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 2,#0x35
        CFI EndBlock cfiBlock303
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7
// 1244 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine7:
        CFI Block cfiBlock304 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R1,#0x9
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        LCALL   ??Subroutine123_0 & 0xFFFF
        CFI EndBlock cfiBlock304
??CrossCallReturnLabel_267:
        REQUIRE ??Subroutine108_0
        ; // Fall through to label ??Subroutine108_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine108_0:
        CFI Block cfiBlock305 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 33)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Valid
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock305
// 1245 
// 1246 /*********************************************************************
// 1247  * @fn          ZDP_MgmtPermitJoinReq
// 1248  *
// 1249  * @brief       This builds and send a Mgmt_Permit_Join_req message.
// 1250  *
// 1251  * @param       dstAddr - destination address of the message
// 1252  * @param       duration - Permit duration
// 1253  * @param       TcSignificance - Trust Center Significance
// 1254  *
// 1255  * @return      afStatus_t
// 1256  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1257 afStatus_t ZDP_MgmtPermitJoinReq( zAddrType_t *dstAddr, byte duration,
ZDP_MgmtPermitJoinReq:
        CFI Block cfiBlock306 Using cfiCommon0
        CFI Function ZDP_MgmtPermitJoinReq
        CODE
// 1258                                   byte TcSignificance, byte SecurityEnable )
// 1259 {
        FUNCALL ZDP_MgmtPermitJoinReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1260   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1261 
// 1262   // Build buffer
// 1263   ZDP_TmpBuf[ZDP_MGMT_PERMIT_JOIN_REQ_DURATION] = duration;
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_183:
        MOV     A,R1
        LCALL   ?Subroutine29 & 0xFFFF
// 1264   ZDP_TmpBuf[ZDP_MGMT_PERMIT_JOIN_REQ_TC_SIG]   = TcSignificance;
??CrossCallReturnLabel_125:
        MOV     A,R4
        MOVX    @DPTR,A
// 1265 
// 1266   // Send the message
// 1267   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_Permit_Join_req,
// 1268                       ZDP_MGMT_PERMIT_JOIN_REQ_SIZE );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 0,#0x36
        LJMP    ?Subroutine2 & 0xFFFF
        CFI EndBlock cfiBlock306
// 1269 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine30:
        CFI Block cfiCond307 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_182
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond308 Using cfiCommon0
        CFI (cfiCond308) NoFunction
        CFI (cfiCond308) Conditional ??CrossCallReturnLabel_183
        CFI (cfiCond308) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond308) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond308) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond308) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond308) CFA_SP SP+0
        CFI (cfiCond308) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond309 Using cfiCommon0
        CFI (cfiCond309) NoFunction
        CFI (cfiCond309) Conditional ??CrossCallReturnLabel_184
        CFI (cfiCond309) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond309) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond309) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond309) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond309) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond309) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond309) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond309) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond309) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond309) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond309) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond309) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond309) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond309) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond309) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond309) CFA_SP SP+0
        CFI (cfiCond309) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiPicker310 Using cfiCommon1
        CFI (cfiPicker310) NoFunction
        CFI (cfiPicker310) Picker
        MOV     DPTR,#ZDP_TmpBuf
        CFI EndBlock cfiCond307
        CFI EndBlock cfiCond308
        CFI EndBlock cfiCond309
        CFI EndBlock cfiPicker310
        REQUIRE ??Subroutine109_0
        ; // Fall through to label ??Subroutine109_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine109_0:
        CFI Block cfiCond311 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_181
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 33)
        CFI Block cfiCond312 Using cfiCommon0
        CFI (cfiCond312) NoFunction
        CFI (cfiCond312) Conditional ??CrossCallReturnLabel_182
        CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond312) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond312) CFA_SP SP+0
        CFI (cfiCond312) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond313 Using cfiCommon0
        CFI (cfiCond313) NoFunction
        CFI (cfiCond313) Conditional ??CrossCallReturnLabel_183
        CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond313) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond313) CFA_SP SP+0
        CFI (cfiCond313) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond314 Using cfiCommon0
        CFI (cfiCond314) NoFunction
        CFI (cfiCond314) Conditional ??CrossCallReturnLabel_184
        CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond314) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond314) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond314) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond314) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond314) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond314) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond314) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond314) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond314) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond314) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond314) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond314) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond314) CFA_SP SP+0
        CFI (cfiCond314) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiPicker315 Using cfiCommon1
        CFI (cfiPicker315) NoFunction
        CFI (cfiPicker315) Picker
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_186:
        RET
        CFI EndBlock cfiCond311
        CFI EndBlock cfiCond312
        CFI EndBlock cfiCond313
        CFI EndBlock cfiCond314
        CFI EndBlock cfiPicker315

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine84:
        CFI Block cfiCond316 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_9
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond317 Using cfiCommon0
        CFI (cfiCond317) NoFunction
        CFI (cfiCond317) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_10
        CFI (cfiCond317) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond317) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond317) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond317) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond317) CFA_SP SP+0
        CFI (cfiCond317) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond318 Using cfiCommon0
        CFI (cfiCond318) NoFunction
        CFI (cfiCond318) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_182
        CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond318) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond318) CFA_SP SP+0
        CFI (cfiCond318) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond319 Using cfiCommon0
        CFI (cfiCond319) NoFunction
        CFI (cfiCond319) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_183
        CFI (cfiCond319) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond319) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond319) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond319) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond319) CFA_SP SP+0
        CFI (cfiCond319) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond320 Using cfiCommon0
        CFI (cfiCond320) NoFunction
        CFI (cfiCond320) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_184
        CFI (cfiCond320) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond320) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond320) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond320) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond320) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond320) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond320) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond320) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond320) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond320) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond320) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond320) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond320) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond320) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond320) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond320) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond320) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond320) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond320) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond320) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond320) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond320) CFA_SP SP+0
        CFI (cfiCond320) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond321 Using cfiCommon0
        CFI (cfiCond321) NoFunction
        CFI (cfiCond321) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_181
        CFI (cfiCond321) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond321) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond321) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond321) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond321) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond321) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond321) CFA_SP SP+0
        CFI (cfiCond321) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiPicker322 Using cfiCommon1
        CFI (cfiPicker322) NoFunction
        CFI (cfiPicker322) Picker
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_188:
        RET
        CFI EndBlock cfiCond316
        CFI EndBlock cfiCond317
        CFI EndBlock cfiCond318
        CFI EndBlock cfiCond319
        CFI EndBlock cfiCond320
        CFI EndBlock cfiCond321
        CFI EndBlock cfiPicker322

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine88:
        CFI Block cfiCond323 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_9
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond324 Using cfiCommon0
        CFI (cfiCond324) NoFunction
        CFI (cfiCond324) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_10
        CFI (cfiCond324) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond324) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond324) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond324) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond324) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond324) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond324) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond324) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond324) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond324) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond324) CFA_SP SP+0
        CFI (cfiCond324) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond325 Using cfiCommon0
        CFI (cfiCond325) NoFunction
        CFI (cfiCond325) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_124
        CFI (cfiCond325) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond325) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond325) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond325) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond325) CFA_SP SP+0
        CFI (cfiCond325) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond326 Using cfiCommon0
        CFI (cfiCond326) NoFunction
        CFI (cfiCond326) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_125
        CFI (cfiCond326) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond326) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond326) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond326) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond326) CFA_SP SP+0
        CFI (cfiCond326) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond327 Using cfiCommon0
        CFI (cfiCond327) NoFunction
        CFI (cfiCond327) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_126
        CFI (cfiCond327) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond327) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond327) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond327) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond327) CFA_SP SP+0
        CFI (cfiCond327) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond328 Using cfiCommon0
        CFI (cfiCond328) NoFunction
        CFI (cfiCond328) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_127
        CFI (cfiCond328) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond328) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond328) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond328) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond328) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond328) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond328) CFA_SP SP+0
        CFI (cfiCond328) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond329 Using cfiCommon0
        CFI (cfiCond329) NoFunction
        CFI (cfiCond329) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_128
        CFI (cfiCond329) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond329) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond329) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond329) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond329) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond329) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond329) CFA_SP SP+0
        CFI (cfiCond329) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond330 Using cfiCommon0
        CFI (cfiCond330) NoFunction
        CFI (cfiCond330) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_129
        CFI (cfiCond330) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond330) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond330) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond330) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond330) CFA_SP SP+0
        CFI (cfiCond330) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond331 Using cfiCommon0
        CFI (cfiCond331) NoFunction
        CFI (cfiCond331) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_130
        CFI (cfiCond331) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond331) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond331) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond331) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond331) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond331) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond331) CFA_SP SP+0
        CFI (cfiCond331) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond332 Using cfiCommon0
        CFI (cfiCond332) NoFunction
        CFI (cfiCond332) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_131
        CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond332) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond332) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond332) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond332) CFA_SP SP+0
        CFI (cfiCond332) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond333 Using cfiCommon0
        CFI (cfiCond333) NoFunction
        CFI (cfiCond333) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_35
        CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond333) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond333) CFA_SP SP+0
        CFI (cfiCond333) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond334 Using cfiCommon0
        CFI (cfiCond334) NoFunction
        CFI (cfiCond334) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_36
        CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond334) CFA_SP SP+0
        CFI (cfiCond334) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond335 Using cfiCommon0
        CFI (cfiCond335) NoFunction
        CFI (cfiCond335) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_9
        CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond335) CFA_SP SP+0
        CFI (cfiCond335) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond336 Using cfiCommon0
        CFI (cfiCond336) NoFunction
        CFI (cfiCond336) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_10
        CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond336) CFA_SP SP+0
        CFI (cfiCond336) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond337 Using cfiCommon0
        CFI (cfiCond337) NoFunction
        CFI (cfiCond337) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_182
        CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond337) CFA_SP SP+0
        CFI (cfiCond337) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond338 Using cfiCommon0
        CFI (cfiCond338) NoFunction
        CFI (cfiCond338) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_183
        CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond338) CFA_SP SP+0
        CFI (cfiCond338) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond339 Using cfiCommon0
        CFI (cfiCond339) NoFunction
        CFI (cfiCond339) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_184
        CFI (cfiCond339) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond339) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond339) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond339) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond339) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond339) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond339) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond339) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond339) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond339) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond339) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond339) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond339) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond339) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond339) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond339) CFA_SP SP+0
        CFI (cfiCond339) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond340 Using cfiCommon0
        CFI (cfiCond340) NoFunction
        CFI (cfiCond340) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_181
        CFI (cfiCond340) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond340) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond340) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond340) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond340) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond340) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond340) CFA_SP SP+0
        CFI (cfiCond340) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiPicker341 Using cfiCommon1
        CFI (cfiPicker341) NoFunction
        CFI (cfiPicker341) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        RET
        CFI EndBlock cfiCond323
        CFI EndBlock cfiCond324
        CFI EndBlock cfiCond325
        CFI EndBlock cfiCond326
        CFI EndBlock cfiCond327
        CFI EndBlock cfiCond328
        CFI EndBlock cfiCond329
        CFI EndBlock cfiCond330
        CFI EndBlock cfiCond331
        CFI EndBlock cfiCond332
        CFI EndBlock cfiCond333
        CFI EndBlock cfiCond334
        CFI EndBlock cfiCond335
        CFI EndBlock cfiCond336
        CFI EndBlock cfiCond337
        CFI EndBlock cfiCond338
        CFI EndBlock cfiCond339
        CFI EndBlock cfiCond340
        CFI EndBlock cfiPicker341
// 1270 
// 1271 /*********************************************************************
// 1272  * @fn          ZDP_MgmtLeaveReq
// 1273  *
// 1274  * @brief       This builds and send a Mgmt_Leave_req message.
// 1275  *
// 1276  * @param       dstAddr - destination address of the message
// 1277  *              IEEEAddr - IEEE adddress of device that is removed
// 1278  *              RemoveChildren - set to 1 to remove the children of the
// 1279  *                                device as well. 0 otherwise.
// 1280  *              Rejoin - set to 1 if the removed device should rejoin
// 1281                          afterwards. 0 otherwise.
// 1282  *
// 1283  * @return      afStatus_t
// 1284  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1285 afStatus_t ZDP_MgmtLeaveReq( zAddrType_t *dstAddr, uint8 *IEEEAddr, uint8 RemoveChildren,
ZDP_MgmtLeaveReq:
        CFI Block cfiBlock342 Using cfiCommon0
        CFI Function ZDP_MgmtLeaveReq
        CODE
// 1286                  uint8 Rejoin, uint8 SecurityEnable )
// 1287 
// 1288 {
        FUNCALL ZDP_MgmtLeaveReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLeaveReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R1
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
// 1289   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1290 
// 1291   osal_cpyExtAddr( ZDP_TmpBuf, IEEEAddr );
        ; Setup parameters for call to function sAddrExtCpy
        LCALL   ?Subroutine10 & 0xFFFF
// 1292   ZDP_TmpBuf[Z_EXTADDR_LEN] = 0;
??CrossCallReturnLabel_128:
        CLR     A
        MOVX    @DPTR,A
// 1293 
// 1294   if ( RemoveChildren == TRUE )
        INC     A
        XRL     A,?V0 + 0
        JNZ     ??ZDP_MgmtLeaveReq_0
// 1295   {
// 1296     ZDP_TmpBuf[Z_EXTADDR_LEN] |= ZDP_MGMT_LEAVE_REQ_RC;
        LCALL   ??Subroutine97_0 & 0xFFFF
// 1297   }
??CrossCallReturnLabel_130:
        MOV     A,#0x40
        MOVX    @DPTR,A
// 1298   if ( Rejoin == TRUE )
??ZDP_MgmtLeaveReq_0:
        MOV     A,#0x1
        XRL     A,?V0 + 1
        JNZ     ??ZDP_MgmtLeaveReq_1
// 1299   {
// 1300     ZDP_TmpBuf[Z_EXTADDR_LEN] |= ZDP_MGMT_LEAVE_REQ_REJOIN;
        LCALL   ??Subroutine97_0 & 0xFFFF
// 1301   }
??CrossCallReturnLabel_131:
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.7
        MOVX    @DPTR,A
// 1302 
// 1303   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_Leave_req, (Z_EXTADDR_LEN + 1) );
??ZDP_MgmtLeaveReq_1:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 2,#0x34
        SJMP    ?Subroutine7
        CFI EndBlock cfiBlock342
// 1304 }
// 1305 
// 1306 /*********************************************************************
// 1307  * @fn          ZDP_MgmtNwkUpdateReq
// 1308  *
// 1309  * @brief       This builds and send a Mgmt_NWK_Update_req message. This
// 1310  *              function sends a unicast or broadcast message.
// 1311  *
// 1312  * @param       dstAddr - destination address of the message
// 1313  * @param       ChannelMask - 32 bit address bit map
// 1314  * @param       ScanDuration - length of time to spend scanning each channel
// 1315  * @param       ScanCount - number of energy scans to be conducted
// 1316  * @param       NwkUpdateId - NWk Update Id value
// 1317  * @param       NwkManagerAddr - NWK address for device with Network Manager
// 1318  *                               bit set in its Node Descriptor
// 1319  *
// 1320  * @return      afStatus_t
// 1321  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1322 afStatus_t ZDP_MgmtNwkUpdateReq( zAddrType_t *dstAddr,
ZDP_MgmtNwkUpdateReq:
        CFI Block cfiBlock343 Using cfiCommon0
        CFI Function ZDP_MgmtNwkUpdateReq
        CODE
// 1323                                  uint32 ChannelMask,
// 1324                                  uint8 ScanDuration,
// 1325                                  uint8 ScanCount,
// 1326                                  uint8 NwkUpdateId,
// 1327                                  uint16 NwkManagerAddr )
// 1328 {
        FUNCALL ZDP_MgmtNwkUpdateReq, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     ?V0 + 4,R1
        MOV     ?V0 + 6,R4
        MOV     ?V0 + 5,R5
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
// 1329   uint8 *pBuf = ZDP_TmpBuf;
// 1330   byte len = sizeof( uint32 ) + 1;  // ChannelMask + ScanDuration
??CrossCallReturnLabel_31:
        MOV     ?V0 + 7,#0x5
// 1331 
// 1332   pBuf = osal_buffer_uint32( pBuf, ChannelMask );
        ; Setup parameters for call to function osal_buffer_uint32
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_FOUR
        CFI CFA_XSP16 add(XSP16, 22)
        LCALL   ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_52:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     DPL,R2
        MOV     DPH,R3
// 1333 
// 1334   *pBuf++ = ScanDuration;
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
// 1335 
// 1336   if ( ScanDuration <= 0x05 )
        CLR     C
        SUBB    A,#0x6
        JNC     ??ZDP_MgmtNwkUpdateReq_0
// 1337   {
// 1338     // Request is to scan over channelMask
// 1339     len += sizeof( uint8 );
        MOV     ?V0 + 7,#0x6
// 1340 
// 1341     *pBuf++ = ScanCount;
        MOV     A,?V0 + 6
        SJMP    ??ZDP_MgmtNwkUpdateReq_1
// 1342   }
// 1343   else if ( ( ScanDuration == 0xFE ) || ( ScanDuration == 0xFF ) )
??ZDP_MgmtNwkUpdateReq_0:
        MOV     A,#-0x2
        XRL     A,?V0 + 4
        JZ      ??ZDP_MgmtNwkUpdateReq_2
        MOV     A,#-0x1
        XRL     A,?V0 + 4
        JNZ     ??ZDP_MgmtNwkUpdateReq_3
// 1344   {
// 1345     // Request is to change Channel (0xFE) or apsChannelMask and NwkManagerAddr (0xFF)
// 1346     len += sizeof( uint8 );
??ZDP_MgmtNwkUpdateReq_2:
        MOV     ?V0 + 7,#0x6
// 1347 
// 1348     *pBuf++ = NwkUpdateId;
        MOV     A,?V0 + 5
        MOVX    @DPTR,A
        INC     DPTR
// 1349 
// 1350     if ( ScanDuration == 0xFF )
        MOV     A,#-0x1
        XRL     A,?V0 + 4
        JNZ     ??ZDP_MgmtNwkUpdateReq_3
// 1351     {
// 1352       len += sizeof( uint16 );
        MOV     ?V0 + 7,#0x8
// 1353 
// 1354       *pBuf++  = LO_UINT16( NwkManagerAddr );
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
// 1355       *pBuf++  = HI_UINT16( NwkManagerAddr );
        MOV     A,R7
??ZDP_MgmtNwkUpdateReq_1:
        MOVX    @DPTR,A
// 1356     }
// 1357   }
// 1358 
// 1359   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_NWK_Update_req, len );
??ZDP_MgmtNwkUpdateReq_3:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 0,#0x38
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     R1,?V0 + 7
        MOV     R4,?V0 + 8
        MOV     R5,?V0 + 9
        LCALL   ??Subroutine123_0 & 0xFFFF
        CFI EndBlock cfiBlock343
??CrossCallReturnLabel_268:
        REQUIRE ?Subroutine3
        ; // Fall through to label ?Subroutine3
// 1360 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
        CFI Block cfiBlock344 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 19)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI EndBlock cfiBlock344
        REQUIRE ??Subroutine110_0
        ; // Fall through to label ??Subroutine110_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine110_0:
        CFI Block cfiBlock345 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xa
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock345

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine37:
        CFI Block cfiCond346 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_51
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond347 Using cfiCommon0
        CFI (cfiCond347) NoFunction
        CFI (cfiCond347) Conditional ??CrossCallReturnLabel_52
        CFI (cfiCond347) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond347) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond347) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond347) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond347) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond347) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond347) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond347) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond347) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond347) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond347) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond347) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond347) CFA_SP SP+0
        CFI (cfiCond347) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiPicker348 Using cfiCommon1
        CFI (cfiPicker348) NoFunction
        CFI (cfiPicker348) Picker
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        LCALL   ??osal_buffer_uint32?relay
        MOV     A,#0x4
        RET
        CFI EndBlock cfiCond346
        CFI EndBlock cfiCond347
        CFI EndBlock cfiPicker348

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine27:
        CFI Block cfiCond349 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_28
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond350 Using cfiCommon0
        CFI (cfiCond350) NoFunction
        CFI (cfiCond350) Conditional ??CrossCallReturnLabel_29
        CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond350) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond350) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond350) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond350) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond350) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond350) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond350) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond350) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond350) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond350) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond350) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond350) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond350) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond350) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond350) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond350) CFA_SP SP+0
        CFI (cfiCond350) CFA_XSP16 add(XSP16, 24)
        CFI Block cfiCond351 Using cfiCommon0
        CFI (cfiCond351) NoFunction
        CFI (cfiCond351) Conditional ??CrossCallReturnLabel_30
        CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond351) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond351) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond351) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond351) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond351) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond351) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond351) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond351) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond351) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond351) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond351) CFA_SP SP+0
        CFI (cfiCond351) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond352 Using cfiCommon0
        CFI (cfiCond352) NoFunction
        CFI (cfiCond352) Conditional ??CrossCallReturnLabel_31
        CFI (cfiCond352) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond352) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond352) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond352) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond352) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond352) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond352) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond352) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond352) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond352) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond352) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond352) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond352) CFA_SP SP+0
        CFI (cfiCond352) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond353 Using cfiCommon0
        CFI (cfiCond353) NoFunction
        CFI (cfiCond353) Conditional ??CrossCallReturnLabel_32
        CFI (cfiCond353) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond353) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond353) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond353) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond353) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond353) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond353) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond353) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond353) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond353) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond353) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond353) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond353) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond353) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond353) CFA_SP SP+0
        CFI (cfiCond353) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond354 Using cfiCommon0
        CFI (cfiCond354) NoFunction
        CFI (cfiCond354) Conditional ??CrossCallReturnLabel_33
        CFI (cfiCond354) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond354) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond354) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond354) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond354) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond354) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond354) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond354) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond354) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond354) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond354) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond354) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond354) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond354) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond354) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond354) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond354) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond354) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond354) CFA_SP SP+0
        CFI (cfiCond354) CFA_XSP16 add(XSP16, 27)
        CFI Block cfiCond355 Using cfiCommon0
        CFI (cfiCond355) NoFunction
        CFI (cfiCond355) Conditional ??CrossCallReturnLabel_34
        CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond355) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond355) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond355) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond355) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond355) CFA_SP SP+0
        CFI (cfiCond355) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker356 Using cfiCommon1
        CFI (cfiPicker356) NoFunction
        CFI (cfiPicker356) Picker
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        RET
        CFI EndBlock cfiCond349
        CFI EndBlock cfiCond350
        CFI EndBlock cfiCond351
        CFI EndBlock cfiCond352
        CFI EndBlock cfiCond353
        CFI EndBlock cfiCond354
        CFI EndBlock cfiCond355
        CFI EndBlock cfiPicker356
// 1361 
// 1362 
// 1363 /*********************************************************************
// 1364  * Network Management Responses
// 1365  */
// 1366 
// 1367 /*********************************************************************
// 1368  * @fn          ZDP_MgmtNwkDiscRsp
// 1369  *
// 1370  * @brief       This builds and send a Mgmt_NWK_Disc_rsp message. This
// 1371  *              function sends a unicast message.
// 1372  *
// 1373  * @param       dstAddr - destination address of the message
// 1374  * @param       Status - message status (ZDP_SUCCESS or other)
// 1375  * @param       NetworkCount - Total number of networks found
// 1376  * @param       StartIndex - Starting index within the reporting network
// 1377  *                           list
// 1378  * @param       NetworkListCount - number of network lists included
// 1379  *                                 in this message
// 1380  * @param       NetworkList - List of network descriptors
// 1381  * @param       SecurityEnable - Security Options
// 1382  *
// 1383  * @return      afStatus_t
// 1384  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1385 afStatus_t ZDP_MgmtNwkDiscRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtNwkDiscRsp:
        CFI Block cfiBlock357 Using cfiCommon0
        CFI Function ZDP_MgmtNwkDiscRsp
        CODE
// 1386                             byte Status,
// 1387                             byte NetworkCount,
// 1388                             byte StartIndex,
// 1389                             byte NetworkListCount,
// 1390                             networkDesc_t *NetworkList,
// 1391                             byte SecurityEnable )
// 1392 {
        FUNCALL ZDP_MgmtNwkDiscRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     ?V0 + 12,R2
        MOV     ?V0 + 13,R3
        MOV     ?V0 + 8,R4
        MOV     ?V0 + 6,R5
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 7,A
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        MOV     A,#0x19
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine111_0 & 0xFFFF
// 1393   uint8 *buf;
// 1394   uint8 *pBuf;
// 1395   byte len = 1+1+1+1;  // Status + NetworkCount + StartIndex + NetworkCountList.
// 1396   byte idx;
// 1397 
// 1398   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1399 
// 1400   len += (NetworkListCount * ( ZDP_NETWORK_EXTENDED_DISCRIPTOR_SIZE - 2 ));
??CrossCallReturnLabel_191:
        MOV     B,#0xc
        MOV     A,?V0 + 4
        MUL     AB
        ADD     A,#0x4
        MOV     ?V0 + 5,A
// 1401 
// 1402   buf = osal_mem_alloc( len+1 );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_92:
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 1403   if ( buf == NULL )
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     ??ZDP_MgmtNwkDiscRsp_0
// 1404   {
// 1405     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??CrossCallReturnLabel_200 & 0xFFFF
// 1406   }
// 1407 
// 1408   pBuf = buf+1;
??ZDP_MgmtNwkDiscRsp_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
// 1409 
// 1410   *pBuf++ = Status;
        MOV     A,?V0 + 8
        MOVX    @DPTR,A
        INC     DPTR
// 1411   *pBuf++ = NetworkCount;
        MOV     A,?V0 + 6
        MOVX    @DPTR,A
        INC     DPTR
// 1412   *pBuf++ = StartIndex;
        MOV     A,?V0 + 7
        MOVX    @DPTR,A
        INC     DPTR
// 1413   *pBuf++ = NetworkListCount;
        MOV     A,?V0 + 4
        LCALL   ??Subroutine115_0 & 0xFFFF
// 1414 
// 1415   for ( idx = 0; idx < NetworkListCount; idx++ )
??CrossCallReturnLabel_214:
        MOV     ?V0 + 7,#0x0
        SJMP    ??ZDP_MgmtNwkDiscRsp_1
// 1416   {
// 1417     osal_cpyExtAddr( pBuf, NetworkList->extendedPANID);
// 1418     pBuf += Z_EXTADDR_LEN;
// 1419 
// 1420     *pBuf++  = NetworkList->logicalChannel;                // LogicalChannel
// 1421     *pBuf    = NetworkList->stackProfile;                  // Stack profile
// 1422     *pBuf++ |= (byte)(NetworkList->version << 4);          // ZigBee Version
// 1423     *pBuf    = BEACON_ORDER_NO_BEACONS;                    // Beacon Order
// 1424     *pBuf++ |= (uint8)(BEACON_ORDER_NO_BEACONS << 4);      // Superframe Order
// 1425 
// 1426     if ( NetworkList->chosenRouter != INVALID_NODE_ADDR )
// 1427     {
// 1428       *pBuf++ = TRUE;                         // Permit Joining
// 1429     }
// 1430     else
// 1431     {
// 1432       *pBuf++ = FALSE;
??ZDP_MgmtNwkDiscRsp_2:
        CLR     A
??ZDP_MgmtNwkDiscRsp_3:
        MOVX    @DPTR,A
        INC     DPTR
        INC     R6
        MOV     R7,DPH
// 1433     }
// 1434 
// 1435     NetworkList = NetworkList->nextDesc;    // Move to next list entry
        MOV     A,?V0 + 2
        ADD     A,#0x14
        MOV     DPL,A
        MOV     A,?V0 + 3
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_194:
        INC     ?V0 + 7
??ZDP_MgmtNwkDiscRsp_1:
        MOV     A,?V0 + 7
        CLR     C
        SUBB    A,?V0 + 4
        JNC     ??ZDP_MgmtNwkDiscRsp_4
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,?V0 + 2
        ADD     A,#0xb
        MOV     R4,A
        MOV     A,?V0 + 3
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_94:
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_49:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_85:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_44:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0xf
        MOVX    @DPTR,A
        INC     R0
        MOV     A,R7
        MOV     R1,A
        INC     DPTR
        INC     R6
        MOV     R7,DPH
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0xf
        ORL     A,#0xf0
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0xfe
        JNZ     ??ZDP_MgmtNwkDiscRsp_5
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
??ZDP_MgmtNwkDiscRsp_5:
        MOV     DPL,R6
        MOV     DPH,R7
        JNZ     $+5
        LJMP    ??ZDP_MgmtNwkDiscRsp_2 & 0xFFFF
        MOV     A,#0x1
        LJMP    ??ZDP_MgmtNwkDiscRsp_3 & 0xFFFF
// 1436   }
// 1437 
// 1438   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_NWK_Disc_rsp, len, buf );
??ZDP_MgmtNwkDiscRsp_4:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_230:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 2,#0x30
        MOV     ?V0 + 3,#-0x80
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 25)
        MOV     R1,?V0 + 5
        MOV     R4,?V0 + 12
        MOV     R5,?V0 + 13
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_275:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R1
        MOV     R6,A
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_200:
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 22)
        MOV     R7,#0xe
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock357
// 1439 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine18:
        CFI Block cfiCond358 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_193
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond359 Using cfiCommon0
        CFI (cfiCond359) NoFunction
        CFI (cfiCond359) Conditional ??CrossCallReturnLabel_194
        CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond359) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond359) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond359) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond359) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond359) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond359) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond359) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond359) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond359) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond359) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond359) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond359) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond359) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond359) CFA_SP SP+0
        CFI (cfiCond359) CFA_XSP16 add(XSP16, 23)
        CFI Block cfiPicker360 Using cfiCommon1
        CFI (cfiPicker360) NoFunction
        CFI (cfiPicker360) Picker
        ADDC    A,#0x0
        MOV     DPH,A
        CFI EndBlock cfiCond358
        CFI EndBlock cfiCond359
        CFI EndBlock cfiPicker360
        REQUIRE ??Subroutine111_0
        ; // Fall through to label ??Subroutine111_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine111_0:
        CFI Block cfiCond361 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_189
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond362 Using cfiCommon0
        CFI (cfiCond362) NoFunction
        CFI (cfiCond362) Conditional ??CrossCallReturnLabel_190
        CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond362) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond362) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond362) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond362) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond362) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond362) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond362) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond362) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond362) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond362) CFA_SP SP+0
        CFI (cfiCond362) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond363 Using cfiCommon0
        CFI (cfiCond363) NoFunction
        CFI (cfiCond363) Conditional ??CrossCallReturnLabel_191
        CFI (cfiCond363) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond363) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond363) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond363) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond363) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond363) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond363) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond363) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond363) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond363) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond363) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond363) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond363) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond363) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond363) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond363) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond363) CFA_SP SP+0
        CFI (cfiCond363) CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond364 Using cfiCommon0
        CFI (cfiCond364) NoFunction
        CFI (cfiCond364) Conditional ??CrossCallReturnLabel_192
        CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond364) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond364) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond364) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond364) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond364) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond364) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond364) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond364) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond364) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond364) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond364) CFA_SP SP+0
        CFI (cfiCond364) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond365 Using cfiCommon0
        CFI (cfiCond365) NoFunction
        CFI (cfiCond365) Conditional ??CrossCallReturnLabel_193
        CFI (cfiCond365) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond365) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond365) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond365) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond365) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond365) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond365) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond365) CFA_SP SP+0
        CFI (cfiCond365) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond366 Using cfiCommon0
        CFI (cfiCond366) NoFunction
        CFI (cfiCond366) Conditional ??CrossCallReturnLabel_194
        CFI (cfiCond366) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond366) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond366) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond366) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond366) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond366) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond366) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond366) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond366) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond366) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond366) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond366) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond366) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond366) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond366) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond366) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond366) CFA_SP SP+0
        CFI (cfiCond366) CFA_XSP16 add(XSP16, 23)
        CFI Block cfiPicker367 Using cfiCommon1
        CFI (cfiPicker367) NoFunction
        CFI (cfiPicker367) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
        RET
        CFI EndBlock cfiCond361
        CFI EndBlock cfiCond362
        CFI EndBlock cfiCond363
        CFI EndBlock cfiCond364
        CFI EndBlock cfiCond365
        CFI EndBlock cfiCond366
        CFI EndBlock cfiPicker367
// 1440 
// 1441 /*********************************************************************
// 1442  * @fn          ZDP_MgmtLqiRsp
// 1443  *
// 1444  * @brief       This builds and send a Mgmt_Lqi_rsp message. This
// 1445  *              function sends a unicast message.
// 1446  *
// 1447  * @param       dstAddr - destination address of the message
// 1448  * @param       Status - message status (ZDP_SUCCESS or other)
// 1449  * @param       NeighborLqiEntries - Total number of entries found
// 1450  * @param       StartIndex - Starting index within the reporting list
// 1451  * @param       NeighborLqiCount - number of lists included
// 1452  *                                 in this message
// 1453  * @param       NeighborLqiList - List of NeighborLqiItems.  This list
// 1454  *                is the list to be sent, not the entire list
// 1455  * @param       SecurityEnable - true if secure
// 1456  *
// 1457  * @return      ZStatus_t
// 1458  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1459 ZStatus_t ZDP_MgmtLqiRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtLqiRsp:
        CFI Block cfiBlock368 Using cfiCommon0
        CFI Function ZDP_MgmtLqiRsp
        CODE
// 1460                           byte Status,
// 1461                           byte NeighborLqiEntries,
// 1462                           byte StartIndex,
// 1463                           byte NeighborLqiCount,
// 1464                           ZDP_MgmtLqiItem_t* NeighborList,
// 1465                           byte SecurityEnable )
// 1466 {
        FUNCALL ZDP_MgmtLqiRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x15
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 21)
        ; Saved register size: 21
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     ?V0 + 10,R2
        MOV     ?V0 + 11,R3
        MOV     ?V0 + 12,R5
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine114_0 & 0xFFFF
// 1467   ZDP_MgmtLqiItem_t* list = NeighborList;
// 1468   uint8 *buf, *pBuf;
// 1469   byte len, x;
// 1470 
// 1471   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1472 
// 1473   if ( ZSuccess != Status )
??CrossCallReturnLabel_209:
        MOV     A,R4
        JZ      ??ZDP_MgmtLqiRsp_0
// 1474   {
// 1475     ZDP_TmpBuf[0] = Status;
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_184:
        MOV     A,R4
        MOVX    @DPTR,A
// 1476     return fillAndSend( &TransSeq, dstAddr, Mgmt_Lqi_rsp, 1 );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 0,#0x31
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 24)
        MOV     R1,#0x1
        MOV     R4,?V0 + 10
        MOV     R5,?V0 + 11
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??Subroutine124_0 & 0xFFFF
// 1477   }
??CrossCallReturnLabel_276:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 22)
        LJMP    ??CrossCallReturnLabel_198 & 0xFFFF
// 1478 
// 1479   // (Status + NeighborLqiEntries + StartIndex + NeighborLqiCount) +
// 1480   //  neighbor LQI data.
// 1481   len = (1 + 1 + 1 + 1) + (NeighborLqiCount * ZDP_MGMTLQI_EXTENDED_SIZE);
??ZDP_MgmtLqiRsp_0:
        MOV     B,#0x16
        MOV     A,?V0 + 5
        MUL     AB
        ADD     A,#0x4
        MOV     ?V0 + 6,A
// 1482 
// 1483   buf = osal_mem_alloc( len+1 );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine62 & 0xFFFF
// 1484   if ( buf == NULL )
??CrossCallReturnLabel_195:
        JNZ     ??ZDP_MgmtLqiRsp_1
// 1485   {
// 1486     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??CrossCallReturnLabel_198 & 0xFFFF
// 1487   }
// 1488 
// 1489   pBuf = buf+1;
??ZDP_MgmtLqiRsp_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
// 1490 
// 1491   *pBuf++ = Status;
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
// 1492   *pBuf++ = NeighborLqiEntries;
        MOV     A,?V0 + 12
        MOVX    @DPTR,A
        INC     DPTR
// 1493   *pBuf++ = StartIndex;
        LCALL   ?Subroutine56 & 0xFFFF
// 1494   *pBuf++ = NeighborLqiCount;
// 1495 
// 1496   for ( x = 0; x < NeighborLqiCount; x++ )
??CrossCallReturnLabel_78:
        MOV     ?V0 + 4,#0x0
        LJMP    ??ZDP_MgmtLqiRsp_2 & 0xFFFF
// 1497   {
// 1498     osal_cpyExtAddr( pBuf, list->extPanID);         // Extended PanID
??ZDP_MgmtLqiRsp_3:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,?V0 + 0
        ADD     A,#0x2
        MOV     R4,A
        MOV     A,?V0 + 1
        LCALL   ?Subroutine65 & 0xFFFF
// 1499     pBuf += Z_EXTADDR_LEN;
// 1500 
// 1501     // EXTADDR
// 1502     pBuf = osal_cpyExtAddr( pBuf, list->extAddr );
??CrossCallReturnLabel_95:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,?V0 + 0
        ADD     A,#0xa
        MOV     R4,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,R6
        ADD     A,#0x8
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     R6,?V0 + 8
        MOV     R7,?V0 + 9
// 1503 
// 1504     // NWKADDR
// 1505     *pBuf++ = LO_UINT16( list->nwkAddr );
        MOV     A,?V0 + 0
        ADD     A,#0x12
        MOV     R0,A
        MOV     A,?V0 + 1
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_121:
        LCALL   ?Subroutine36 & 0xFFFF
// 1506     *pBuf++ = HI_UINT16( list->nwkAddr );
??CrossCallReturnLabel_50:
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        LCALL   ??Subroutine116_0 & 0xFFFF
// 1507 
// 1508     // DEVICETYPE
// 1509     *pBuf = list->devType;
??CrossCallReturnLabel_222:
        ADD     A,#0x14
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_290:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    @DPTR,A
// 1510 
// 1511     // RXONIDLE
// 1512     *pBuf |= (uint8)(list->rxOnIdle << 2);
        MOV     A,?V0 + 0
        ADD     A,#0x15
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_291:
        RLC     A
        RLC     A
        ANL     A,#0xfc
        MOV     R0,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ORL     A,R0
        LCALL   ?Subroutine59 & 0xFFFF
// 1513 
// 1514     // RELATIONSHIP
// 1515     *pBuf++ |= (uint8)(list->relation << 4);
??CrossCallReturnLabel_86:
        MOV     A,?V0 + 0
        ADD     A,#0x16
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ??Subroutine100_0 & 0xFFFF
??CrossCallReturnLabel_139:
        LCALL   ?Subroutine33 & 0xFFFF
// 1516 
// 1517     // PERMITJOINING
// 1518     *pBuf++ = (uint8)(list->permit);
??CrossCallReturnLabel_45:
        MOV     A,?V0 + 0
        ADD     A,#0x17
        LCALL   ?Subroutine13 & 0xFFFF
// 1519 
// 1520     // DEPTH
// 1521     *pBuf++ = list->depth;
// 1522 
// 1523     // LQI
// 1524     *pBuf++ = list->lqi;
// 1525 
// 1526     list++; // next list entry
// 1527   }
??CrossCallReturnLabel_219:
        ADD     A,#0x18
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_220:
        ADD     A,#0x19
        LCALL   ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_221:
        ADD     A,#0x1a
        MOV     ?V0 + 0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
        INC     ?V0 + 4
??ZDP_MgmtLqiRsp_2:
        MOV     A,?V0 + 4
        CLR     C
        SUBB    A,?V0 + 5
        JNC     $+5
        LJMP    ??ZDP_MgmtLqiRsp_3 & 0xFFFF
// 1528 
// 1529   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_Lqi_rsp, len, buf );
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_232:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 0,#0x31
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 24)
        MOV     R1,?V0 + 6
        MOV     R4,?V0 + 10
        MOV     R5,?V0 + 11
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_277:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 22)
        LCALL   ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_198:
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 21)
        MOV     R7,#0xd
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock368
// 1530 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine65:
        CFI Block cfiCond369 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_94
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond370 Using cfiCommon0
        CFI (cfiCond370) NoFunction
        CFI (cfiCond370) Conditional ??CrossCallReturnLabel_95
        CFI (cfiCond370) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond370) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond370) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond370) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond370) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond370) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond370) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond370) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond370) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond370) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond370) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond370) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond370) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond370) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond370) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond370) CFA_SP SP+0
        CFI (cfiCond370) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiPicker371 Using cfiCommon1
        CFI (cfiPicker371) NoFunction
        CFI (cfiPicker371) Picker
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay
        RET
        CFI EndBlock cfiCond369
        CFI EndBlock cfiCond370
        CFI EndBlock cfiPicker371

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine62:
        CFI Block cfiCond372 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_195
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond373 Using cfiCommon0
        CFI (cfiCond373) NoFunction
        CFI (cfiCond373) Conditional ??CrossCallReturnLabel_196
        CFI (cfiCond373) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond373) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond373) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond373) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond373) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond373) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond373) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond373) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond373) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond373) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond373) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond373) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond373) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond373) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond373) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond373) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond373) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond373) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond373) CFA_SP SP+0
        CFI (cfiCond373) CFA_XSP16 add(XSP16, 27)
        CFI Block cfiPicker374 Using cfiCommon1
        CFI (cfiPicker374) NoFunction
        CFI (cfiPicker374) Picker
        ADD     A,#0x1
        CFI EndBlock cfiCond372
        CFI EndBlock cfiCond373
        CFI EndBlock cfiPicker374
        REQUIRE ??Subroutine112_0
        ; // Fall through to label ??Subroutine112_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine112_0:
        CFI Block cfiCond375 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_197
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond376 Using cfiCommon0
        CFI (cfiCond376) NoFunction
        CFI (cfiCond376) Conditional ??CrossCallReturnLabel_195
        CFI (cfiCond376) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond376) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond376) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond376) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond376) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond376) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond376) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond376) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond376) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond376) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond376) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond376) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond376) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond376) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond376) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond376) CFA_SP SP+0
        CFI (cfiCond376) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond377 Using cfiCommon0
        CFI (cfiCond377) NoFunction
        CFI (cfiCond377) Conditional ??CrossCallReturnLabel_196
        CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond377) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond377) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond377) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond377) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond377) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond377) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond377) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond377) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond377) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond377) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond377) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond377) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond377) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond377) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond377) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond377) CFA_SP SP+0
        CFI (cfiCond377) CFA_XSP16 add(XSP16, 27)
        CFI Block cfiPicker378 Using cfiCommon1
        CFI (cfiPicker378) NoFunction
        CFI (cfiPicker378) Picker
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        RET
        CFI EndBlock cfiCond375
        CFI EndBlock cfiCond376
        CFI EndBlock cfiCond377
        CFI EndBlock cfiPicker378

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine59:
        CFI Block cfiCond379 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_85
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond380 Using cfiCommon0
        CFI (cfiCond380) NoFunction
        CFI (cfiCond380) Conditional ??CrossCallReturnLabel_86
        CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond380) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond380) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond380) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond380) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond380) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond380) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond380) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond380) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond380) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond380) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond380) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond380) CFA_SP SP+0
        CFI (cfiCond380) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiPicker381 Using cfiCommon1
        CFI (cfiPicker381) NoFunction
        CFI (cfiPicker381) Picker
        MOVX    @DPTR,A
        MOV     A,R6
        MOV     R0,A
        MOV     A,R7
        MOV     R1,A
        INC     DPTR
        INC     R6
        MOV     R7,DPH
        RET
        CFI EndBlock cfiCond379
        CFI EndBlock cfiCond380
        CFI EndBlock cfiPicker381

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine56:
        CFI Block cfiCond382 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_77
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        CFI Block cfiCond383 Using cfiCommon0
        CFI (cfiCond383) NoFunction
        CFI (cfiCond383) Conditional ??CrossCallReturnLabel_78
        CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond383) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond383) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond383) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond383) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond383) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond383) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond383) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond383) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond383) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond383) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond383) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond383) CFA_SP SP+0
        CFI (cfiCond383) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiPicker384 Using cfiCommon1
        CFI (cfiPicker384) NoFunction
        CFI (cfiPicker384) Picker
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 5
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_215:
        RET
        CFI EndBlock cfiCond382
        CFI EndBlock cfiCond383
        CFI EndBlock cfiPicker384

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine55:
        CFI Block cfiCond385 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_198
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond386 Using cfiCommon0
        CFI (cfiCond386) NoFunction
        CFI (cfiCond386) Conditional ??CrossCallReturnLabel_199
        CFI (cfiCond386) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond386) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond386) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond386) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond386) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond386) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond386) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond386) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond386) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond386) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond386) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond386) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond386) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond386) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond386) CFA_SP SP+0
        CFI (cfiCond386) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiPicker387 Using cfiCommon1
        CFI (cfiPicker387) NoFunction
        CFI (cfiPicker387) Picker
        MOV     A,R1
        MOV     R6,A
        ; Setup parameters for call to function osal_mem_free
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        CFI EndBlock cfiCond385
        CFI EndBlock cfiCond386
        CFI EndBlock cfiPicker387
        REQUIRE ??Subroutine113_0
        ; // Fall through to label ??Subroutine113_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine113_0:
        CFI Block cfiCond388 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_200
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond389 Using cfiCommon0
        CFI (cfiCond389) NoFunction
        CFI (cfiCond389) Conditional ??CrossCallReturnLabel_198
        CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond389) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond389) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond389) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond389) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond389) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond389) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond389) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond389) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond389) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond389) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond389) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond389) CFA_SP SP+0
        CFI (cfiCond389) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond390 Using cfiCommon0
        CFI (cfiCond390) NoFunction
        CFI (cfiCond390) Conditional ??CrossCallReturnLabel_199
        CFI (cfiCond390) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond390) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond390) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond390) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond390) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond390) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond390) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond390) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond390) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond390) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond390) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond390) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond390) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond390) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond390) CFA_SP SP+0
        CFI (cfiCond390) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiPicker391 Using cfiCommon1
        CFI (cfiPicker391) NoFunction
        CFI (cfiPicker391) Picker
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_201:
        MOV     A,R6
        MOV     R1,A
        RET
        CFI EndBlock cfiCond388
        CFI EndBlock cfiCond389
        CFI EndBlock cfiCond390
        CFI EndBlock cfiPicker391

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine41:
        CFI Block cfiCond392 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_212
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond393 Using cfiCommon0
        CFI (cfiCond393) NoFunction
        CFI (cfiCond393) Conditional ??CrossCallReturnLabel_213
        CFI (cfiCond393) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond393) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond393) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond393) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond393) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond393) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond393) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond393) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond393) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond393) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond393) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond393) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond393) CFA_SP SP+0
        CFI (cfiCond393) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiPicker394 Using cfiCommon1
        CFI (cfiPicker394) NoFunction
        CFI (cfiPicker394) Picker
        MOV     DPTR,#ZDP_TmpBuf
        CFI EndBlock cfiCond392
        CFI EndBlock cfiCond393
        CFI EndBlock cfiPicker394
        REQUIRE ??Subroutine114_0
        ; // Fall through to label ??Subroutine114_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine114_0:
        CFI Block cfiCond395 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_203
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond396 Using cfiCommon0
        CFI (cfiCond396) NoFunction
        CFI (cfiCond396) Conditional ??CrossCallReturnLabel_204
        CFI (cfiCond396) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond396) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond396) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond396) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond396) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond396) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond396) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond396) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond396) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond396) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond396) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond396) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond396) CFA_SP SP+0
        CFI (cfiCond396) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond397 Using cfiCommon0
        CFI (cfiCond397) NoFunction
        CFI (cfiCond397) Conditional ??CrossCallReturnLabel_205
        CFI (cfiCond397) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond397) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond397) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond397) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond397) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond397) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond397) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond397) CFA_SP SP+0
        CFI (cfiCond397) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond398 Using cfiCommon0
        CFI (cfiCond398) NoFunction
        CFI (cfiCond398) Conditional ??CrossCallReturnLabel_206
        CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond398) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond398) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond398) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond398) CFA_SP SP+0
        CFI (cfiCond398) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond399 Using cfiCommon0
        CFI (cfiCond399) NoFunction
        CFI (cfiCond399) Conditional ??CrossCallReturnLabel_207
        CFI (cfiCond399) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond399) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond399) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond399) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond399) CFA_SP SP+0
        CFI (cfiCond399) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond400 Using cfiCommon0
        CFI (cfiCond400) NoFunction
        CFI (cfiCond400) Conditional ??CrossCallReturnLabel_208
        CFI (cfiCond400) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond400) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond400) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond400) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond400) CFA_SP SP+0
        CFI (cfiCond400) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond401 Using cfiCommon0
        CFI (cfiCond401) NoFunction
        CFI (cfiCond401) Conditional ??CrossCallReturnLabel_209
        CFI (cfiCond401) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond401) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond401) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond401) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond401) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond401) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond401) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond401) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond401) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond401) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond401) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond401) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond401) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond401) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond401) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond401) CFA_SP SP+0
        CFI (cfiCond401) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond402 Using cfiCommon0
        CFI (cfiCond402) NoFunction
        CFI (cfiCond402) Conditional ??CrossCallReturnLabel_210
        CFI (cfiCond402) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond402) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond402) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond402) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond402) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond402) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond402) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond402) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond402) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond402) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond402) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond402) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond402) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond402) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond402) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond402) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond402) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond402) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond402) CFA_SP SP+0
        CFI (cfiCond402) CFA_XSP16 add(XSP16, 27)
        CFI Block cfiCond403 Using cfiCommon0
        CFI (cfiCond403) NoFunction
        CFI (cfiCond403) Conditional ??CrossCallReturnLabel_211
        CFI (cfiCond403) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond403) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond403) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond403) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond403) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond403) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond403) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond403) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond403) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond403) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond403) CFA_SP SP+0
        CFI (cfiCond403) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond404 Using cfiCommon0
        CFI (cfiCond404) NoFunction
        CFI (cfiCond404) Conditional ??CrossCallReturnLabel_212
        CFI (cfiCond404) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond404) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond404) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond404) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond404) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond404) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond404) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond404) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond404) CFA_SP SP+0
        CFI (cfiCond404) CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond405 Using cfiCommon0
        CFI (cfiCond405) NoFunction
        CFI (cfiCond405) Conditional ??CrossCallReturnLabel_213
        CFI (cfiCond405) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond405) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond405) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond405) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond405) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond405) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond405) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond405) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond405) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond405) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond405) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond405) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond405) CFA_SP SP+0
        CFI (cfiCond405) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiPicker406 Using cfiCommon1
        CFI (cfiPicker406) NoFunction
        CFI (cfiPicker406) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        RET
        CFI EndBlock cfiCond395
        CFI EndBlock cfiCond396
        CFI EndBlock cfiCond397
        CFI EndBlock cfiCond398
        CFI EndBlock cfiCond399
        CFI EndBlock cfiCond400
        CFI EndBlock cfiCond401
        CFI EndBlock cfiCond402
        CFI EndBlock cfiCond403
        CFI EndBlock cfiCond404
        CFI EndBlock cfiCond405
        CFI EndBlock cfiPicker406

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine36:
        CFI Block cfiCond407 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_49
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond408 Using cfiCommon0
        CFI (cfiCond408) NoFunction
        CFI (cfiCond408) Conditional ??CrossCallReturnLabel_50
        CFI (cfiCond408) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond408) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond408) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond408) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond408) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond408) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond408) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond408) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond408) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond408) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond408) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond408) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond408) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond408) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond408) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond408) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond408) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond408) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond408) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond408) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond408) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond408) CFA_SP SP+0
        CFI (cfiCond408) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiPicker409 Using cfiCommon1
        CFI (cfiPicker409) NoFunction
        CFI (cfiPicker409) Picker
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_218:
        RET
        CFI EndBlock cfiCond407
        CFI EndBlock cfiCond408
        CFI EndBlock cfiPicker409

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine73:
        CFI Block cfiCond410 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_7
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        CFI Block cfiCond411 Using cfiCommon0
        CFI (cfiCond411) NoFunction
        CFI (cfiCond411) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_8
        CFI (cfiCond411) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond411) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond411) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond411) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond411) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond411) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond411) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond411) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond411) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond411) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond411) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond411) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond411) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond411) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond411) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond411) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond411) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond411) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond411) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond411) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond411) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond411) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond411) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond411) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond411) CFA_SP SP+0
        CFI (cfiCond411) CFA_XSP16 add(XSP16, 24)
        CFI Block cfiCond412 Using cfiCommon0
        CFI (cfiCond412) NoFunction
        CFI (cfiCond412) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_49
        CFI (cfiCond412) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond412) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond412) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond412) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond412) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond412) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond412) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond412) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond412) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond412) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond412) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond412) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond412) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond412) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond412) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond412) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond412) CFA_SP SP+0
        CFI (cfiCond412) CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond413 Using cfiCommon0
        CFI (cfiCond413) NoFunction
        CFI (cfiCond413) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_50
        CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond413) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond413) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond413) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond413) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond413) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond413) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond413) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond413) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond413) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond413) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond413) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond413) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond413) CFA_SP SP+0
        CFI (cfiCond413) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiPicker414 Using cfiCommon1
        CFI (cfiPicker414) NoFunction
        CFI (cfiPicker414) Picker
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        CFI EndBlock cfiCond410
        CFI EndBlock cfiCond411
        CFI EndBlock cfiCond412
        CFI EndBlock cfiCond413
        CFI EndBlock cfiPicker414
        REQUIRE ??Subroutine115_0
        ; // Fall through to label ??Subroutine115_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine115_0:
        CFI Block cfiCond415 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_87
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        CFI Block cfiCond416 Using cfiCommon0
        CFI (cfiCond416) NoFunction
        CFI (cfiCond416) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_88
        CFI (cfiCond416) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond416) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond416) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond416) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond416) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond416) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond416) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond416) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond416) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond416) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond416) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond416) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond416) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond416) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond416) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond416) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond416) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond416) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond416) CFA_SP SP+0
        CFI (cfiCond416) CFA_XSP16 add(XSP16, 24)
        CFI Block cfiCond417 Using cfiCommon0
        CFI (cfiCond417) NoFunction
        CFI (cfiCond417) Conditional ??CrossCallReturnLabel_214
        CFI (cfiCond417) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond417) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond417) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond417) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond417) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond417) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond417) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond417) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond417) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond417) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond417) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond417) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond417) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond417) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond417) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond417) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond417) CFA_SP SP+0
        CFI (cfiCond417) CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond418 Using cfiCommon0
        CFI (cfiCond418) NoFunction
        CFI (cfiCond418) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_77
        CFI (cfiCond418) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond418) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond418) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond418) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond418) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond418) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond418) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond418) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond418) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond418) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond418) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond418) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond418) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond418) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond418) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond418) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond418) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond418) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond418) CFA_SP SP+0
        CFI (cfiCond418) CFA_XSP16 add(XSP16, 24)
        CFI Block cfiCond419 Using cfiCommon0
        CFI (cfiCond419) NoFunction
        CFI (cfiCond419) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_78
        CFI (cfiCond419) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond419) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond419) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond419) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond419) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond419) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond419) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond419) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond419) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond419) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond419) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond419) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond419) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond419) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond419) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond419) CFA_SP SP+0
        CFI (cfiCond419) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond420 Using cfiCommon0
        CFI (cfiCond420) NoFunction
        CFI (cfiCond420) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_7
        CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond420) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond420) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond420) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond420) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond420) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond420) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond420) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond420) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond420) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond420) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond420) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond420) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond420) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond420) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond420) CFA_SP SP+0
        CFI (cfiCond420) CFA_XSP16 add(XSP16, 24)
        CFI Block cfiCond421 Using cfiCommon0
        CFI (cfiCond421) NoFunction
        CFI (cfiCond421) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_8
        CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond421) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond421) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond421) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond421) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond421) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond421) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond421) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond421) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond421) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond421) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond421) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond421) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond421) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond421) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond421) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond421) CFA_SP SP+0
        CFI (cfiCond421) CFA_XSP16 add(XSP16, 24)
        CFI Block cfiCond422 Using cfiCommon0
        CFI (cfiCond422) NoFunction
        CFI (cfiCond422) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_49
        CFI (cfiCond422) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond422) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond422) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond422) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond422) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond422) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond422) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond422) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond422) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond422) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond422) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond422) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond422) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond422) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond422) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond422) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond422) CFA_SP SP+0
        CFI (cfiCond422) CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond423 Using cfiCommon0
        CFI (cfiCond423) NoFunction
        CFI (cfiCond423) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_50
        CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond423) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond423) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond423) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond423) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond423) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond423) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond423) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond423) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond423) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond423) CFA_SP SP+0
        CFI (cfiCond423) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiPicker424 Using cfiCommon1
        CFI (cfiPicker424) NoFunction
        CFI (cfiPicker424) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
        RET
        CFI EndBlock cfiCond415
        CFI EndBlock cfiCond416
        CFI EndBlock cfiCond417
        CFI EndBlock cfiCond418
        CFI EndBlock cfiCond419
        CFI EndBlock cfiCond420
        CFI EndBlock cfiCond421
        CFI EndBlock cfiCond422
        CFI EndBlock cfiCond423
        CFI EndBlock cfiPicker424

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine33:
        CFI Block cfiCond425 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_44
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond426 Using cfiCommon0
        CFI (cfiCond426) NoFunction
        CFI (cfiCond426) Conditional ??CrossCallReturnLabel_45
        CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond426) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond426) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond426) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond426) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond426) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond426) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond426) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond426) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond426) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond426) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond426) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond426) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond426) CFA_SP SP+0
        CFI (cfiCond426) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiPicker427 Using cfiCommon1
        CFI (cfiPicker427) NoFunction
        CFI (cfiPicker427) Picker
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf0
        MOV     R2,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        ORL     A,R2
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond425
        CFI EndBlock cfiCond426
        CFI EndBlock cfiPicker427

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine13:
        CFI Block cfiCond428 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_219
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond429 Using cfiCommon0
        CFI (cfiCond429) NoFunction
        CFI (cfiCond429) Conditional ??CrossCallReturnLabel_220
        CFI (cfiCond429) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond429) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond429) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond429) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond429) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond429) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond429) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond429) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond429) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond429) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond429) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond429) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond429) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond429) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond429) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond429) CFA_SP SP+0
        CFI (cfiCond429) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond430 Using cfiCommon0
        CFI (cfiCond430) NoFunction
        CFI (cfiCond430) Conditional ??CrossCallReturnLabel_221
        CFI (cfiCond430) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond430) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond430) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond430) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond430) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond430) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond430) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond430) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond430) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond430) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond430) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond430) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond430) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond430) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond430) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond430) CFA_SP SP+0
        CFI (cfiCond430) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiPicker431 Using cfiCommon1
        CFI (cfiPicker431) NoFunction
        CFI (cfiPicker431) Picker
        MOV     DPL,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     DPH,A
        CFI EndBlock cfiCond428
        CFI EndBlock cfiCond429
        CFI EndBlock cfiCond430
        CFI EndBlock cfiPicker431
        REQUIRE ??Subroutine116_0
        ; // Fall through to label ??Subroutine116_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine116_0:
        CFI Block cfiCond432 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_222
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond433 Using cfiCommon0
        CFI (cfiCond433) NoFunction
        CFI (cfiCond433) Conditional ??CrossCallReturnLabel_219
        CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond433) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond433) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond433) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond433) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond433) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond433) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond433) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond433) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond433) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond433) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond433) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond433) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond433) CFA_SP SP+0
        CFI (cfiCond433) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond434 Using cfiCommon0
        CFI (cfiCond434) NoFunction
        CFI (cfiCond434) Conditional ??CrossCallReturnLabel_220
        CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond434) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond434) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond434) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond434) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond434) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond434) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond434) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond434) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond434) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond434) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond434) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond434) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond434) CFA_SP SP+0
        CFI (cfiCond434) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond435 Using cfiCommon0
        CFI (cfiCond435) NoFunction
        CFI (cfiCond435) Conditional ??CrossCallReturnLabel_221
        CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond435) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond435) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond435) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond435) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond435) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond435) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond435) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond435) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond435) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond435) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond435) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond435) CFA_SP SP+0
        CFI (cfiCond435) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiPicker436 Using cfiCommon1
        CFI (cfiPicker436) NoFunction
        CFI (cfiPicker436) Picker
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_224:
        MOV     A,?V0 + 0
        RET
        CFI EndBlock cfiCond432
        CFI EndBlock cfiCond433
        CFI EndBlock cfiCond434
        CFI EndBlock cfiCond435
        CFI EndBlock cfiPicker436

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine83:
        CFI Block cfiCond437 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_7
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        CFI Block cfiCond438 Using cfiCommon0
        CFI (cfiCond438) NoFunction
        CFI (cfiCond438) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_8
        CFI (cfiCond438) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond438) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond438) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond438) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond438) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond438) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond438) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond438) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond438) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond438) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond438) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond438) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond438) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond438) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond438) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond438) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond438) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond438) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond438) CFA_SP SP+0
        CFI (cfiCond438) CFA_XSP16 add(XSP16, 24)
        CFI Block cfiCond439 Using cfiCommon0
        CFI (cfiCond439) NoFunction
        CFI (cfiCond439) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_219
        CFI (cfiCond439) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond439) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond439) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond439) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond439) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond439) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond439) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond439) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond439) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond439) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond439) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond439) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond439) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond439) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond439) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond439) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond439) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond439) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond439) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond439) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond439) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond439) CFA_SP SP+0
        CFI (cfiCond439) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond440 Using cfiCommon0
        CFI (cfiCond440) NoFunction
        CFI (cfiCond440) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_220
        CFI (cfiCond440) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond440) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond440) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond440) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond440) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond440) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond440) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond440) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond440) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond440) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond440) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond440) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond440) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond440) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond440) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond440) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond440) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond440) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond440) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond440) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond440) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond440) CFA_SP SP+0
        CFI (cfiCond440) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond441 Using cfiCommon0
        CFI (cfiCond441) NoFunction
        CFI (cfiCond441) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_221
        CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond441) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond441) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond441) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond441) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond441) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond441) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond441) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond441) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond441) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond441) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond441) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond441) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond441) CFA_SP SP+0
        CFI (cfiCond441) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond442 Using cfiCommon0
        CFI (cfiCond442) NoFunction
        CFI (cfiCond442) Conditional ??CrossCallReturnLabel_224, ??CrossCallReturnLabel_222
        CFI (cfiCond442) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond442) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond442) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond442) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond442) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond442) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond442) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond442) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond442) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond442) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond442) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond442) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond442) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond442) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond442) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond442) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond442) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond442) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond442) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond442) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond442) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond442) CFA_SP SP+0
        CFI (cfiCond442) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiPicker443 Using cfiCommon1
        CFI (cfiPicker443) NoFunction
        CFI (cfiPicker443) Picker
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    @DPTR,A
        INC     DPTR
        INC     R6
        MOV     R7,DPH
        RET
        CFI EndBlock cfiCond437
        CFI EndBlock cfiCond438
        CFI EndBlock cfiCond439
        CFI EndBlock cfiCond440
        CFI EndBlock cfiCond441
        CFI EndBlock cfiCond442
        CFI EndBlock cfiPicker443
// 1531 
// 1532 /*********************************************************************
// 1533  * @fn          ZDP_MgmtRtgRsp
// 1534  *
// 1535  * @brief       This builds and send a Mgmt_Rtg_rsp message. This
// 1536  *              function sends a unicast message.
// 1537  *
// 1538  * @param       dstAddr - destination address of the message
// 1539  * @param       Status - message status (ZDP_SUCCESS or other)
// 1540  * @param       RoutingTableEntries - Total number of entries
// 1541  * @param       StartIndex - Starting index within the reporting list
// 1542  * @param       RoutingTableListCount - number of entries included
// 1543  *                                      in this message
// 1544  * @param       RoutingTableList - List of Routing Table entries
// 1545  * @param       SecurityEnable - true to enable security for this message
// 1546  *
// 1547  * @return      ZStatus_t
// 1548  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1549 ZStatus_t ZDP_MgmtRtgRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtRtgRsp:
        CFI Block cfiBlock444 Using cfiCommon0
        CFI Function ZDP_MgmtRtgRsp
        CODE
// 1550                             byte Status,
// 1551                             byte RoutingTableEntries,
// 1552                             byte StartIndex,
// 1553                             byte RoutingListCount,
// 1554                             rtgItem_t *RoutingTableList,
// 1555                             byte SecurityEnable )
// 1556 {
        FUNCALL ZDP_MgmtRtgRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtRtgRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtRtgRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x13
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 19)
        ; Saved register size: 19
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     ?V0 + 1,R4
        MOV     ?V0 + 0,R5
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 10,A
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine111_0 & 0xFFFF
// 1557   uint8 *buf;
// 1558   uint8 *pBuf;
// 1559   // Status + RoutingTableEntries + StartIndex + RoutingListCount.
// 1560   byte len = 1 + 1 + 1 + 1;
// 1561   byte x;
// 1562 
// 1563   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1564 
// 1565   // Add an array for Routing List data
// 1566   len += (RoutingListCount * ZDP_ROUTINGENTRY_SIZE);
??CrossCallReturnLabel_192:
        MOV     B,#0x5
        MOV     A,?V0 + 5
        MUL     AB
        ADD     A,#0x4
        MOV     ?V0 + 4,A
// 1567 
// 1568   buf = osal_mem_alloc( (short)(len+1) );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_93:
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     R6,?V0 + 8
        MOV     R7,?V0 + 9
// 1569   if ( buf == NULL )
        MOV     A,R6
        ORL     A,R7
        JNZ     ??ZDP_MgmtRtgRsp_0
// 1570   {
// 1571     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??ZDP_MgmtRtgRsp_1 & 0xFFFF
// 1572   }
// 1573 
// 1574   pBuf = buf+1;
??ZDP_MgmtRtgRsp_0:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
// 1575 
// 1576   *pBuf++ = Status;
        MOV     A,?V0 + 1
        LCALL   ?Subroutine58 & 0xFFFF
// 1577   *pBuf++ = RoutingTableEntries;
// 1578   *pBuf++ = StartIndex;
??CrossCallReturnLabel_82:
        MOV     A,?V0 + 10
        MOVX    @DPTR,A
        INC     DPTR
// 1579   *pBuf++ = RoutingListCount;
        MOV     A,?V0 + 5
        LCALL   ??Subroutine119_0 & 0xFFFF
// 1580 
// 1581   for ( x = 0; x < RoutingListCount; x++ )
??CrossCallReturnLabel_237:
        MOV     R4,#0x0
        SJMP    ??ZDP_MgmtRtgRsp_2
// 1582   {
// 1583     *pBuf++ = LO_UINT16( RoutingTableList->dstAddress );  // Destination Address
??ZDP_MgmtRtgRsp_3:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ?Subroutine24 & 0xFFFF
// 1584     *pBuf++ = HI_UINT16( RoutingTableList->dstAddress );
??CrossCallReturnLabel_23:
        INC     DPTR
        LCALL   ?Subroutine15 & 0xFFFF
// 1585     *pBuf++ = RoutingTableList->status;
??CrossCallReturnLabel_6:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine31 & 0xFFFF
// 1586     *pBuf++ = LO_UINT16( RoutingTableList->nextHopAddress );  // Next hop
??CrossCallReturnLabel_37:
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,?V0 + 3
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine32 & 0xFFFF
// 1587     *pBuf++ = HI_UINT16( RoutingTableList->nextHopAddress );
??CrossCallReturnLabel_43:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine31 & 0xFFFF
// 1588     RoutingTableList++;    // Move to next list entry
// 1589   }
??CrossCallReturnLabel_38:
        ADD     A,#0x7
        MOV     ?V0 + 2,A
        MOV     A,?V0 + 3
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
        INC     R4
??ZDP_MgmtRtgRsp_2:
        MOV     A,R4
        CLR     C
        SUBB    A,?V0 + 5
        JC      ??ZDP_MgmtRtgRsp_3
// 1590 
// 1591   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_Rtg_rsp, len, buf );
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_231:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 2,#0x32
        MOV     ?V0 + 3,#-0x80
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 22)
        MOV     R1,?V0 + 4
        MOV     R4,?V0 + 6
        MOV     R5,?V0 + 7
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_278:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R1
        MOV     ?V0 + 2,A
        ; Setup parameters for call to function osal_mem_free
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_103:
        MOV     R1,?V0 + 2
??ZDP_MgmtRtgRsp_1:
        MOV     A,#0x1
        LJMP    ?Subroutine4 & 0xFFFF
        CFI EndBlock cfiBlock444
// 1592 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine64:
        CFI Block cfiCond445 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_92
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond446 Using cfiCommon0
        CFI (cfiCond446) NoFunction
        CFI (cfiCond446) Conditional ??CrossCallReturnLabel_93
        CFI (cfiCond446) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond446) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond446) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond446) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond446) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond446) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond446) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond446) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond446) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond446) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond446) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond446) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond446) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond446) CFA_SP SP+0
        CFI (cfiCond446) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker447 Using cfiCommon1
        CFI (cfiPicker447) NoFunction
        CFI (cfiPicker447) Picker
        ADD     A,#0x1
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        RET
        CFI EndBlock cfiCond445
        CFI EndBlock cfiCond446
        CFI EndBlock cfiPicker447

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine52:
        CFI Block cfiCond448 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_232
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond449 Using cfiCommon0
        CFI (cfiCond449) NoFunction
        CFI (cfiCond449) Conditional ??CrossCallReturnLabel_233
        CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond449) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond449) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond449) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond449) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond449) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond449) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond449) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond449) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond449) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond449) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond449) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond449) CFA_SP SP+0
        CFI (cfiCond449) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond450 Using cfiCommon0
        CFI (cfiCond450) NoFunction
        CFI (cfiCond450) Conditional ??CrossCallReturnLabel_234
        CFI (cfiCond450) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond450) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond450) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond450) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond450) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond450) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond450) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond450) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond450) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond450) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond450) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond450) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond450) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond450) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond450) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond450) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond450) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond450) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond450) CFA_SP SP+0
        CFI (cfiCond450) CFA_XSP16 add(XSP16, 27)
        CFI Block cfiPicker451 Using cfiCommon1
        CFI (cfiPicker451) NoFunction
        CFI (cfiPicker451) Picker
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        CFI EndBlock cfiCond448
        CFI EndBlock cfiCond449
        CFI EndBlock cfiCond450
        CFI EndBlock cfiPicker451
        REQUIRE ??Subroutine117_0
        ; // Fall through to label ??Subroutine117_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine117_0:
        CFI Block cfiCond452 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_230
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond453 Using cfiCommon0
        CFI (cfiCond453) NoFunction
        CFI (cfiCond453) Conditional ??CrossCallReturnLabel_231
        CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond453) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond453) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond453) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond453) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond453) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond453) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond453) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond453) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond453) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond453) CFA_SP SP+0
        CFI (cfiCond453) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond454 Using cfiCommon0
        CFI (cfiCond454) NoFunction
        CFI (cfiCond454) Conditional ??CrossCallReturnLabel_232
        CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond454) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond454) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond454) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond454) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond454) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond454) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond454) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond454) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond454) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond454) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond454) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond454) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond454) CFA_SP SP+0
        CFI (cfiCond454) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond455 Using cfiCommon0
        CFI (cfiCond455) NoFunction
        CFI (cfiCond455) Conditional ??CrossCallReturnLabel_233
        CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond455) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond455) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond455) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond455) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond455) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond455) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond455) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond455) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond455) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond455) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond455) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond455) CFA_SP SP+0
        CFI (cfiCond455) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond456 Using cfiCommon0
        CFI (cfiCond456) NoFunction
        CFI (cfiCond456) Conditional ??CrossCallReturnLabel_234
        CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond456) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond456) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond456) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond456) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond456) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond456) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond456) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond456) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond456) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond456) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond456) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond456) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond456) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond456) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond456) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond456) CFA_SP SP+0
        CFI (cfiCond456) CFA_XSP16 add(XSP16, 27)
        CFI Block cfiPicker457 Using cfiCommon1
        CFI (cfiPicker457) NoFunction
        CFI (cfiPicker457) Picker
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     DPTR,#ZDP_TmpBuf
        CFI EndBlock cfiCond452
        CFI EndBlock cfiCond453
        CFI EndBlock cfiCond454
        CFI EndBlock cfiCond455
        CFI EndBlock cfiCond456
        CFI EndBlock cfiPicker457
        REQUIRE ??Subroutine118_0
        ; // Fall through to label ??Subroutine118_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine118_0:
        CFI Block cfiCond458 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_225
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond459 Using cfiCommon0
        CFI (cfiCond459) NoFunction
        CFI (cfiCond459) Conditional ??CrossCallReturnLabel_226
        CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond459) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond459) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond459) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond459) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond459) CFA_SP SP+0
        CFI (cfiCond459) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond460 Using cfiCommon0
        CFI (cfiCond460) NoFunction
        CFI (cfiCond460) Conditional ??CrossCallReturnLabel_227
        CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond460) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond460) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond460) CFA_SP SP+0
        CFI (cfiCond460) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiCond461 Using cfiCommon0
        CFI (cfiCond461) NoFunction
        CFI (cfiCond461) Conditional ??CrossCallReturnLabel_228
        CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond461) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond461) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond461) CFA_SP SP+0
        CFI (cfiCond461) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiCond462 Using cfiCommon0
        CFI (cfiCond462) NoFunction
        CFI (cfiCond462) Conditional ??CrossCallReturnLabel_229
        CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond462) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond462) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond462) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond462) CFA_SP SP+0
        CFI (cfiCond462) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiCond463 Using cfiCommon0
        CFI (cfiCond463) NoFunction
        CFI (cfiCond463) Conditional ??CrossCallReturnLabel_230
        CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond463) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond463) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond463) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond463) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond463) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond463) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond463) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond463) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond463) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond463) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond463) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond463) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond463) CFA_SP SP+0
        CFI (cfiCond463) CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond464 Using cfiCommon0
        CFI (cfiCond464) NoFunction
        CFI (cfiCond464) Conditional ??CrossCallReturnLabel_231
        CFI (cfiCond464) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond464) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond464) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond464) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond464) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond464) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond464) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond464) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond464) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond464) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond464) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond464) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond464) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond464) CFA_SP SP+0
        CFI (cfiCond464) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond465 Using cfiCommon0
        CFI (cfiCond465) NoFunction
        CFI (cfiCond465) Conditional ??CrossCallReturnLabel_232
        CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond465) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond465) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond465) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond465) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond465) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond465) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond465) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond465) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond465) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond465) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond465) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond465) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond465) CFA_SP SP+0
        CFI (cfiCond465) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond466 Using cfiCommon0
        CFI (cfiCond466) NoFunction
        CFI (cfiCond466) Conditional ??CrossCallReturnLabel_233
        CFI (cfiCond466) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond466) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond466) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond466) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond466) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond466) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond466) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond466) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond466) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond466) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond466) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond466) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond466) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond466) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond466) CFA_SP SP+0
        CFI (cfiCond466) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond467 Using cfiCommon0
        CFI (cfiCond467) NoFunction
        CFI (cfiCond467) Conditional ??CrossCallReturnLabel_234
        CFI (cfiCond467) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond467) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond467) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond467) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond467) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond467) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond467) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond467) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond467) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond467) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond467) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond467) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond467) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond467) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond467) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond467) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond467) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond467) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond467) CFA_SP SP+0
        CFI (cfiCond467) CFA_XSP16 add(XSP16, 27)
        CFI Block cfiPicker468 Using cfiCommon1
        CFI (cfiPicker468) NoFunction
        CFI (cfiPicker468) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond458
        CFI EndBlock cfiCond459
        CFI EndBlock cfiCond460
        CFI EndBlock cfiCond461
        CFI EndBlock cfiCond462
        CFI EndBlock cfiCond463
        CFI EndBlock cfiCond464
        CFI EndBlock cfiCond465
        CFI EndBlock cfiCond466
        CFI EndBlock cfiCond467
        CFI EndBlock cfiPicker468

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine50:
        CFI Block cfiCond469 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_238
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond470 Using cfiCommon0
        CFI (cfiCond470) NoFunction
        CFI (cfiCond470) Conditional ??CrossCallReturnLabel_239
        CFI (cfiCond470) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond470) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond470) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond470) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond470) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond470) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond470) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond470) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond470) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond470) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond470) CFA_SP SP+0
        CFI (cfiCond470) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker471 Using cfiCommon1
        CFI (cfiPicker471) NoFunction
        CFI (cfiPicker471) Picker
        MOV     DPL,R0
        MOV     DPH,R1
        CFI EndBlock cfiCond469
        CFI EndBlock cfiCond470
        CFI EndBlock cfiPicker471
        REQUIRE ??Subroutine119_0
        ; // Fall through to label ??Subroutine119_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine119_0:
        CFI Block cfiCond472 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_235
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond473 Using cfiCommon0
        CFI (cfiCond473) NoFunction
        CFI (cfiCond473) Conditional ??CrossCallReturnLabel_236
        CFI (cfiCond473) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond473) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond473) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond473) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond473) CFA_SP SP+0
        CFI (cfiCond473) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond474 Using cfiCommon0
        CFI (cfiCond474) NoFunction
        CFI (cfiCond474) Conditional ??CrossCallReturnLabel_237
        CFI (cfiCond474) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond474) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond474) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond474) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond474) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond474) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond474) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond474) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond474) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond474) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond474) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond474) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond474) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond474) CFA_SP SP+0
        CFI (cfiCond474) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond475 Using cfiCommon0
        CFI (cfiCond475) NoFunction
        CFI (cfiCond475) Conditional ??CrossCallReturnLabel_238
        CFI (cfiCond475) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond475) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond475) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond475) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond475) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond475) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond475) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond475) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond475) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond475) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond475) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond475) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond475) CFA_SP SP+0
        CFI (cfiCond475) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond476 Using cfiCommon0
        CFI (cfiCond476) NoFunction
        CFI (cfiCond476) Conditional ??CrossCallReturnLabel_239
        CFI (cfiCond476) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond476) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond476) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond476) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond476) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond476) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond476) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond476) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond476) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond476) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond476) CFA_SP SP+0
        CFI (cfiCond476) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker477 Using cfiCommon1
        CFI (cfiPicker477) NoFunction
        CFI (cfiPicker477) Picker
        LCALL   ??Subroutine103_0 & 0xFFFF
??CrossCallReturnLabel_243:
        RET
        CFI EndBlock cfiCond472
        CFI EndBlock cfiCond473
        CFI EndBlock cfiCond474
        CFI EndBlock cfiCond475
        CFI EndBlock cfiCond476
        CFI EndBlock cfiPicker477

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine31:
        CFI Block cfiCond478 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_37
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond479 Using cfiCommon0
        CFI (cfiCond479) NoFunction
        CFI (cfiCond479) Conditional ??CrossCallReturnLabel_38
        CFI (cfiCond479) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond479) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond479) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond479) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond479) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond479) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond479) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond479) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond479) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond479) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond479) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond479) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond479) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond479) CFA_SP SP+0
        CFI (cfiCond479) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker480 Using cfiCommon1
        CFI (cfiPicker480) NoFunction
        CFI (cfiPicker480) Picker
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_250:
        MOV     A,?V0 + 2
        RET
        CFI EndBlock cfiCond478
        CFI EndBlock cfiCond479
        CFI EndBlock cfiPicker480

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine24:
        CFI Block cfiCond481 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_22
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond482 Using cfiCommon0
        CFI (cfiCond482) NoFunction
        CFI (cfiCond482) Conditional ??CrossCallReturnLabel_23
        CFI (cfiCond482) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond482) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond482) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond482) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond482) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond482) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond482) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond482) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond482) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond482) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond482) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond482) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond482) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond482) CFA_SP SP+0
        CFI (cfiCond482) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker483 Using cfiCommon1
        CFI (cfiPicker483) NoFunction
        CFI (cfiPicker483) Picker
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_242:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        RET
        CFI EndBlock cfiCond481
        CFI EndBlock cfiCond482
        CFI EndBlock cfiPicker483

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine15:
        CFI Block cfiCond484 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_4
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond485 Using cfiCommon0
        CFI (cfiCond485) NoFunction
        CFI (cfiCond485) Conditional ??CrossCallReturnLabel_5
        CFI (cfiCond485) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond485) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond485) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond485) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond485) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond485) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond485) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond485) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond485) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond485) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond485) CFA_SP SP+0
        CFI (cfiCond485) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond486 Using cfiCommon0
        CFI (cfiCond486) NoFunction
        CFI (cfiCond486) Conditional ??CrossCallReturnLabel_6
        CFI (cfiCond486) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond486) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond486) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond486) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond486) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond486) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond486) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond486) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond486) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond486) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond486) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond486) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond486) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond486) CFA_SP SP+0
        CFI (cfiCond486) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker487 Using cfiCommon1
        CFI (cfiPicker487) NoFunction
        CFI (cfiPicker487) Picker
        LCALL   ??Subroutine120_0 & 0xFFFF
??CrossCallReturnLabel_245:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        RET
        CFI EndBlock cfiCond484
        CFI EndBlock cfiCond485
        CFI EndBlock cfiCond486
        CFI EndBlock cfiPicker487

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine78:
        CFI Block cfiCond488 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_2
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond489 Using cfiCommon0
        CFI (cfiCond489) NoFunction
        CFI (cfiCond489) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_3
        CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond489) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond489) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond489) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond489) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond489) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond489) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond489) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond489) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond489) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond489) CFA_SP SP+0
        CFI (cfiCond489) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond490 Using cfiCommon0
        CFI (cfiCond490) NoFunction
        CFI (cfiCond490) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_0
        CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond490) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond490) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond490) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond490) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond490) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond490) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond490) CFA_SP SP+0
        CFI (cfiCond490) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond491 Using cfiCommon0
        CFI (cfiCond491) NoFunction
        CFI (cfiCond491) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_1
        CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond491) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond491) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond491) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond491) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond491) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond491) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond491) CFA_SP SP+0
        CFI (cfiCond491) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond492 Using cfiCommon0
        CFI (cfiCond492) NoFunction
        CFI (cfiCond492) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_37
        CFI (cfiCond492) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond492) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond492) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond492) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond492) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond492) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond492) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond492) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond492) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond492) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond492) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond492) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond492) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond492) CFA_SP SP+0
        CFI (cfiCond492) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond493 Using cfiCommon0
        CFI (cfiCond493) NoFunction
        CFI (cfiCond493) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_38
        CFI (cfiCond493) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond493) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond493) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond493) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond493) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond493) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond493) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond493) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond493) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond493) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond493) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond493) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond493) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond493) CFA_SP SP+0
        CFI (cfiCond493) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker494 Using cfiCommon1
        CFI (cfiPicker494) NoFunction
        CFI (cfiPicker494) Picker
        INC     DPTR
        CFI EndBlock cfiCond488
        CFI EndBlock cfiCond489
        CFI EndBlock cfiCond490
        CFI EndBlock cfiCond491
        CFI EndBlock cfiCond492
        CFI EndBlock cfiCond493
        CFI EndBlock cfiPicker494
        REQUIRE ??Subroutine120_0
        ; // Fall through to label ??Subroutine120_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine120_0:
        CFI Block cfiCond495 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_17
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond496 Using cfiCommon0
        CFI (cfiCond496) NoFunction
        CFI (cfiCond496) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_18
        CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond496) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond496) CFA_SP SP+0
        CFI (cfiCond496) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond497 Using cfiCommon0
        CFI (cfiCond497) NoFunction
        CFI (cfiCond497) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_19
        CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond497) CFA_SP SP+0
        CFI (cfiCond497) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond498 Using cfiCommon0
        CFI (cfiCond498) NoFunction
        CFI (cfiCond498) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_147
        CFI (cfiCond498) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond498) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond498) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond498) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond498) CFA_SP SP+0
        CFI (cfiCond498) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond499 Using cfiCommon0
        CFI (cfiCond499) NoFunction
        CFI (cfiCond499) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_148
        CFI (cfiCond499) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond499) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond499) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond499) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond499) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond499) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond499) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond499) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond499) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond499) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond499) CFA_SP SP+0
        CFI (cfiCond499) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond500 Using cfiCommon0
        CFI (cfiCond500) NoFunction
        CFI (cfiCond500) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_149
        CFI (cfiCond500) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond500) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond500) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond500) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond500) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond500) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond500) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond500) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond500) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond500) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond500) CFA_SP SP+0
        CFI (cfiCond500) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond501 Using cfiCommon0
        CFI (cfiCond501) NoFunction
        CFI (cfiCond501) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_39
        CFI (cfiCond501) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond501) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond501) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond501) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond501) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond501) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond501) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond501) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond501) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond501) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond501) CFA_SP SP+0
        CFI (cfiCond501) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond502 Using cfiCommon0
        CFI (cfiCond502) NoFunction
        CFI (cfiCond502) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_40
        CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond502) CFA_SP SP+0
        CFI (cfiCond502) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond503 Using cfiCommon0
        CFI (cfiCond503) NoFunction
        CFI (cfiCond503) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_41
        CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond503) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond503) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond503) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond503) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond503) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond503) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond503) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond503) CFA_SP SP+0
        CFI (cfiCond503) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond504 Using cfiCommon0
        CFI (cfiCond504) NoFunction
        CFI (cfiCond504) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_42
        CFI (cfiCond504) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond504) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond504) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond504) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond504) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond504) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond504) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond504) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond504) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond504) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond504) CFA_SP SP+0
        CFI (cfiCond504) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond505 Using cfiCommon0
        CFI (cfiCond505) NoFunction
        CFI (cfiCond505) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_43
        CFI (cfiCond505) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond505) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond505) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond505) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond505) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond505) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond505) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond505) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond505) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond505) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond505) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond505) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond505) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond505) CFA_SP SP+0
        CFI (cfiCond505) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond506 Using cfiCommon0
        CFI (cfiCond506) NoFunction
        CFI (cfiCond506) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_4
        CFI (cfiCond506) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond506) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond506) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond506) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond506) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond506) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond506) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond506) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond506) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond506) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond506) CFA_SP SP+0
        CFI (cfiCond506) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond507 Using cfiCommon0
        CFI (cfiCond507) NoFunction
        CFI (cfiCond507) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_5
        CFI (cfiCond507) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond507) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond507) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond507) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond507) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond507) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond507) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond507) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond507) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond507) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond507) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond507) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond507) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond507) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond507) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond507) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond507) CFA_SP SP+0
        CFI (cfiCond507) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond508 Using cfiCommon0
        CFI (cfiCond508) NoFunction
        CFI (cfiCond508) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_6
        CFI (cfiCond508) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond508) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond508) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond508) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond508) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond508) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond508) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond508) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond508) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond508) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond508) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond508) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond508) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond508) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond508) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond508) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond508) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond508) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond508) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond508) CFA_SP SP+0
        CFI (cfiCond508) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond509 Using cfiCommon0
        CFI (cfiCond509) NoFunction
        CFI (cfiCond509) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_2
        CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond509) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond509) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond509) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond509) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond509) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond509) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond509) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond509) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond509) CFA_SP SP+0
        CFI (cfiCond509) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond510 Using cfiCommon0
        CFI (cfiCond510) NoFunction
        CFI (cfiCond510) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_3
        CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond510) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond510) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond510) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond510) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond510) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond510) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond510) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond510) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond510) CFA_SP SP+0
        CFI (cfiCond510) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond511 Using cfiCommon0
        CFI (cfiCond511) NoFunction
        CFI (cfiCond511) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_0
        CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond511) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond511) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond511) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond511) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond511) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond511) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond511) CFA_SP SP+0
        CFI (cfiCond511) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond512 Using cfiCommon0
        CFI (cfiCond512) NoFunction
        CFI (cfiCond512) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_1
        CFI (cfiCond512) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond512) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond512) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond512) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond512) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond512) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond512) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond512) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond512) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond512) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond512) CFA_SP SP+0
        CFI (cfiCond512) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond513 Using cfiCommon0
        CFI (cfiCond513) NoFunction
        CFI (cfiCond513) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_37
        CFI (cfiCond513) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond513) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond513) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond513) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond513) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond513) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond513) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond513) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond513) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond513) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond513) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond513) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond513) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond513) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond513) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond513) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond513) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond513) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond513) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond513) CFA_SP SP+0
        CFI (cfiCond513) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond514 Using cfiCommon0
        CFI (cfiCond514) NoFunction
        CFI (cfiCond514) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_38
        CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond514) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond514) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond514) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond514) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond514) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond514) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond514) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond514) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond514) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond514) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond514) CFA_SP SP+0
        CFI (cfiCond514) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker515 Using cfiCommon1
        CFI (cfiPicker515) NoFunction
        CFI (cfiPicker515) Picker
        MOVX    A,@DPTR
        CFI EndBlock cfiCond495
        CFI EndBlock cfiCond496
        CFI EndBlock cfiCond497
        CFI EndBlock cfiCond498
        CFI EndBlock cfiCond499
        CFI EndBlock cfiCond500
        CFI EndBlock cfiCond501
        CFI EndBlock cfiCond502
        CFI EndBlock cfiCond503
        CFI EndBlock cfiCond504
        CFI EndBlock cfiCond505
        CFI EndBlock cfiCond506
        CFI EndBlock cfiCond507
        CFI EndBlock cfiCond508
        CFI EndBlock cfiCond509
        CFI EndBlock cfiCond510
        CFI EndBlock cfiCond511
        CFI EndBlock cfiCond512
        CFI EndBlock cfiCond513
        CFI EndBlock cfiCond514
        CFI EndBlock cfiPicker515
        REQUIRE ??Subroutine121_0
        ; // Fall through to label ??Subroutine121_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine121_0:
        CFI Block cfiCond516 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_244
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond517 Using cfiCommon0
        CFI (cfiCond517) NoFunction
        CFI (cfiCond517) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_17
        CFI (cfiCond517) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond517) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond517) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond517) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond517) CFA_SP SP+0
        CFI (cfiCond517) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond518 Using cfiCommon0
        CFI (cfiCond518) NoFunction
        CFI (cfiCond518) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_18
        CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond518) CFA_SP SP+0
        CFI (cfiCond518) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond519 Using cfiCommon0
        CFI (cfiCond519) NoFunction
        CFI (cfiCond519) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_19
        CFI (cfiCond519) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond519) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond519) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond519) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond519) CFA_SP SP+0
        CFI (cfiCond519) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond520 Using cfiCommon0
        CFI (cfiCond520) NoFunction
        CFI (cfiCond520) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_147
        CFI (cfiCond520) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond520) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond520) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond520) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond520) CFA_SP SP+0
        CFI (cfiCond520) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond521 Using cfiCommon0
        CFI (cfiCond521) NoFunction
        CFI (cfiCond521) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_148
        CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond521) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond521) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond521) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond521) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond521) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond521) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond521) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond521) CFA_SP SP+0
        CFI (cfiCond521) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond522 Using cfiCommon0
        CFI (cfiCond522) NoFunction
        CFI (cfiCond522) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_149
        CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond522) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond522) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond522) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond522) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond522) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond522) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond522) CFA_SP SP+0
        CFI (cfiCond522) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond523 Using cfiCommon0
        CFI (cfiCond523) NoFunction
        CFI (cfiCond523) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_39
        CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond523) CFA_SP SP+0
        CFI (cfiCond523) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond524 Using cfiCommon0
        CFI (cfiCond524) NoFunction
        CFI (cfiCond524) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_40
        CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond524) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond524) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond524) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond524) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond524) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond524) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond524) CFA_SP SP+0
        CFI (cfiCond524) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond525 Using cfiCommon0
        CFI (cfiCond525) NoFunction
        CFI (cfiCond525) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_41
        CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond525) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond525) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond525) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond525) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond525) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond525) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond525) CFA_SP SP+0
        CFI (cfiCond525) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond526 Using cfiCommon0
        CFI (cfiCond526) NoFunction
        CFI (cfiCond526) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_42
        CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond526) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond526) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond526) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond526) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond526) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond526) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond526) CFA_SP SP+0
        CFI (cfiCond526) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond527 Using cfiCommon0
        CFI (cfiCond527) NoFunction
        CFI (cfiCond527) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_43
        CFI (cfiCond527) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond527) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond527) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond527) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond527) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond527) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond527) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond527) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond527) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond527) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond527) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond527) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond527) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond527) CFA_SP SP+0
        CFI (cfiCond527) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond528 Using cfiCommon0
        CFI (cfiCond528) NoFunction
        CFI (cfiCond528) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_4
        CFI (cfiCond528) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond528) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond528) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond528) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond528) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond528) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond528) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond528) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond528) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond528) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond528) CFA_SP SP+0
        CFI (cfiCond528) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond529 Using cfiCommon0
        CFI (cfiCond529) NoFunction
        CFI (cfiCond529) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_5
        CFI (cfiCond529) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond529) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond529) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond529) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond529) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond529) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond529) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond529) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond529) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond529) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond529) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond529) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond529) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond529) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond529) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond529) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond529) CFA_SP SP+0
        CFI (cfiCond529) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond530 Using cfiCommon0
        CFI (cfiCond530) NoFunction
        CFI (cfiCond530) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_6
        CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond530) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond530) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond530) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond530) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond530) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond530) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond530) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond530) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond530) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond530) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond530) CFA_SP SP+0
        CFI (cfiCond530) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond531 Using cfiCommon0
        CFI (cfiCond531) NoFunction
        CFI (cfiCond531) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_2
        CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond531) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond531) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond531) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond531) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond531) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond531) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond531) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond531) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond531) CFA_SP SP+0
        CFI (cfiCond531) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond532 Using cfiCommon0
        CFI (cfiCond532) NoFunction
        CFI (cfiCond532) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_3
        CFI (cfiCond532) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond532) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond532) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond532) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond532) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond532) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond532) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond532) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond532) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond532) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond532) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond532) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond532) CFA_SP SP+0
        CFI (cfiCond532) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond533 Using cfiCommon0
        CFI (cfiCond533) NoFunction
        CFI (cfiCond533) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_0
        CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond533) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond533) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond533) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond533) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond533) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond533) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond533) CFA_SP SP+0
        CFI (cfiCond533) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond534 Using cfiCommon0
        CFI (cfiCond534) NoFunction
        CFI (cfiCond534) Conditional ??CrossCallReturnLabel_248, ??CrossCallReturnLabel_1
        CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond534) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond534) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond534) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond534) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond534) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond534) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond534) CFA_SP SP+0
        CFI (cfiCond534) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond535 Using cfiCommon0
        CFI (cfiCond535) NoFunction
        CFI (cfiCond535) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_37
        CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond535) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond535) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond535) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond535) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond535) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond535) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond535) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond535) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond535) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond535) CFA_SP SP+0
        CFI (cfiCond535) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond536 Using cfiCommon0
        CFI (cfiCond536) NoFunction
        CFI (cfiCond536) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_38
        CFI (cfiCond536) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond536) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond536) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond536) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond536) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond536) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond536) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond536) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond536) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond536) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond536) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond536) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond536) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond536) CFA_SP SP+0
        CFI (cfiCond536) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker537 Using cfiCommon1
        CFI (cfiPicker537) NoFunction
        CFI (cfiPicker537) Picker
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
        INC     DPTR
        INC     R0
        MOV     R1,DPH
        RET
        CFI EndBlock cfiCond516
        CFI EndBlock cfiCond517
        CFI EndBlock cfiCond518
        CFI EndBlock cfiCond519
        CFI EndBlock cfiCond520
        CFI EndBlock cfiCond521
        CFI EndBlock cfiCond522
        CFI EndBlock cfiCond523
        CFI EndBlock cfiCond524
        CFI EndBlock cfiCond525
        CFI EndBlock cfiCond526
        CFI EndBlock cfiCond527
        CFI EndBlock cfiCond528
        CFI EndBlock cfiCond529
        CFI EndBlock cfiCond530
        CFI EndBlock cfiCond531
        CFI EndBlock cfiCond532
        CFI EndBlock cfiCond533
        CFI EndBlock cfiCond534
        CFI EndBlock cfiCond535
        CFI EndBlock cfiCond536
        CFI EndBlock cfiPicker537
// 1593 
// 1594 /*********************************************************************
// 1595  * @fn          ZDP_MgmtBindRsp
// 1596  *
// 1597  * @brief       This builds and send a Mgmt_Bind_rsp message. This
// 1598  *              function sends a unicast message.
// 1599  *
// 1600  * @param       dstAddr - destination address of the message
// 1601  * @param       Status - message status (ZDP_SUCCESS or other)
// 1602  * @param       BindingTableEntries - Total number of entries
// 1603  * @param       StartIndex - Starting index within the reporting list
// 1604  * @param       BindingTableListCount - number of entries included
// 1605  *                                 in this message
// 1606  * @param       BindingTableList - List of Binding Table entries
// 1607  * @param       SecurityEnable - Security Options
// 1608  *
// 1609  * @return      ZStatus_t
// 1610  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1611 ZStatus_t ZDP_MgmtBindRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtBindRsp:
        CFI Block cfiBlock538 Using cfiCommon0
        CFI Function ZDP_MgmtBindRsp
        CODE
// 1612                             byte Status,
// 1613                             byte BindingTableEntries,
// 1614                             byte StartIndex,
// 1615                             byte BindingTableListCount,
// 1616                             apsBindingItem_t *BindingTableList,
// 1617                             byte SecurityEnable )
// 1618 {
        FUNCALL ZDP_MgmtBindRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     ?V0 + 10,R2
        MOV     ?V0 + 11,R3
        MOV     ?V0 + 6,R4
        MOV     ?V0 + 5,R5
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
// 1619   uint8 *buf;
// 1620   uint8 *pBuf;
// 1621   uint8 maxLen; // maxLen is the maximum packet length to allocate enough memory space
// 1622   uint8 len;    // Actual length varies due to different addrMode
// 1623   uint8 x;
// 1624   byte extZdpBindEntrySize = ZDP_BINDINGENTRY_SIZE + 1 + 1; // One more byte for cluserID and DstAddrMode
// 1625   byte shortZdpBindEntrySize = ZDP_BINDINGENTRY_SIZE + 1 + 1 + 2 - 8 - 1; // clusterID + DstAddrMode + shortAddr - ExtAddr - DstEndpoint
// 1626 
// 1627   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1628 
// 1629   // Status + BindingTableEntries + StartIndex + BindingTableListCount.
// 1630   maxLen = 1 + 1 + 1 + 1;
// 1631   maxLen += (BindingTableListCount * extZdpBindEntrySize );  //max length
// 1632   buf = osal_mem_alloc( maxLen + 1 );  // +1 for transaction ID
??CrossCallReturnLabel_32:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     B,#0x15
        MOV     A,?V0 + 4
        MUL     AB
        ADD     A,#0x5
        LCALL   ??Subroutine112_0 & 0xFFFF
// 1633 
// 1634   if ( buf == NULL )
??CrossCallReturnLabel_197:
        JNZ     ??ZDP_MgmtBindRsp_0
// 1635   {
// 1636     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??CrossCallReturnLabel_199 & 0xFFFF
// 1637   }
// 1638 
// 1639   pBuf = buf+1;
??ZDP_MgmtBindRsp_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
// 1640 
// 1641   *pBuf++ = Status;
        MOV     A,?V0 + 6
        MOVX    @DPTR,A
        INC     DPTR
// 1642   *pBuf++ = BindingTableEntries;
        MOV     A,?V0 + 5
        LCALL   ?Subroutine58 & 0xFFFF
// 1643   *pBuf++ = StartIndex;
// 1644   *pBuf++ = BindingTableListCount;
??CrossCallReturnLabel_83:
        MOV     A,?V0 + 4
        LCALL   ??Subroutine122_0 & 0xFFFF
// 1645 
// 1646   // Initial length = Status + BindingTableEntries + StartIndex + BindingTableListCount.
// 1647   // length += ZDP_BINDINGENTRY_SIZE   -- Version 1.0
// 1648   //           extZdpBindEntrySize     -- Version 1.1 extended address mode
// 1649   //           shortZdpBindEntrySize   -- Version 1.1 group address mode
// 1650 
// 1651   len = 1 + 1 + 1 + 1;
??CrossCallReturnLabel_257:
        MOV     ?V0 + 0,#0x4
// 1652   for ( x = 0; x < BindingTableListCount; x++ )
        MOV     ?V0 + 1,#0x0
        SJMP    ??ZDP_MgmtBindRsp_1
// 1653   {
// 1654     pBuf = osal_cpyExtAddr( pBuf, BindingTableList->srcAddr );
// 1655     *pBuf++ = BindingTableList->srcEP;
// 1656 
// 1657     // Cluster ID
// 1658     *pBuf++ = LO_UINT16( BindingTableList->clusterID );
// 1659     *pBuf++ = HI_UINT16( BindingTableList->clusterID );
// 1660 
// 1661     *pBuf++ = BindingTableList->dstAddr.addrMode;
// 1662     if ( BindingTableList->dstAddr.addrMode == Addr64Bit )
// 1663     {
// 1664       len += extZdpBindEntrySize;
// 1665       pBuf = osal_cpyExtAddr( pBuf, BindingTableList->dstAddr.addr.extAddr );
// 1666       *pBuf++ = BindingTableList->dstEP;
// 1667     }
// 1668     else
// 1669     {
// 1670       len += shortZdpBindEntrySize;
??ZDP_MgmtBindRsp_2:
        MOV     A,#0xe
        ADD     A,?V0 + 0
        MOV     ?V0 + 0,A
// 1671       *pBuf++ = LO_UINT16( BindingTableList->dstAddr.addr.shortAddr );
        MOV     A,R6
        ADD     A,#0xb
        LCALL   ?Subroutine19 & 0xFFFF
// 1672       *pBuf++ = HI_UINT16( BindingTableList->dstAddr.addr.shortAddr );
// 1673     }
??CrossCallReturnLabel_11:
        MOV     R3,DPH
// 1674     BindingTableList++;    // Move to next list entry
        MOV     A,R6
        ADD     A,#0x15
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
        INC     ?V0 + 1
??ZDP_MgmtBindRsp_1:
        MOV     A,?V0 + 1
        CLR     C
        SUBB    A,?V0 + 4
        JNC     ??ZDP_MgmtBindRsp_3
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        LCALL   ??sAddrExtCpy?relay
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_69:
        MOV     R3,DPH
        MOV     A,R6
        ADD     A,#0x9
        LCALL   ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_12:
        MOV     R3,DPH
        MOV     A,R6
        ADD     A,#0x13
        MOV     R0,A
        MOV     A,R7
        LCALL   ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_25:
        JNZ     ??ZDP_MgmtBindRsp_2
        MOV     A,#0x15
        ADD     A,?V0 + 0
        MOV     ?V0 + 0,A
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        ADD     A,#0xb
        MOV     R4,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R5,A
        LCALL   ??sAddrExtCpy?relay
        MOV     A,R6
        ADD     A,#0x14
        LCALL   ??Subroutine99_0 & 0xFFFF
// 1675   }
??CrossCallReturnLabel_144:
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_70:
        SJMP    ??CrossCallReturnLabel_11
// 1676 
// 1677   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_Bind_rsp, len, buf );
??ZDP_MgmtBindRsp_3:
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_233:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 8,#0x33
        MOV     ?V0 + 9,#-0x80
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 23)
        MOV     R1,?V0 + 0
        MOV     R4,?V0 + 10
        MOV     R5,?V0 + 11
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_279:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 21)
        LCALL   ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_199:
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 20)
        LJMP    ?Subroutine6 & 0xFFFF
        CFI EndBlock cfiBlock538
// 1678 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine58:
        CFI Block cfiCond539 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_82
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond540 Using cfiCommon0
        CFI (cfiCond540) NoFunction
        CFI (cfiCond540) Conditional ??CrossCallReturnLabel_83
        CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond540) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond540) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond540) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond540) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond540) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond540) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond540) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond540) CFA_SP SP+0
        CFI (cfiCond540) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond541 Using cfiCommon0
        CFI (cfiCond541) NoFunction
        CFI (cfiCond541) Conditional ??CrossCallReturnLabel_84
        CFI (cfiCond541) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond541) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond541) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond541) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond541) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond541) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond541) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond541) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond541) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond541) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond541) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond541) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond541) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond541) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond541) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond541) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond541) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond541) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond541) CFA_SP SP+0
        CFI (cfiCond541) CFA_XSP16 add(XSP16, 27)
        CFI Block cfiPicker542 Using cfiCommon1
        CFI (cfiPicker542) NoFunction
        CFI (cfiPicker542) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        RET
        CFI EndBlock cfiCond539
        CFI EndBlock cfiCond540
        CFI EndBlock cfiCond541
        CFI EndBlock cfiPicker542

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine49:
        CFI Block cfiCond543 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_252
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond544 Using cfiCommon0
        CFI (cfiCond544) NoFunction
        CFI (cfiCond544) Conditional ??CrossCallReturnLabel_253
        CFI (cfiCond544) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond544) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond544) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond544) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond544) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond544) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond544) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond544) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond544) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond544) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond544) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond544) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond544) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond544) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond544) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond544) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond544) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond544) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond544) CFA_SP SP+0
        CFI (cfiCond544) CFA_XSP16 add(XSP16, 27)
        CFI Block cfiPicker545 Using cfiCommon1
        CFI (cfiPicker545) NoFunction
        CFI (cfiPicker545) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 8
        CFI EndBlock cfiCond543
        CFI EndBlock cfiCond544
        CFI EndBlock cfiPicker545
        REQUIRE ??Subroutine122_0
        ; // Fall through to label ??Subroutine122_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine122_0:
        CFI Block cfiCond546 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_254
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond547 Using cfiCommon0
        CFI (cfiCond547) NoFunction
        CFI (cfiCond547) Conditional ??CrossCallReturnLabel_255
        CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond547) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond547) CFA_SP SP+0
        CFI (cfiCond547) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond548 Using cfiCommon0
        CFI (cfiCond548) NoFunction
        CFI (cfiCond548) Conditional ??CrossCallReturnLabel_256
        CFI (cfiCond548) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond548) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond548) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond548) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond548) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond548) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond548) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond548) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond548) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond548) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond548) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond548) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond548) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond548) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond548) CFA_SP SP+0
        CFI (cfiCond548) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond549 Using cfiCommon0
        CFI (cfiCond549) NoFunction
        CFI (cfiCond549) Conditional ??CrossCallReturnLabel_257
        CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond549) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond549) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond549) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond549) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond549) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond549) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond549) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond549) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond549) CFA_SP SP+0
        CFI (cfiCond549) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond550 Using cfiCommon0
        CFI (cfiCond550) NoFunction
        CFI (cfiCond550) Conditional ??CrossCallReturnLabel_258
        CFI (cfiCond550) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond550) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond550) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond550) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond550) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond550) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond550) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond550) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond550) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond550) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond550) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond550) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond550) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond550) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond550) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond550) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond550) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond550) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond550) CFA_SP SP+0
        CFI (cfiCond550) CFA_XSP16 add(XSP16, 27)
        CFI Block cfiCond551 Using cfiCommon0
        CFI (cfiCond551) NoFunction
        CFI (cfiCond551) Conditional ??CrossCallReturnLabel_252
        CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond551) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond551) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond551) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond551) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond551) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond551) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond551) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond551) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond551) CFA_SP SP+0
        CFI (cfiCond551) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiCond552 Using cfiCommon0
        CFI (cfiCond552) NoFunction
        CFI (cfiCond552) Conditional ??CrossCallReturnLabel_253
        CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond552) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond552) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond552) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond552) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond552) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond552) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond552) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond552) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond552) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond552) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond552) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond552) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond552) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond552) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond552) CFA_SP SP+0
        CFI (cfiCond552) CFA_XSP16 add(XSP16, 27)
        CFI Block cfiPicker553 Using cfiCommon1
        CFI (cfiPicker553) NoFunction
        CFI (cfiPicker553) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
        RET
        CFI EndBlock cfiCond546
        CFI EndBlock cfiCond547
        CFI EndBlock cfiCond548
        CFI EndBlock cfiCond549
        CFI EndBlock cfiCond550
        CFI EndBlock cfiCond551
        CFI EndBlock cfiCond552
        CFI EndBlock cfiPicker553

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine47:
        CFI Block cfiCond554 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_69
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond555 Using cfiCommon0
        CFI (cfiCond555) NoFunction
        CFI (cfiCond555) Conditional ??CrossCallReturnLabel_70
        CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond555) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond555) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond555) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond555) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond555) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond555) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond555) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond555) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond555) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond555) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond555) CFA_SP SP+0
        CFI (cfiCond555) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiPicker556 Using cfiCommon1
        CFI (cfiPicker556) NoFunction
        CFI (cfiPicker556) Picker
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R2,DPL
        RET
        CFI EndBlock cfiCond554
        CFI EndBlock cfiCond555
        CFI EndBlock cfiPicker556

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine25:
        CFI Block cfiCond557 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_24
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond558 Using cfiCommon0
        CFI (cfiCond558) NoFunction
        CFI (cfiCond558) Conditional ??CrossCallReturnLabel_25
        CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond558) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond558) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond558) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond558) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond558) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond558) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond558) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond558) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond558) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond558) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond558) CFA_SP SP+0
        CFI (cfiCond558) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiPicker559 Using cfiCommon1
        CFI (cfiPicker559) NoFunction
        CFI (cfiPicker559) Picker
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_111:
        MOVX    A,@DPTR
        XRL     A,#0x3
        RET
        CFI EndBlock cfiCond557
        CFI EndBlock cfiCond558
        CFI EndBlock cfiPicker559

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine19:
        CFI Block cfiCond560 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_11
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond561 Using cfiCommon0
        CFI (cfiCond561) NoFunction
        CFI (cfiCond561) Conditional ??CrossCallReturnLabel_12
        CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond561) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond561) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond561) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond561) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond561) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond561) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond561) CFA_SP SP+0
        CFI (cfiCond561) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiPicker562 Using cfiCommon1
        CFI (cfiPicker562) NoFunction
        CFI (cfiPicker562) Picker
        MOV     R0,A
        MOV     A,R7
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_112:
        INC     DPTR
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_115:
        RET
        CFI EndBlock cfiCond560
        CFI EndBlock cfiCond561
        CFI EndBlock cfiPicker562

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine85:
        CFI Block cfiCond563 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_116, ??CrossCallReturnLabel_53
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond564 Using cfiCommon0
        CFI (cfiCond564) NoFunction
        CFI (cfiCond564) Conditional ??CrossCallReturnLabel_116, ??CrossCallReturnLabel_54
        CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond564) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond564) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond564) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond564) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond564) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond564) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond564) CFA_SP SP+0
        CFI (cfiCond564) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond565 Using cfiCommon0
        CFI (cfiCond565) NoFunction
        CFI (cfiCond565) Conditional ??CrossCallReturnLabel_115, ??CrossCallReturnLabel_11
        CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond565) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond565) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond565) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond565) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond565) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond565) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond565) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond565) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond565) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond565) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond565) CFA_SP SP+0
        CFI (cfiCond565) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond566 Using cfiCommon0
        CFI (cfiCond566) NoFunction
        CFI (cfiCond566) Conditional ??CrossCallReturnLabel_115, ??CrossCallReturnLabel_12
        CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond566) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond566) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond566) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond566) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond566) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond566) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond566) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond566) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond566) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond566) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond566) CFA_SP SP+0
        CFI (cfiCond566) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiPicker567 Using cfiCommon1
        CFI (cfiPicker567) NoFunction
        CFI (cfiPicker567) Picker
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_120:
        RET
        CFI EndBlock cfiCond563
        CFI EndBlock cfiCond564
        CFI EndBlock cfiCond565
        CFI EndBlock cfiCond566
        CFI EndBlock cfiPicker567

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine89:
        CFI Block cfiCond568 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_116, ??CrossCallReturnLabel_53
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond569 Using cfiCommon0
        CFI (cfiCond569) NoFunction
        CFI (cfiCond569) Conditional ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_116, ??CrossCallReturnLabel_54
        CFI (cfiCond569) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond569) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond569) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond569) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond569) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond569) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond569) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond569) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond569) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond569) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond569) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond569) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond569) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond569) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond569) CFA_SP SP+0
        CFI (cfiCond569) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond570 Using cfiCommon0
        CFI (cfiCond570) NoFunction
        CFI (cfiCond570) Conditional ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_115, ??CrossCallReturnLabel_11
        CFI (cfiCond570) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond570) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond570) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond570) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond570) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond570) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond570) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond570) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond570) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond570) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond570) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond570) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond570) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond570) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond570) CFA_SP SP+0
        CFI (cfiCond570) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond571 Using cfiCommon0
        CFI (cfiCond571) NoFunction
        CFI (cfiCond571) Conditional ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_115, ??CrossCallReturnLabel_12
        CFI (cfiCond571) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond571) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond571) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond571) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond571) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond571) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond571) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond571) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond571) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond571) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond571) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond571) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond571) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond571) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond571) CFA_SP SP+0
        CFI (cfiCond571) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond572 Using cfiCommon0
        CFI (cfiCond572) NoFunction
        CFI (cfiCond572) Conditional ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_24
        CFI (cfiCond572) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond572) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond572) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond572) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond572) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond572) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond572) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond572) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond572) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond572) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond572) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond572) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond572) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond572) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond572) CFA_SP SP+0
        CFI (cfiCond572) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond573 Using cfiCommon0
        CFI (cfiCond573) NoFunction
        CFI (cfiCond573) Conditional ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_25
        CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond573) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond573) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond573) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond573) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond573) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond573) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond573) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond573) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond573) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond573) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond573) CFA_SP SP+0
        CFI (cfiCond573) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond574 Using cfiCommon0
        CFI (cfiCond574) NoFunction
        CFI (cfiCond574) Conditional ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_112, ??CrossCallReturnLabel_11
        CFI (cfiCond574) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond574) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond574) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond574) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond574) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond574) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond574) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond574) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond574) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond574) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond574) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond574) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond574) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond574) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond574) CFA_SP SP+0
        CFI (cfiCond574) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond575 Using cfiCommon0
        CFI (cfiCond575) NoFunction
        CFI (cfiCond575) Conditional ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_112, ??CrossCallReturnLabel_12
        CFI (cfiCond575) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond575) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond575) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond575) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond575) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond575) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond575) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond575) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond575) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond575) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond575) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond575) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond575) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond575) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond575) CFA_SP SP+0
        CFI (cfiCond575) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiPicker576 Using cfiCommon1
        CFI (cfiPicker576) NoFunction
        CFI (cfiPicker576) Picker
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        INC     DPTR
        INC     R2
        RET
        CFI EndBlock cfiCond568
        CFI EndBlock cfiCond569
        CFI EndBlock cfiCond570
        CFI EndBlock cfiCond571
        CFI EndBlock cfiCond572
        CFI EndBlock cfiCond573
        CFI EndBlock cfiCond574
        CFI EndBlock cfiCond575
        CFI EndBlock cfiPicker576

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine79:
        CFI Block cfiCond577 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_24
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond578 Using cfiCommon0
        CFI (cfiCond578) NoFunction
        CFI (cfiCond578) Conditional ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_25
        CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond578) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond578) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond578) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond578) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond578) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond578) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond578) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond578) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond578) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond578) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond578) CFA_SP SP+0
        CFI (cfiCond578) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond579 Using cfiCommon0
        CFI (cfiCond579) NoFunction
        CFI (cfiCond579) Conditional ??CrossCallReturnLabel_112, ??CrossCallReturnLabel_11
        CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond579) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond579) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond579) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond579) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond579) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond579) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond579) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond579) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond579) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond579) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond579) CFA_SP SP+0
        CFI (cfiCond579) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond580 Using cfiCommon0
        CFI (cfiCond580) NoFunction
        CFI (cfiCond580) Conditional ??CrossCallReturnLabel_112, ??CrossCallReturnLabel_12
        CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond580) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond580) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond580) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond580) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond580) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond580) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond580) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond580) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond580) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond580) CFA_SP SP+0
        CFI (cfiCond580) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiPicker581 Using cfiCommon1
        CFI (cfiPicker581) NoFunction
        CFI (cfiPicker581) Picker
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_123:
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_119:
        MOV     R3,DPH
        MOV     DPL,R0
        MOV     DPH,R1
        RET
        CFI EndBlock cfiCond577
        CFI EndBlock cfiCond578
        CFI EndBlock cfiCond579
        CFI EndBlock cfiCond580
        CFI EndBlock cfiPicker581

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine90:
        CFI Block cfiCond582 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_121
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond583 Using cfiCommon0
        CFI (cfiCond583) NoFunction
        CFI (cfiCond583) Conditional ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_24
        CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond583) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond583) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond583) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond583) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond583) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond583) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond583) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond583) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond583) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond583) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond583) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond583) CFA_SP SP+0
        CFI (cfiCond583) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond584 Using cfiCommon0
        CFI (cfiCond584) NoFunction
        CFI (cfiCond584) Conditional ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_111, ??CrossCallReturnLabel_25
        CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond584) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond584) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond584) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond584) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond584) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond584) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond584) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond584) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond584) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond584) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond584) CFA_SP SP+0
        CFI (cfiCond584) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond585 Using cfiCommon0
        CFI (cfiCond585) NoFunction
        CFI (cfiCond585) Conditional ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_112, ??CrossCallReturnLabel_11
        CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond585) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond585) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond585) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond585) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond585) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond585) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond585) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond585) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond585) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond585) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond585) CFA_SP SP+0
        CFI (cfiCond585) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond586 Using cfiCommon0
        CFI (cfiCond586) NoFunction
        CFI (cfiCond586) Conditional ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_112, ??CrossCallReturnLabel_12
        CFI (cfiCond586) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond586) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond586) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond586) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond586) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond586) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond586) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond586) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond586) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond586) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond586) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond586) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond586) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond586) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond586) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond586) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond586) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond586) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond586) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond586) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond586) CFA_SP SP+0
        CFI (cfiCond586) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond587 Using cfiCommon0
        CFI (cfiCond587) NoFunction
        CFI (cfiCond587) Conditional ??CrossCallReturnLabel_122
        CFI (cfiCond587) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond587) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond587) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond587) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond587) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond587) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond587) CFA_SP SP+0
        CFI (cfiCond587) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiPicker588 Using cfiCommon1
        CFI (cfiPicker588) NoFunction
        CFI (cfiPicker588) Picker
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        RET
        CFI EndBlock cfiCond582
        CFI EndBlock cfiCond583
        CFI EndBlock cfiCond584
        CFI EndBlock cfiCond585
        CFI EndBlock cfiCond586
        CFI EndBlock cfiCond587
        CFI EndBlock cfiPicker588
// 1679 
// 1680 /*********************************************************************
// 1681  * @fn          ZDP_MgmtNwkUpdateNotify
// 1682  *
// 1683  * @brief       This builds and send a Mgmt_NWK_Update_notify message. This
// 1684  *              function sends a unicast message.
// 1685  *
// 1686  * @param       dstAddr - destination address of the message
// 1687  * @param       status - message status (ZDP_SUCCESS or other)
// 1688  * @param       scannedChannels - List of channels scanned by the request
// 1689  * @param       totalTransmissions - Total transmissions
// 1690  * @param       transmissionFailures - Sum of transmission failures
// 1691  * @param       listCount - Number of records contained in the energyValues list
// 1692  * @param       energyValues - List of descriptors, one for each of ListCount,
// 1693  *                             of the enegry detect descriptors
// 1694  * @param       txOptions - Transmit options
// 1695  * @param       securityEnable - Security options
// 1696  *
// 1697  * @return      afStatus_t
// 1698  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1699 afStatus_t ZDP_MgmtNwkUpdateNotify( uint8 TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtNwkUpdateNotify:
        CFI Block cfiBlock589 Using cfiCommon0
        CFI Function ZDP_MgmtNwkUpdateNotify
        CODE
// 1700                                     uint8 status, uint32 scannedChannels,
// 1701                                     uint16 totalTransmissions, uint16 transmissionFailures,
// 1702                                     uint8 listCount, uint8 *energyValues, uint8 txOptions,
// 1703                                     uint8 securityEnable )
// 1704 {
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 3
        MOV     A,#-0x3
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     ?V0 + 13,R4
        MOV     ?V0 + 8,R5
        MOV     A,#0x1b
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     A,#0x1f
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_33:
        MOV     A,#0x21
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine114_0 & 0xFFFF
??CrossCallReturnLabel_210:
        MOV     A,#0x23
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 14,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 15,A
        MOV     A,#0x25
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 12,A
// 1705   uint8 *buf;
// 1706   uint8 *pBuf;
// 1707   uint8 len;
// 1708 
// 1709   (void)securityEnable;  // Intentionally unreferenced parameter
// 1710 
// 1711   // Status + ScannedChannels + totalTransmissions + transmissionFailures + ListCount + energyValues
// 1712   len = 1 + 4 + 2 + 2 + 1 + listCount;
        MOV     A,#0xa
        ADD     A,?V0 + 8
        MOV     ?V0 + 9,A
// 1713 
// 1714   buf = osal_mem_alloc( len+1 ); // +1 for transaction ID
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine62 & 0xFFFF
// 1715   if ( buf == NULL )
??CrossCallReturnLabel_196:
        JNZ     ??ZDP_MgmtNwkUpdateNotify_0
// 1716   {
// 1717     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        SJMP    ??ZDP_MgmtNwkUpdateNotify_1
// 1718   }
// 1719 
// 1720   pBuf = buf+1;
??ZDP_MgmtNwkUpdateNotify_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
// 1721 
// 1722   *pBuf++ = status;
        MOV     A,?V0 + 13
        LCALL   ??Subroutine122_0 & 0xFFFF
// 1723 
// 1724   pBuf = osal_buffer_uint32( pBuf, scannedChannels );
??CrossCallReturnLabel_258:
        ; Setup parameters for call to function osal_buffer_uint32
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_FOUR
        CFI CFA_XSP16 add(XSP16, 31)
        LCALL   ??osal_buffer_uint32?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 27)
// 1725 
// 1726   *pBuf++ = LO_UINT16( totalTransmissions );
        MOV     A,R6
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        INC     DPTR
// 1727   *pBuf++ = HI_UINT16( totalTransmissions );
        MOV     A,R7
        LCALL   ?Subroutine58 & 0xFFFF
// 1728 
// 1729   *pBuf++ = LO_UINT16( transmissionFailures );
// 1730   *pBuf++ = HI_UINT16( transmissionFailures );
??CrossCallReturnLabel_84:
        MOV     A,?V0 + 1
        LCALL   ?Subroutine49 & 0xFFFF
// 1731 
// 1732   *pBuf++ = listCount;
// 1733 
// 1734   if ( listCount > 0 )
??CrossCallReturnLabel_253:
        JZ      ??ZDP_MgmtNwkUpdateNotify_2
// 1735     osal_memcpy( pBuf, energyValues, listCount );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0 + 4,?V0 + 14
        MOV     ?V0 + 5,?V0 + 15
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
        CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0 + 0,?V0 + 8
        MOV     R4,?V0 + 0
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_157:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 27)
// 1736 
// 1737   FillAndSendBufferTxOptions( &TransSeq, dstAddr, Mgmt_NWK_Update_notify, len, buf, txOptions );
??ZDP_MgmtNwkUpdateNotify_2:
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_234:
        MOV     A,?V0 + 12
        MOV     DPTR,#ZDP_TxOptions
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0 + 0,#0x38
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 29)
        MOV     R1,?V0 + 9
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_67:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_280:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R1
        MOV     R6,A
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_104:
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
        MOV     A,R6
        MOV     R1,A
??ZDP_MgmtNwkUpdateNotify_1:
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 24)
        LJMP    ?Subroutine5 & 0xFFFF
        CFI EndBlock cfiBlock589
// 1738 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine72:
        CFI Block cfiCond590 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_103
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond591 Using cfiCommon0
        CFI (cfiCond591) NoFunction
        CFI (cfiCond591) Conditional ??CrossCallReturnLabel_104
        CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond591) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond591) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond591) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond591) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond591) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond591) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond591) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond591) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond591) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond591) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond591) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond591) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond591) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond591) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond591) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond591) CFA_SP SP+0
        CFI (cfiCond591) CFA_XSP16 add(XSP16, 27)
        CFI Block cfiPicker592 Using cfiCommon1
        CFI (cfiPicker592) NoFunction
        CFI (cfiPicker592) Picker
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_202:
        RET
        CFI EndBlock cfiCond590
        CFI EndBlock cfiCond591
        CFI EndBlock cfiPicker592

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine86:
        CFI Block cfiCond593 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_198
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond594 Using cfiCommon0
        CFI (cfiCond594) NoFunction
        CFI (cfiCond594) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_199
        CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond594) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond594) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond594) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond594) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond594) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond594) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond594) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond594) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond594) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond594) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond594) CFA_SP SP+0
        CFI (cfiCond594) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond595 Using cfiCommon0
        CFI (cfiCond595) NoFunction
        CFI (cfiCond595) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_200
        CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond595) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond595) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond595) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond595) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond595) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond595) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond595) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond595) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond595) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond595) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond595) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond595) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond595) CFA_SP SP+0
        CFI (cfiCond595) CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond596 Using cfiCommon0
        CFI (cfiCond596) NoFunction
        CFI (cfiCond596) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_103
        CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond596) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond596) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond596) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond596) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond596) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond596) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond596) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond596) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond596) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond596) CFA_SP SP+0
        CFI (cfiCond596) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond597 Using cfiCommon0
        CFI (cfiCond597) NoFunction
        CFI (cfiCond597) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_104
        CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond597) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond597) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond597) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond597) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond597) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond597) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond597) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond597) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond597) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond597) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond597) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond597) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond597) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond597) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond597) CFA_SP SP+0
        CFI (cfiCond597) CFA_XSP16 add(XSP16, 27)
        CFI Block cfiPicker598 Using cfiCommon1
        CFI (cfiPicker598) NoFunction
        CFI (cfiPicker598) Picker
        LCALL   ??osal_mem_free?relay
        MOV     DPTR,#ZDP_TmpBuf
        MOV     A,#(ZDP_Buf + 1) & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#((ZDP_Buf + 1) >> 8) & 0xff
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond593
        CFI EndBlock cfiCond594
        CFI EndBlock cfiCond595
        CFI EndBlock cfiCond596
        CFI EndBlock cfiCond597
        CFI EndBlock cfiPicker598

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine69:
        CFI Block cfiCond599 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_259
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond600 Using cfiCommon0
        CFI (cfiCond600) NoFunction
        CFI (cfiCond600) Conditional ??CrossCallReturnLabel_260
        CFI (cfiCond600) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond600) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond600) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond600) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond600) CFA_SP SP+0
        CFI (cfiCond600) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond601 Using cfiCommon0
        CFI (cfiCond601) NoFunction
        CFI (cfiCond601) Conditional ??CrossCallReturnLabel_260
        CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond601) CFA_SP SP+0
        CFI (cfiCond601) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond602 Using cfiCommon0
        CFI (cfiCond602) NoFunction
        CFI (cfiCond602) Conditional ??CrossCallReturnLabel_261
        CFI (cfiCond602) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond602) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond602) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond602) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond602) CFA_SP SP+0
        CFI (cfiCond602) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiPicker603 Using cfiCommon1
        CFI (cfiPicker603) NoFunction
        CFI (cfiPicker603) Picker
        MOV     R4,DPL
        MOV     R5,DPH
        CFI EndBlock cfiCond599
        CFI EndBlock cfiCond600
        CFI EndBlock cfiCond601
        CFI EndBlock cfiCond602
        CFI EndBlock cfiPicker603
        REQUIRE ??Subroutine123_0
        ; // Fall through to label ??Subroutine123_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine123_0:
        CFI Block cfiCond604 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_262
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond605 Using cfiCommon0
        CFI (cfiCond605) NoFunction
        CFI (cfiCond605) Conditional ??CrossCallReturnLabel_263
        CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond605) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond605) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond605) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond605) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond605) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond605) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond605) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond605) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond605) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond605) CFA_SP SP+0
        CFI (cfiCond605) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond606 Using cfiCommon0
        CFI (cfiCond606) NoFunction
        CFI (cfiCond606) Conditional ??CrossCallReturnLabel_264
        CFI (cfiCond606) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond606) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond606) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond606) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond606) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond606) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond606) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond606) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond606) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond606) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond606) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond606) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond606) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond606) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond606) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond606) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond606) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond606) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond606) CFA_SP SP+0
        CFI (cfiCond606) CFA_XSP16 add(XSP16, 26)
        CFI Block cfiCond607 Using cfiCommon0
        CFI (cfiCond607) NoFunction
        CFI (cfiCond607) Conditional ??CrossCallReturnLabel_265
        CFI (cfiCond607) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond607) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond607) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond607) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond607) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond607) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond607) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond607) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond607) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond607) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond607) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond607) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond607) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond607) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond607) CFA_SP SP+0
        CFI (cfiCond607) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond608 Using cfiCommon0
        CFI (cfiCond608) NoFunction
        CFI (cfiCond608) Conditional ??CrossCallReturnLabel_266
        CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond608) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond608) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond608) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond608) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond608) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond608) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond608) CFA_SP SP+0
        CFI (cfiCond608) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond609 Using cfiCommon0
        CFI (cfiCond609) NoFunction
        CFI (cfiCond609) Conditional ??CrossCallReturnLabel_267
        CFI (cfiCond609) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond609) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond609) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond609) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond609) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond609) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond609) CFA_SP SP+0
        CFI (cfiCond609) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond610 Using cfiCommon0
        CFI (cfiCond610) NoFunction
        CFI (cfiCond610) Conditional ??CrossCallReturnLabel_267
        CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond610) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond610) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond610) CFA_SP SP+0
        CFI (cfiCond610) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond611 Using cfiCommon0
        CFI (cfiCond611) NoFunction
        CFI (cfiCond611) Conditional ??CrossCallReturnLabel_268
        CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond611) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond611) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond611) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond611) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond611) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond611) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond611) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond611) CFA_SP SP+0
        CFI (cfiCond611) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond612 Using cfiCommon0
        CFI (cfiCond612) NoFunction
        CFI (cfiCond612) Conditional ??CrossCallReturnLabel_259
        CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond612) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond612) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond612) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond612) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond612) CFA_SP SP+0
        CFI (cfiCond612) CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond613 Using cfiCommon0
        CFI (cfiCond613) NoFunction
        CFI (cfiCond613) Conditional ??CrossCallReturnLabel_260
        CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond613) CFA_SP SP+0
        CFI (cfiCond613) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond614 Using cfiCommon0
        CFI (cfiCond614) NoFunction
        CFI (cfiCond614) Conditional ??CrossCallReturnLabel_260
        CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond614) CFA_SP SP+0
        CFI (cfiCond614) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond615 Using cfiCommon0
        CFI (cfiCond615) NoFunction
        CFI (cfiCond615) Conditional ??CrossCallReturnLabel_261
        CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond615) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond615) CFA_SP SP+0
        CFI (cfiCond615) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiPicker616 Using cfiCommon1
        CFI (cfiPicker616) NoFunction
        CFI (cfiPicker616) Picker
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
        CFI EndBlock cfiCond604
        CFI EndBlock cfiCond605
        CFI EndBlock cfiCond606
        CFI EndBlock cfiCond607
        CFI EndBlock cfiCond608
        CFI EndBlock cfiCond609
        CFI EndBlock cfiCond610
        CFI EndBlock cfiCond611
        CFI EndBlock cfiCond612
        CFI EndBlock cfiCond613
        CFI EndBlock cfiCond614
        CFI EndBlock cfiCond615
        CFI EndBlock cfiPicker616
        REQUIRE ??Subroutine124_0
        ; // Fall through to label ??Subroutine124_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine124_0:
        CFI Block cfiCond617 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_269
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond618 Using cfiCommon0
        CFI (cfiCond618) NoFunction
        CFI (cfiCond618) Conditional ??CrossCallReturnLabel_270
        CFI (cfiCond618) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond618) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond618) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond618) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond618) CFA_SP SP+0
        CFI (cfiCond618) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond619 Using cfiCommon0
        CFI (cfiCond619) NoFunction
        CFI (cfiCond619) Conditional ??CrossCallReturnLabel_270
        CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond619) CFA_SP SP+0
        CFI (cfiCond619) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond620 Using cfiCommon0
        CFI (cfiCond620) NoFunction
        CFI (cfiCond620) Conditional ??CrossCallReturnLabel_270
        CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond620) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond620) CFA_SP SP+0
        CFI (cfiCond620) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond621 Using cfiCommon0
        CFI (cfiCond621) NoFunction
        CFI (cfiCond621) Conditional ??CrossCallReturnLabel_270
        CFI (cfiCond621) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond621) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond621) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond621) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond621) CFA_SP SP+0
        CFI (cfiCond621) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond622 Using cfiCommon0
        CFI (cfiCond622) NoFunction
        CFI (cfiCond622) Conditional ??CrossCallReturnLabel_270
        CFI (cfiCond622) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond622) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond622) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond622) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond622) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond622) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond622) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond622) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond622) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond622) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond622) CFA_SP SP+0
        CFI (cfiCond622) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond623 Using cfiCommon0
        CFI (cfiCond623) NoFunction
        CFI (cfiCond623) Conditional ??CrossCallReturnLabel_271
        CFI (cfiCond623) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond623) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond623) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond623) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond623) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond623) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond623) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond623) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond623) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond623) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond623) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond623) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond623) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond623) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond623) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond623) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond623) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond623) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond623) CFA_SP SP+0
        CFI (cfiCond623) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond624 Using cfiCommon0
        CFI (cfiCond624) NoFunction
        CFI (cfiCond624) Conditional ??CrossCallReturnLabel_272
        CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond624) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond624) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond624) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond624) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond624) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond624) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond624) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond624) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond624) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond624) CFA_SP SP+0
        CFI (cfiCond624) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond625 Using cfiCommon0
        CFI (cfiCond625) NoFunction
        CFI (cfiCond625) Conditional ??CrossCallReturnLabel_273
        CFI (cfiCond625) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond625) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond625) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond625) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond625) CFA_SP SP+0
        CFI (cfiCond625) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond626 Using cfiCommon0
        CFI (cfiCond626) NoFunction
        CFI (cfiCond626) Conditional ??CrossCallReturnLabel_274
        CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond626) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond626) CFA_SP SP+0
        CFI (cfiCond626) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond627 Using cfiCommon0
        CFI (cfiCond627) NoFunction
        CFI (cfiCond627) Conditional ??CrossCallReturnLabel_275
        CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond627) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond627) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond627) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond627) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond627) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond627) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond627) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond627) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond627) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond627) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond627) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond627) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond627) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond627) CFA_SP SP+0
        CFI (cfiCond627) CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond628 Using cfiCommon0
        CFI (cfiCond628) NoFunction
        CFI (cfiCond628) Conditional ??CrossCallReturnLabel_276
        CFI (cfiCond628) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond628) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond628) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond628) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond628) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond628) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond628) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond628) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond628) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond628) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond628) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond628) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond628) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond628) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond628) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond628) CFA_SP SP+0
        CFI (cfiCond628) CFA_XSP16 add(XSP16, 24)
        CFI Block cfiCond629 Using cfiCommon0
        CFI (cfiCond629) NoFunction
        CFI (cfiCond629) Conditional ??CrossCallReturnLabel_277
        CFI (cfiCond629) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond629) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond629) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond629) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond629) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond629) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond629) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond629) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond629) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond629) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond629) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond629) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond629) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond629) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond629) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond629) CFA_SP SP+0
        CFI (cfiCond629) CFA_XSP16 add(XSP16, 24)
        CFI Block cfiCond630 Using cfiCommon0
        CFI (cfiCond630) NoFunction
        CFI (cfiCond630) Conditional ??CrossCallReturnLabel_278
        CFI (cfiCond630) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond630) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond630) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond630) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond630) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond630) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond630) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond630) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond630) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond630) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond630) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond630) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond630) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond630) CFA_SP SP+0
        CFI (cfiCond630) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond631 Using cfiCommon0
        CFI (cfiCond631) NoFunction
        CFI (cfiCond631) Conditional ??CrossCallReturnLabel_279
        CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond631) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond631) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond631) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond631) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond631) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond631) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond631) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond631) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond631) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond631) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond631) CFA_SP SP+0
        CFI (cfiCond631) CFA_XSP16 add(XSP16, 23)
        CFI Block cfiCond632 Using cfiCommon0
        CFI (cfiCond632) NoFunction
        CFI (cfiCond632) Conditional ??CrossCallReturnLabel_280
        CFI (cfiCond632) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond632) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond632) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond632) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond632) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond632) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond632) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond632) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond632) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond632) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond632) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond632) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond632) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond632) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond632) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond632) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond632) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond632) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond632) CFA_SP SP+0
        CFI (cfiCond632) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond633 Using cfiCommon0
        CFI (cfiCond633) NoFunction
        CFI (cfiCond633) Conditional ??CrossCallReturnLabel_262
        CFI (cfiCond633) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond633) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond633) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond633) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond633) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond633) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond633) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond633) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond633) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond633) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond633) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond633) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond633) CFA_SP SP+0
        CFI (cfiCond633) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond634 Using cfiCommon0
        CFI (cfiCond634) NoFunction
        CFI (cfiCond634) Conditional ??CrossCallReturnLabel_263
        CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond634) V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond634) V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond634) V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond634) V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond634) V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond634) V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond634) V8 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond634) V9 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond634) V10 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond634) CFA_SP SP+0
        CFI (cfiCond634) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond635 Using cfiCommon0
        CFI (cfiCond635) NoFunction
        CFI (cfiCond635) Conditional ??CrossCallReturnLabel_264
        CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond635) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond635) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond635) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond635) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond635) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond635) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond635) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond635) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond635) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond635) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond635) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond635) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond635) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond635) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond635) CFA_SP SP+0
        CFI (cfiCond635) CFA_XSP16 add(XSP16, 26)
        CFI Block cfiCond636 Using cfiCommon0
        CFI (cfiCond636) NoFunction
        CFI (cfiCond636) Conditional ??CrossCallReturnLabel_265
        CFI (cfiCond636) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond636) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond636) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond636) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond636) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond636) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond636) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond636) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond636) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond636) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond636) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond636) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond636) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond636) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond636) CFA_SP SP+0
        CFI (cfiCond636) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond637 Using cfiCommon0
        CFI (cfiCond637) NoFunction
        CFI (cfiCond637) Conditional ??CrossCallReturnLabel_266
        CFI (cfiCond637) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond637) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond637) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond637) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond637) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond637) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond637) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond637) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond637) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond637) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond637) CFA_SP SP+0
        CFI (cfiCond637) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond638 Using cfiCommon0
        CFI (cfiCond638) NoFunction
        CFI (cfiCond638) Conditional ??CrossCallReturnLabel_267
        CFI (cfiCond638) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond638) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond638) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond638) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond638) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond638) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond638) CFA_SP SP+0
        CFI (cfiCond638) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond639 Using cfiCommon0
        CFI (cfiCond639) NoFunction
        CFI (cfiCond639) Conditional ??CrossCallReturnLabel_267
        CFI (cfiCond639) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond639) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond639) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond639) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond639) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond639) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond639) CFA_SP SP+0
        CFI (cfiCond639) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond640 Using cfiCommon0
        CFI (cfiCond640) NoFunction
        CFI (cfiCond640) Conditional ??CrossCallReturnLabel_268
        CFI (cfiCond640) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond640) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond640) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond640) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond640) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond640) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond640) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond640) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond640) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond640) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond640) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond640) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond640) CFA_SP SP+0
        CFI (cfiCond640) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond641 Using cfiCommon0
        CFI (cfiCond641) NoFunction
        CFI (cfiCond641) Conditional ??CrossCallReturnLabel_259
        CFI (cfiCond641) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond641) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond641) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond641) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond641) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond641) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond641) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond641) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond641) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond641) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond641) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond641) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond641) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond641) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond641) CFA_SP SP+0
        CFI (cfiCond641) CFA_XSP16 add(XSP16, 25)
        CFI Block cfiCond642 Using cfiCommon0
        CFI (cfiCond642) NoFunction
        CFI (cfiCond642) Conditional ??CrossCallReturnLabel_260
        CFI (cfiCond642) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond642) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond642) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond642) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond642) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond642) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond642) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond642) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond642) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond642) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond642) CFA_SP SP+0
        CFI (cfiCond642) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond643 Using cfiCommon0
        CFI (cfiCond643) NoFunction
        CFI (cfiCond643) Conditional ??CrossCallReturnLabel_260
        CFI (cfiCond643) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond643) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond643) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond643) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond643) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond643) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond643) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond643) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond643) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond643) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond643) CFA_SP SP+0
        CFI (cfiCond643) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiCond644 Using cfiCommon0
        CFI (cfiCond644) NoFunction
        CFI (cfiCond644) Conditional ??CrossCallReturnLabel_261
        CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond644) CFA_SP SP+0
        CFI (cfiCond644) CFA_XSP16 add(XSP16, 21)
        CFI Block cfiPicker645 Using cfiCommon1
        CFI (cfiPicker645) NoFunction
        CFI (cfiPicker645) Picker
        LCALL   ??fillAndSend?relay
        MOV     A,#0x2
        RET
        CFI EndBlock cfiCond617
        CFI EndBlock cfiCond618
        CFI EndBlock cfiCond619
        CFI EndBlock cfiCond620
        CFI EndBlock cfiCond621
        CFI EndBlock cfiCond622
        CFI EndBlock cfiCond623
        CFI EndBlock cfiCond624
        CFI EndBlock cfiCond625
        CFI EndBlock cfiCond626
        CFI EndBlock cfiCond627
        CFI EndBlock cfiCond628
        CFI EndBlock cfiCond629
        CFI EndBlock cfiCond630
        CFI EndBlock cfiCond631
        CFI EndBlock cfiCond632
        CFI EndBlock cfiCond633
        CFI EndBlock cfiCond634
        CFI EndBlock cfiCond635
        CFI EndBlock cfiCond636
        CFI EndBlock cfiCond637
        CFI EndBlock cfiCond638
        CFI EndBlock cfiCond639
        CFI EndBlock cfiCond640
        CFI EndBlock cfiCond641
        CFI EndBlock cfiCond642
        CFI EndBlock cfiCond643
        CFI EndBlock cfiCond644
        CFI EndBlock cfiPicker645

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine46:
        CFI Block cfiCond646 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_65
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond647 Using cfiCommon0
        CFI (cfiCond647) NoFunction
        CFI (cfiCond647) Conditional ??CrossCallReturnLabel_66
        CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond647) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond647) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond647) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond647) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond647) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond647) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond647) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond647) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond647) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond647) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond647) CFA_SP SP+0
        CFI (cfiCond647) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond648 Using cfiCommon0
        CFI (cfiCond648) NoFunction
        CFI (cfiCond648) Conditional ??CrossCallReturnLabel_67
        CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond648) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond648) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond648) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond648) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond648) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond648) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond648) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond648) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond648) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond648) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond648) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond648) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond648) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond648) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond648) CFA_SP SP+0
        CFI (cfiCond648) CFA_XSP16 add(XSP16, 29)
        CFI Block cfiCond649 Using cfiCommon0
        CFI (cfiCond649) NoFunction
        CFI (cfiCond649) Conditional ??CrossCallReturnLabel_68
        CFI (cfiCond649) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond649) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond649) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond649) CFA_SP SP+0
        CFI (cfiCond649) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker650 Using cfiCommon1
        CFI (cfiPicker650) NoFunction
        CFI (cfiPicker650) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        RET
        CFI EndBlock cfiCond646
        CFI EndBlock cfiCond647
        CFI EndBlock cfiCond648
        CFI EndBlock cfiCond649
        CFI EndBlock cfiPicker650
// 1739 
// 1740 /*********************************************************************
// 1741  * Functions to register for ZDO Over-the-air messages
// 1742  */
// 1743 
// 1744 /*********************************************************************
// 1745  * @fn          ZDO_RegisterForZDOMsg
// 1746  *
// 1747  * @brief       Call this function to register of an incoming over
// 1748  *              the air ZDO message - probably a response message
// 1749  *              but requests can also be received.
// 1750  *              Messages are delivered to the task with ZDO_CB_MSG
// 1751  *              as the message ID.
// 1752  *
// 1753  * @param       taskID - Where you would like the message delivered
// 1754  * @param       clusterID - What message?
// 1755  *
// 1756  * @return      ZSuccess - successful, ZMemError if not
// 1757  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1758 ZStatus_t ZDO_RegisterForZDOMsg( uint8 taskID, uint16 clusterID )
ZDO_RegisterForZDOMsg:
        CFI Block cfiBlock651 Using cfiCommon0
        CFI Function ZDO_RegisterForZDOMsg
        CODE
// 1759 {
        FUNCALL ZDO_RegisterForZDOMsg, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     ?V0 + 2,R1
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 1760   ZDO_MsgCB_t *pList;
// 1761   ZDO_MsgCB_t *pLast;
// 1762   ZDO_MsgCB_t *pNew;
// 1763 
// 1764   // Look for duplicate
// 1765   pList = pLast = zdoMsgCBs;
        MOV     DPTR,#zdoMsgCBs
        LCALL   ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_34:
        MOV     A,R6
        MOV     R0,A
        MOV     A,R7
        SJMP    ??ZDO_RegisterForZDOMsg_0
// 1766   while ( pList )
// 1767   {
// 1768     if ( pList->taskID == taskID && pList->clusterID == clusterID )
// 1769       return ( ZSuccess );
// 1770     pLast = pList;
??ZDO_RegisterForZDOMsg_1:
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
// 1771     pList = (ZDO_MsgCB_t *)pList->next;
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
??ZDO_RegisterForZDOMsg_0:
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??ZDO_RegisterForZDOMsg_2
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 2
        JNZ     ??ZDO_RegisterForZDOMsg_1
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 0
        JNZ     ??ZDO_RegisterForZDOMsg_3
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 1
??ZDO_RegisterForZDOMsg_3:
        JNZ     ??ZDO_RegisterForZDOMsg_1
??ZDO_RegisterForZDOMsg_4:
        MOV     R1,#0x0
        SJMP    ??ZDO_RegisterForZDOMsg_5
// 1772   }
// 1773 
// 1774   // Add to the list
// 1775   pNew = (ZDO_MsgCB_t *)osal_mem_alloc( sizeof ( ZDO_MsgCB_t ) );
??ZDO_RegisterForZDOMsg_2:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0x5
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     R0,?V0 + 4
        MOV     R1,?V0 + 5
// 1776   if ( pNew )
        MOV     A,R0
        ORL     A,R1
        JZ      ??ZDO_RegisterForZDOMsg_6
// 1777   {
// 1778     pNew->taskID = taskID;
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 2
        MOVX    @DPTR,A
// 1779     pNew->clusterID = clusterID;
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine125_0 & 0xFFFF
// 1780     pNew->next = NULL;
??CrossCallReturnLabel_285:
        MOV     DPL,R0
        MOV     DPH,R1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1781     if ( zdoMsgCBs )
        MOV     DPTR,#zdoMsgCBs
        LCALL   ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_150:
        MOV     A,R2
        ORL     A,R3
        JZ      ??ZDO_RegisterForZDOMsg_7
// 1782     {
// 1783       pLast->next = pNew;
        MOV     DPL,R6
        MOV     DPH,R7
// 1784     }
??ZDO_RegisterForZDOMsg_8:
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_226:
        SJMP    ??ZDO_RegisterForZDOMsg_4
// 1785     else
// 1786       zdoMsgCBs = pNew;
??ZDO_RegisterForZDOMsg_7:
        MOV     DPTR,#zdoMsgCBs
        SJMP    ??ZDO_RegisterForZDOMsg_8
// 1787     return ( ZSuccess );
// 1788   }
// 1789   else
// 1790     return ( ZMemError );
??ZDO_RegisterForZDOMsg_6:
        MOV     R1,#0x10
??ZDO_RegisterForZDOMsg_5:
        LJMP    ?Subroutine1 & 0xFFFF
        CFI EndBlock cfiBlock651
// 1791 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine54:
        CFI Block cfiCond652 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_281
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond653 Using cfiCommon0
        CFI (cfiCond653) NoFunction
        CFI (cfiCond653) Conditional ??CrossCallReturnLabel_282
        CFI (cfiCond653) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond653) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond653) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond653) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond653) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond653) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond653) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond653) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond653) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond653) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond653) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond653) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond653) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond653) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond653) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond653) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond653) CFA_SP SP+0
        CFI (cfiCond653) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker654 Using cfiCommon1
        CFI (cfiPicker654) NoFunction
        CFI (cfiPicker654) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        CFI EndBlock cfiCond652
        CFI EndBlock cfiCond653
        CFI EndBlock cfiPicker654
        REQUIRE ??Subroutine125_0
        ; // Fall through to label ??Subroutine125_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine125_0:
        CFI Block cfiCond655 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_283
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond656 Using cfiCommon0
        CFI (cfiCond656) NoFunction
        CFI (cfiCond656) Conditional ??CrossCallReturnLabel_284
        CFI (cfiCond656) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI (cfiCond656) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI (cfiCond656) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond656) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond656) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond656) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond656) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond656) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond656) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond656) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond656) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond656) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond656) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond656) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond656) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond656) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond656) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond656) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond656) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond656) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond656) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond656) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond656) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond656) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond656) CFA_SP SP+0
        CFI (cfiCond656) CFA_XSP16 add(XSP16, 24)
        CFI Block cfiCond657 Using cfiCommon0
        CFI (cfiCond657) NoFunction
        CFI (cfiCond657) Conditional ??CrossCallReturnLabel_285
        CFI (cfiCond657) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond657) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond657) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond657) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond657) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond657) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond657) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond657) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond657) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond657) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond657) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond657) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond657) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond657) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond657) CFA_SP SP+0
        CFI (cfiCond657) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond658 Using cfiCommon0
        CFI (cfiCond658) NoFunction
        CFI (cfiCond658) Conditional ??CrossCallReturnLabel_281
        CFI (cfiCond658) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond658) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond658) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond658) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond658) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond658) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond658) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond658) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond658) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond658) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond658) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond658) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond658) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond658) CFA_SP SP+0
        CFI (cfiCond658) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond659 Using cfiCommon0
        CFI (cfiCond659) NoFunction
        CFI (cfiCond659) Conditional ??CrossCallReturnLabel_282
        CFI (cfiCond659) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond659) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond659) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond659) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond659) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond659) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond659) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond659) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond659) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond659) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond659) CFA_SP SP+0
        CFI (cfiCond659) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker660 Using cfiCommon1
        CFI (cfiPicker660) NoFunction
        CFI (cfiPicker660) Picker
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond655
        CFI EndBlock cfiCond656
        CFI EndBlock cfiCond657
        CFI EndBlock cfiCond658
        CFI EndBlock cfiCond659
        CFI EndBlock cfiPicker660
// 1792 
// 1793 /*********************************************************************
// 1794  * @fn          ZDO_RemoveRegisteredCB
// 1795  *
// 1796  * @brief       Call this function if you don't want to receive the
// 1797  *              incoming message.
// 1798  *
// 1799  * @param       taskID - Where the messages are being delivered.
// 1800  * @param       clusterID - What message?
// 1801  *
// 1802  * @return      ZSuccess - successful, ZFailure if not found
// 1803  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1804 ZStatus_t ZDO_RemoveRegisteredCB( uint8 taskID, uint16 clusterID )
ZDO_RemoveRegisteredCB:
        CFI Block cfiBlock661 Using cfiCommon0
        CFI Function ZDO_RemoveRegisteredCB
        CODE
// 1805 {
        FUNCALL ZDO_RemoveRegisteredCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
// 1806   ZDO_MsgCB_t *pList;
// 1807   ZDO_MsgCB_t *pLast = NULL;
        MOV     R0,#0x0
        MOV     R1,#0x0
// 1808 
// 1809   pList = zdoMsgCBs;
        MOV     DPTR,#zdoMsgCBs
        SJMP    ??ZDO_RemoveRegisteredCB_0
// 1810   while ( pList )
// 1811   {
// 1812     if ( pList->taskID == taskID && pList->clusterID == clusterID )
// 1813     {
// 1814       if ( pLast )
// 1815       {
// 1816         // remove this one from the linked list
// 1817         pLast->next = pList->next;
// 1818       }
// 1819       else if ( pList->next )
// 1820       {
// 1821         // remove the first one from the linked list
// 1822         zdoMsgCBs = pList->next;
// 1823       }
// 1824       else
// 1825       {
// 1826         // remove the only item from the list
// 1827         zdoMsgCBs = (ZDO_MsgCB_t *)NULL;
// 1828       }
// 1829       osal_mem_free( pList );
// 1830       return ( ZSuccess );
// 1831     }
// 1832     pLast = pList;
??ZDO_RemoveRegisteredCB_1:
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
// 1833     pList = pList->next;
        MOV     DPL,R2
        MOV     DPH,R3
??ZDO_RemoveRegisteredCB_0:
        LCALL   ??Subroutine102_0 & 0xFFFF
??CrossCallReturnLabel_151:
        MOV     A,R2
        ORL     A,R3
        JZ      ??ZDO_RemoveRegisteredCB_2
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??ZDO_RemoveRegisteredCB_1
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R4
        JNZ     ??ZDO_RemoveRegisteredCB_3
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R5
??ZDO_RemoveRegisteredCB_3:
        JNZ     ??ZDO_RemoveRegisteredCB_1
        MOV     A,R0
        ORL     A,R1
        MOV     DPL,R2
        MOV     DPH,R3
        JZ      ??ZDO_RemoveRegisteredCB_4
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_68:
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        SJMP    ??ZDO_RemoveRegisteredCB_5
??ZDO_RemoveRegisteredCB_4:
        LCALL   ??Subroutine98_0 & 0xFFFF
??CrossCallReturnLabel_136:
        MOV     DPTR,#zdoMsgCBs
        JZ      ??ZDO_RemoveRegisteredCB_6
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        SJMP    ??ZDO_RemoveRegisteredCB_5
??ZDO_RemoveRegisteredCB_6:
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
??ZDO_RemoveRegisteredCB_5:
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_mem_free
        LCALL   ??osal_mem_free?relay
        MOV     R1,#0x0
        SJMP    ??ZDO_RemoveRegisteredCB_7
// 1834   }
// 1835 
// 1836   return ( ZFailure );
??ZDO_RemoveRegisteredCB_2:
        MOV     R1,#0x1
??ZDO_RemoveRegisteredCB_7:
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock661
// 1837 }
// 1838 
// 1839 /*********************************************************************
// 1840  * @fn          ZDO_SendMsgCBs
// 1841  *
// 1842  * @brief       This function sends messages to registered tasks.
// 1843  *              Local to ZDO and shouldn't be called outside of ZDO.
// 1844  *
// 1845  * @param       inMsg - incoming message
// 1846  *
// 1847  * @return      TRUE if sent to at least 1 task, FALSE if not
// 1848  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1849 uint8 ZDO_SendMsgCBs( zdoIncomingMsg_t *inMsg )
ZDO_SendMsgCBs:
        CFI Block cfiBlock662 Using cfiCommon0
        CFI Function ZDO_SendMsgCBs
        CODE
// 1850 {
        FUNCALL ZDO_SendMsgCBs, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_SendMsgCBs, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_SendMsgCBs, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_SendMsgCBs, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 1851   uint8 ret = FALSE;
        MOV     ?V0 + 4,#0x0
// 1852   ZDO_MsgCB_t *pList = zdoMsgCBs;
        MOV     DPTR,#zdoMsgCBs
        LJMP    ??ZDO_SendMsgCBs_0 & 0xFFFF
// 1853   while ( pList )
// 1854   {
// 1855     if ( pList->clusterID == inMsg->clusterID )
??ZDO_SendMsgCBs_1:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine106_0 & 0xFFFF
??CrossCallReturnLabel_173:
        MOV     A,?V0 + 2
        ADD     A,#0xc
        LCALL   ??Subroutine126_0 & 0xFFFF
??CrossCallReturnLabel_295:
        XRL     A,R0
        JNZ     ??ZDO_SendMsgCBs_2
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_SendMsgCBs_2:
        JNZ     ??ZDO_SendMsgCBs_3
// 1856     {
// 1857       zdoIncomingMsg_t *msgPtr;
// 1858 
// 1859       // Send the address to the task
// 1860       msgPtr = (zdoIncomingMsg_t *)osal_msg_allocate( sizeof( zdoIncomingMsg_t ) + inMsg->asduLen );
        ; Setup parameters for call to function osal_msg_allocate
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_296:
        ADD     A,#0x15
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_msg_allocate?relay
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     R6,?V0 + 6
        MOV     R7,?V0 + 7
// 1861       if ( msgPtr )
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_SendMsgCBs_3
// 1862       {
// 1863         // copy struct
// 1864         osal_memcpy( msgPtr, inMsg, sizeof( zdoIncomingMsg_t ));
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0 + 4,?V0 + 2
        MOV     ?V0 + 5,?V0 + 3
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
        CFI CFA_XSP16 add(XSP16, 19)
        MOV     R4,#0x15
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_158:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
// 1865 
// 1866         if ( inMsg->asduLen )
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_297:
        JZ      ??ZDO_SendMsgCBs_4
// 1867         {
// 1868           msgPtr->asdu = (byte*)(((byte*)msgPtr) + sizeof( zdoIncomingMsg_t ));
        MOV     A,R6
        ADD     A,#0x15
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_146:
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
// 1869           osal_memcpy( msgPtr->asdu, inMsg->asdu, inMsg->asduLen );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V0 + 2
        ADD     A,#0x13
        MOV     DPL,A
        MOV     A,?V0 + 3
        LCALL   ??Subroutine100_0 & 0xFFFF
// 1870         }
??CrossCallReturnLabel_140:
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_48:
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
        CFI CFA_XSP16 add(XSP16, 19)
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_298:
        MOV     R4,A
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_159:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
// 1871 
// 1872         msgPtr->hdr.event = ZDO_CB_MSG;
??ZDO_SendMsgCBs_4:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#-0x2d
        MOVX    @DPTR,A
// 1873         osal_msg_send( pList->taskID, (uint8 *)msgPtr );
        ; Setup parameters for call to function osal_msg_send
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_msg_send?relay
// 1874         ret = TRUE;
        MOV     ?V0 + 4,#0x1
// 1875       }
// 1876     }
// 1877     pList = (ZDO_MsgCB_t *)pList->next;
??ZDO_SendMsgCBs_3:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
// 1878   }
??ZDO_SendMsgCBs_0:
        LCALL   ??Subroutine114_0 & 0xFFFF
??CrossCallReturnLabel_211:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JZ      $+5
        LJMP    ??ZDO_SendMsgCBs_1 & 0xFFFF
// 1879   return ( ret );
        MOV     R1,?V0 + 4
        LJMP    ??Subroutine104_0 & 0xFFFF
        CFI EndBlock cfiBlock662
// 1880 }
// 1881 
// 1882 /*********************************************************************
// 1883  * Incoming message processor
// 1884  */
// 1885 
// 1886 /*********************************************************************
// 1887  * @fn          ZDP_IncomingData
// 1888  *
// 1889  * @brief       This function indicates the transfer of a data PDU (ASDU)
// 1890  *              from the APS sub-layer to the ZDO.
// 1891  *
// 1892  * @param       pData - Incoming Message
// 1893  *
// 1894  * @return      none
// 1895  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1896 void ZDP_IncomingData( afIncomingMSGPacket_t *pData )
ZDP_IncomingData:
        CFI Block cfiBlock663 Using cfiCommon0
        CFI Function ZDP_IncomingData
        CODE
// 1897 {
        FUNCALL ZDP_IncomingData, ZDO_SendMsgCBs
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_IncomingData, ZDApp_InMsgCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 21
        MOV     A,#-0x15
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 33)
// 1898   uint8 x = 0;
        MOV     ?V0 + 2,#0x0
// 1899   uint8 handled;
// 1900   zdoIncomingMsg_t inMsg;
// 1901 
// 1902   inMsg.srcAddr.addrMode = Addr16Bit;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
// 1903   inMsg.srcAddr.addr.shortAddr = pData->srcAddr.addr.shortAddr;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_174:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine118_0 & 0xFFFF
// 1904   inMsg.wasBroadcast = pData->wasBroadcast;
??CrossCallReturnLabel_227:
        MOV     A,R2
        ADD     A,#0x15
        MOV     DPL,A
        MOV     A,R3
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_292:
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        POP     A
        CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1905   inMsg.clusterID = pData->clusterId;
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_175:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine118_0 & 0xFFFF
// 1906   inMsg.SecurityUse = pData->SecurityUse;
??CrossCallReturnLabel_228:
        MOV     A,R2
        ADD     A,#0x19
        MOV     DPL,A
        MOV     A,R3
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_293:
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        POP     A
        CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1907 
// 1908   inMsg.asduLen = pData->cmd.DataLength-1;
        MOV     A,R2
        ADD     A,#0x20
        MOV     DPL,A
        MOV     A,R3
        LCALL   ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_294:
        DEC     A
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        POP     A
        CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1909   inMsg.asdu = pData->cmd.Data+1;
        MOV     A,R2
        ADD     A,#0x22
        MOV     R0,A
        MOV     A,R3
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_122:
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
// 1910   inMsg.TransSeq = pData->cmd.Data[0];
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_181:
        MOVX    A,@DPTR
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        POP     A
        CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1911   inMsg.macDestAddr = pData->macDestAddr;
        MOV     A,R2
        ADD     A,#0x12
        MOV     DPL,A
        MOV     A,R3
        LCALL   ??Subroutine100_0 & 0xFFFF
??CrossCallReturnLabel_141:
        LCALL   ??Subroutine107_0 & 0xFFFF
??CrossCallReturnLabel_172:
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine118_0 & 0xFFFF
// 1912 
// 1913   handled = ZDO_SendMsgCBs( &inMsg );
??CrossCallReturnLabel_229:
        ; Setup parameters for call to function ZDO_SendMsgCBs
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDO_SendMsgCBs?relay
        MOV     A,R1
        MOV     R2,A
        SJMP    ??ZDP_IncomingData_0
// 1914 
// 1915 #if (defined MT_ZDO_CB_FUNC)
// 1916 #if !defined MT_TASK
// 1917   if (zgZdoDirectCB)
// 1918 #endif
// 1919   {
// 1920     MT_ZdoDirectCB( pData, &inMsg );
// 1921   }
// 1922 #endif
// 1923 
// 1924   while ( zdpMsgProcs[x].clusterID != 0xFFFF )
// 1925   {
// 1926     if ( zdpMsgProcs[x].clusterID == inMsg.clusterID )
// 1927     {
// 1928       zdpMsgProcs[x].pFn( &inMsg );
// 1929       return;
// 1930     }
// 1931     x++;
??ZDP_IncomingData_1:
        INC     ?V0 + 2
??ZDP_IncomingData_0:
        MOV     ?V0 + 0,?V0 + 2
        MOV     ?V0 + 1,#0x0
        MOV     A,#0x2
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     A,#zdpMsgProcs & 0xff
        ADD     A,?V0 + 0
        MOV     DPL,A
        MOV     A,#(zdpMsgProcs >> 8) & 0xff
        ADDC    A,?V0 + 1
        MOV     DPH,A
        CLR     A
        MOVC    A,@A+DPTR
        MOV     R0,A
        MOV     A,#0x1
        MOVC    A,@A+DPTR
        MOV     R1,A
        MOV     A,#-0x1
        XRL     A,R0
        JNZ     ??ZDP_IncomingData_2
        MOV     A,#-0x1
        XRL     A,R1
??ZDP_IncomingData_2:
        JZ      ??ZDP_IncomingData_3
        CLR     A
        MOVC    A,@A+DPTR
        MOV     R0,A
        MOV     A,#0x1
        MOVC    A,@A+DPTR
        MOV     R1,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDP_IncomingData_4
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDP_IncomingData_4:
        JNZ     ??ZDP_IncomingData_1
        ; Setup parameters for indirect call
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     ?V0 + 3,#0x0
        MOV     A,#0x2
        MOV     R0,#?V0 + 2
        LCALL   ?S_SHL
        MOV     A,#(zdpMsgProcs + 2) & 0xff
        ADD     A,?V0 + 2
        MOV     DPL,A
        MOV     A,#((zdpMsgProcs + 2) >> 8) & 0xff
        ADDC    A,?V0 + 3
        MOV     DPH,A
        CLR     A
        MOVC    A,@A+DPTR
        PUSH    A
        MOV     A,#0x1
        MOVC    A,@A+DPTR
        MOV     DPH,A
        POP     DPL
        LCALL   ?CALL_IND
        SJMP    ??ZDP_IncomingData_5
// 1932   }
// 1933 
// 1934   // Handle unhandled messages
// 1935   if ( !handled )
??ZDP_IncomingData_3:
        MOV     A,R2
        JNZ     ??ZDP_IncomingData_5
// 1936     ZDApp_InMsgCB( &inMsg );
        ; Setup parameters for call to function ZDApp_InMsgCB
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDApp_InMsgCB?relay
??ZDP_IncomingData_5:
        MOV     A,#0x15
        LJMP    ??Subroutine108_0 & 0xFFFF
        CFI EndBlock cfiBlock663
// 1937 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine61:
        CFI Block cfiCond664 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_296
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond665 Using cfiCommon0
        CFI (cfiCond665) NoFunction
        CFI (cfiCond665) Conditional ??CrossCallReturnLabel_297
        CFI (cfiCond665) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond665) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond665) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond665) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond665) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond665) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond665) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond665) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond665) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond665) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond665) CFA_SP SP+0
        CFI (cfiCond665) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond666 Using cfiCommon0
        CFI (cfiCond666) NoFunction
        CFI (cfiCond666) Conditional ??CrossCallReturnLabel_298
        CFI (cfiCond666) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond666) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond666) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond666) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond666) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond666) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond666) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond666) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond666) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond666) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond666) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond666) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond666) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond666) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond666) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond666) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond666) CFA_SP SP+0
        CFI (cfiCond666) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiPicker667 Using cfiCommon1
        CFI (cfiPicker667) NoFunction
        CFI (cfiPicker667) Picker
        MOV     A,?V0 + 2
        ADD     A,#0x10
        CFI EndBlock cfiCond664
        CFI EndBlock cfiCond665
        CFI EndBlock cfiCond666
        CFI EndBlock cfiPicker667
        REQUIRE ??Subroutine126_0
        ; // Fall through to label ??Subroutine126_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine126_0:
        CFI Block cfiCond668 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_295
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond669 Using cfiCommon0
        CFI (cfiCond669) NoFunction
        CFI (cfiCond669) Conditional ??CrossCallReturnLabel_296
        CFI (cfiCond669) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond669) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond669) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond669) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond669) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond669) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond669) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond669) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond669) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond669) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond669) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond669) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond669) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond669) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond669) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond669) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond669) CFA_SP SP+0
        CFI (cfiCond669) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond670 Using cfiCommon0
        CFI (cfiCond670) NoFunction
        CFI (cfiCond670) Conditional ??CrossCallReturnLabel_297
        CFI (cfiCond670) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond670) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond670) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond670) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond670) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond670) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond670) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond670) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond670) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond670) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond670) CFA_SP SP+0
        CFI (cfiCond670) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond671 Using cfiCommon0
        CFI (cfiCond671) NoFunction
        CFI (cfiCond671) Conditional ??CrossCallReturnLabel_298
        CFI (cfiCond671) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond671) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond671) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond671) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond671) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond671) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond671) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond671) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond671) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond671) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond671) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond671) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond671) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond671) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond671) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond671) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond671) CFA_SP SP+0
        CFI (cfiCond671) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiPicker672 Using cfiCommon1
        CFI (cfiPicker672) NoFunction
        CFI (cfiPicker672) Picker
        MOV     DPL,A
        MOV     A,?V0 + 3
        CFI EndBlock cfiCond668
        CFI EndBlock cfiCond669
        CFI EndBlock cfiCond670
        CFI EndBlock cfiCond671
        CFI EndBlock cfiPicker672
        REQUIRE ??Subroutine127_0
        ; // Fall through to label ??Subroutine127_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine127_0:
        CFI Block cfiCond673 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_286
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond674 Using cfiCommon0
        CFI (cfiCond674) NoFunction
        CFI (cfiCond674) Conditional ??CrossCallReturnLabel_287
        CFI (cfiCond674) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond674) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond674) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond674) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond674) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond674) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond674) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond674) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond674) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond674) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond674) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond674) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond674) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond674) CFA_SP SP+0
        CFI (cfiCond674) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond675 Using cfiCommon0
        CFI (cfiCond675) NoFunction
        CFI (cfiCond675) Conditional ??CrossCallReturnLabel_288
        CFI (cfiCond675) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond675) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond675) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond675) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond675) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond675) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond675) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond675) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond675) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond675) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond675) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond675) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond675) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond675) CFA_SP SP+0
        CFI (cfiCond675) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond676 Using cfiCommon0
        CFI (cfiCond676) NoFunction
        CFI (cfiCond676) Conditional ??CrossCallReturnLabel_289
        CFI (cfiCond676) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond676) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond676) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond676) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond676) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond676) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond676) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond676) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond676) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond676) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond676) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond676) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond676) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond676) CFA_SP SP+0
        CFI (cfiCond676) CFA_XSP16 add(XSP16, 13)
        CFI Block cfiCond677 Using cfiCommon0
        CFI (cfiCond677) NoFunction
        CFI (cfiCond677) Conditional ??CrossCallReturnLabel_290
        CFI (cfiCond677) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond677) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond677) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond677) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond677) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond677) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond677) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond677) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond677) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond677) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond677) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond677) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond677) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond677) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond677) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond677) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond677) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond677) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond677) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond677) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond677) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond677) CFA_SP SP+0
        CFI (cfiCond677) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond678 Using cfiCommon0
        CFI (cfiCond678) NoFunction
        CFI (cfiCond678) Conditional ??CrossCallReturnLabel_291
        CFI (cfiCond678) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond678) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond678) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond678) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond678) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond678) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond678) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond678) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond678) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond678) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond678) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond678) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond678) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond678) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond678) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond678) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond678) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond678) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond678) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond678) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond678) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond678) CFA_SP SP+0
        CFI (cfiCond678) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond679 Using cfiCommon0
        CFI (cfiCond679) NoFunction
        CFI (cfiCond679) Conditional ??CrossCallReturnLabel_292
        CFI (cfiCond679) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond679) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond679) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond679) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond679) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond679) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond679) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond679) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond679) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond679) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond679) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond679) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond679) CFA_SP SP+0
        CFI (cfiCond679) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiCond680 Using cfiCommon0
        CFI (cfiCond680) NoFunction
        CFI (cfiCond680) Conditional ??CrossCallReturnLabel_293
        CFI (cfiCond680) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond680) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond680) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond680) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond680) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond680) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond680) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond680) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond680) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond680) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond680) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond680) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond680) CFA_SP SP+0
        CFI (cfiCond680) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiCond681 Using cfiCommon0
        CFI (cfiCond681) NoFunction
        CFI (cfiCond681) Conditional ??CrossCallReturnLabel_294
        CFI (cfiCond681) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond681) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond681) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond681) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond681) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond681) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond681) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond681) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond681) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond681) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond681) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond681) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond681) CFA_SP SP+0
        CFI (cfiCond681) CFA_XSP16 add(XSP16, 33)
        CFI Block cfiCond682 Using cfiCommon0
        CFI (cfiCond682) NoFunction
        CFI (cfiCond682) Conditional ??CrossCallReturnLabel_295
        CFI (cfiCond682) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond682) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond682) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond682) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond682) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond682) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond682) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond682) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond682) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond682) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond682) CFA_SP SP+0
        CFI (cfiCond682) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond683 Using cfiCommon0
        CFI (cfiCond683) NoFunction
        CFI (cfiCond683) Conditional ??CrossCallReturnLabel_296
        CFI (cfiCond683) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond683) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond683) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond683) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond683) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond683) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond683) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond683) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond683) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond683) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond683) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond683) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond683) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond683) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond683) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond683) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond683) CFA_SP SP+0
        CFI (cfiCond683) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond684 Using cfiCommon0
        CFI (cfiCond684) NoFunction
        CFI (cfiCond684) Conditional ??CrossCallReturnLabel_297
        CFI (cfiCond684) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond684) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond684) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond684) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond684) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond684) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond684) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond684) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond684) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond684) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond684) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond684) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond684) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond684) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond684) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond684) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond684) CFA_SP SP+0
        CFI (cfiCond684) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond685 Using cfiCommon0
        CFI (cfiCond685) NoFunction
        CFI (cfiCond685) Conditional ??CrossCallReturnLabel_298
        CFI (cfiCond685) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond685) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond685) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond685) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond685) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond685) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond685) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond685) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond685) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond685) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond685) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond685) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond685) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond685) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond685) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond685) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond685) CFA_SP SP+0
        CFI (cfiCond685) CFA_XSP16 add(XSP16, 19)
        CFI Block cfiPicker686 Using cfiCommon1
        CFI (cfiPicker686) NoFunction
        CFI (cfiPicker686) Picker
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond673
        CFI EndBlock cfiCond674
        CFI EndBlock cfiCond675
        CFI EndBlock cfiCond676
        CFI EndBlock cfiCond677
        CFI EndBlock cfiCond678
        CFI EndBlock cfiCond679
        CFI EndBlock cfiCond680
        CFI EndBlock cfiCond681
        CFI EndBlock cfiCond682
        CFI EndBlock cfiCond683
        CFI EndBlock cfiCond684
        CFI EndBlock cfiCond685
        CFI EndBlock cfiPicker686

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for ZDP_TmpBuf>`:
        DATA16
        DW ZDP_Buf + 1H

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??fillAndSend?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    fillAndSend

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_SendData?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_SendData

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_NWKAddrOfInterestReq?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_NWKAddrOfInterestReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_NwkAddrReq?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_NwkAddrReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_IEEEAddrReq?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_IEEEAddrReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_MatchDescReq?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_MatchDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_SimpleDescReq?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_SimpleDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_UserDescSet?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_UserDescSet

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_ServerDiscReq?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_ServerDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_DeviceAnnce?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_DeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zdpProcessAddrReq?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    zdpProcessAddrReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_NodeDescMsg?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_NodeDescMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_PowerDescMsg?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_PowerDescMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_SimpleDescMsg?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_SimpleDescMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_EPRsp?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_EPRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_UserDescRsp?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_UserDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_ServerDiscRsp?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_ServerDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_GenericRsp?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_GenericRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_EndDeviceBindReq?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_EndDeviceBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_BindUnbindReq?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_BindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_MgmtNwkDiscReq?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_MgmtNwkDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_MgmtDirectJoinReq?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_MgmtDirectJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_MgmtPermitJoinReq?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_MgmtPermitJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_MgmtLeaveReq?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_MgmtLeaveReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_MgmtNwkUpdateReq?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_MgmtNwkUpdateReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_MgmtNwkDiscRsp?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_MgmtNwkDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_MgmtLqiRsp?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_MgmtLqiRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_MgmtRtgRsp?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_MgmtRtgRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_MgmtBindRsp?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_MgmtBindRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_MgmtNwkUpdateNotify?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_MgmtNwkUpdateNotify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_RegisterForZDOMsg?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDO_RegisterForZDOMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_RemoveRegisteredCB?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDO_RemoveRegisteredCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_SendMsgCBs?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDO_SendMsgCBs

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDP_IncomingData?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ZDP_IncomingData

        END
// 1938 
// 1939 /*********************************************************************
// 1940 *********************************************************************/
// 1941 
// 
// 6 085 bytes in segment BANKED_CODE
//   204 bytes in segment BANK_RELAYS
//    41 bytes in segment CODE_C
//     2 bytes in segment XDATA_I
//     2 bytes in segment XDATA_ID
//    84 bytes in segment XDATA_Z
// 
// 6 332 bytes of CODE  memory
//    86 bytes of XDATA memory
//
//Errors: none
//Warnings: none
