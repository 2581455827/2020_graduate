###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         04/Dec/2019  15:20:20 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Components\hal\common\hal_drivers.c             #
#    Command line       =  -f C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º #
#                          ˛≤ø∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\Tools\CC2530DB\f8wCoord.cfg (-DCPU32MHZ    #
#                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRU #
#                          E -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8       #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º #
#                          ˛≤ø∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\. #
#                          .\..\..\Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO  #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 C:\Users\25814\Desktop\2020 #
#                          ±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø∑÷\Components\hal\common\ha #
#                          l_drivers.c -D ZAPP_P1 -D MT_TASK -D MT_SYS_FUNC   #
#                          -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -lC          #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\Coor #
#                          dinatorEB\List\ -lA C:\Users\25814\Desktop\2020±œ… #
#                          Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø∑÷\Projects\zstack\Samples\Sam #
#                          pleApp\CC2530DB\CoordinatorEB\List\                #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\Coor #
#                          dinatorEB\Obj\ -e --no_code_motion --debug         #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I C:\Users\25814\Desktop\202 #
#                          0±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø∑÷\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\ -I C:\Users\25814\Desktop\202 #
#                          0±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø∑÷\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\Source\ -I                  #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\ZMain\TI2530DB\ -I C:\Users\25814\Desktop\202 #
#                          0±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø∑÷\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\..\..\Components\hal\ #
#                          include\ -I C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô #
#                          _—¯÷Ì\”≤º˛≤ø∑÷\Projects\zstack\Samples\SampleApp\C #
#                          C2530DB\..\..\..\..\..\Components\hal\target\CC253 #
#                          0EB\ -I C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷ #
#                          Ì\”≤º˛≤ø∑÷\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\Components\mac\include\ -I      #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\mac\high_level\ -I           #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\mac\low_level\srf04\ -I      #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\mac\low_level\srf04\single_c #
#                          hip\ -I C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷ #
#                          Ì\”≤º˛≤ø∑÷\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\Components\mt\ -I               #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\osal\include\ -I             #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\services\saddr\ -I           #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\services\sdata\ -I           #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\af\ -I                 #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\nwk\ -I                #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\sapi\ -I               #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\sec\ -I                #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\sys\ -I                #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\zdo\ -I                #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\zmac\ -I                     #
#                          C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\..\. #
#                          .\..\..\..\Components\zmac\f8w\ -Ohz               #
#    List file          =  C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\Coor #
#                          dinatorEB\List\hal_drivers.lst                     #
#    Object file        =  C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø #
#                          ∑÷\Projects\zstack\Samples\SampleApp\CC2530DB\Coor #
#                          dinatorEB\Obj\hal_drivers.r51                      #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\25814\Desktop\2020±œ…Ë\Õı–¬»Ô_—¯÷Ì\”≤º˛≤ø∑÷\Components\hal\common\hal_drivers.c
      1          /**************************************************************************************************
      2            Filename:       hal_drivers.c
      3            Revised:        $Date: 2007-07-06 10:42:24 -0700 (Fri, 06 Jul 2007) $
      4            Revision:       $Revision: 13579 $
      5          
      6            Description:    This file contains the interface to the Drivers Service.
      7          
      8          
      9            Copyright 2005-2010 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED ìAS ISî WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com.
     38          **************************************************************************************************/
     39          
     40          
     41          /**************************************************************************************************
     42           *                                            INCLUDES
     43           **************************************************************************************************/
     44          #include "hal_types.h"
     45          #include "OSAL.h"
     46          #include "hal_drivers.h"
     47          #include "hal_adc.h"
     48          #if (defined HAL_DMA) && (HAL_DMA == TRUE)
     49            #include "hal_dma.h"
     50          #endif
     51          #include "hal_key.h"
     52          #include "hal_lcd.h"
     53          #include "hal_led.h"
     54          #include "hal_timer.h"
     55          #include "hal_uart.h"
     56          #include "hal_sleep.h"
     57          #if (defined HAL_AES) && (HAL_AES == TRUE)
     58            #include "hal_aes.h"
     59          #endif
     60          
     61          #if (defined HAL_SPI) && (HAL_SPI == TRUE)
     62            #include "hal_spi.h"
     63          #endif
     64          #if (defined HAL_HID) && (HAL_HID == TRUE)
     65            #include "usb_hid.h"
     66          #endif
     67          
     68          #ifdef CC2591_COMPRESSION_WORKAROUND
     69            #include "mac_rx.h"
     70          #endif
     71          
     72          /**************************************************************************************************
     73           *                                            MACROS
     74           **************************************************************************************************/
     75          
     76          
     77          
     78          /**************************************************************************************************
     79           *                                          CONSTANTS
     80           **************************************************************************************************/
     81          
     82          
     83          /**************************************************************************************************
     84           *                                          TYPEDEFS
     85           **************************************************************************************************/
     86          
     87          
     88          /**************************************************************************************************
     89           *                                      GLOBAL VARIABLES
     90           **************************************************************************************************/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     91          uint8 Hal_TaskID;
   \                     Hal_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     92          
     93          extern void HalLedUpdate( void ); /* Notes: This for internal only so it shouldn't be in hal_led.h */
     94          
     95          /**************************************************************************************************
     96           *                                      FUNCTIONS - API
     97           **************************************************************************************************/
     98          
     99          /**************************************************************************************************
    100           * @fn      Hal_Init
    101           *
    102           * @brief   Hal Initialization function.
    103           *
    104           * @param   task_id - Hal TaskId
    105           *
    106           * @return  None
    107           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    108          void Hal_Init( uint8 task_id )
   \                     Hal_Init:
    109          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    110            /* Register task ID */
    111            Hal_TaskID = task_id;
   \   000004   E9           MOV     A,R1
   \   000005   90....       MOV     DPTR,#Hal_TaskID
   \   000008   F0           MOVX    @DPTR,A
    112            
    113          #ifdef CC2591_COMPRESSION_WORKAROUND  
    114            osal_start_reload_timer( Hal_TaskID, PERIOD_RSSI_RESET_EVT, PERIOD_RSSI_RESET_TIMEOUT );
    115          #endif  
    116          }
   \   000009                REQUIRE ?Subroutine0
   \   000009                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
    117          
    118          /**************************************************************************************************
    119           * @fn      Hal_DriverInit
    120           *
    121           * @brief   Initialize HW - These need to be initialized before anyone.
    122           *
    123           * @param   task_id - Hal TaskId
    124           *
    125           * @return  None
    126           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    127          void HalDriverInit (void)
   \                     HalDriverInit:
    128          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    129            /* TIMER */
    130          #if (defined HAL_TIMER) && (HAL_TIMER == TRUE)
    131            #error "The hal timer driver module is removed."
    132          #endif
    133          
    134            /* ADC */
    135          #if (defined HAL_ADC) && (HAL_ADC == TRUE)
    136            HalAdcInit();
   \   000004                ; Setup parameters for call to function HalAdcInit
   \   000004   12....       LCALL   ??HalAdcInit?relay
    137          #endif
    138          
    139            /* DMA */
    140          #if (defined HAL_DMA) && (HAL_DMA == TRUE)
    141            // Must be called before the init call to any module that uses DMA.
    142            HalDmaInit();
   \   000007                ; Setup parameters for call to function HalDmaInit
   \   000007   12....       LCALL   ??HalDmaInit?relay
    143          #endif
    144          
    145            /* AES */
    146          #if (defined HAL_AES) && (HAL_AES == TRUE)
    147            HalAesInit();
   \   00000A                ; Setup parameters for call to function HalAesInit
   \   00000A   12....       LCALL   ??HalAesInit?relay
    148          #endif
    149          
    150            /* LCD */
    151          #if (defined HAL_LCD) && (HAL_LCD == TRUE)
    152            HalLcdInit();
   \   00000D                ; Setup parameters for call to function HalLcdInit
   \   00000D   12....       LCALL   ??HalLcdInit?relay
    153          #endif
    154          
    155            /* LED */
    156          #if (defined HAL_LED) && (HAL_LED == TRUE)
    157            HalLedInit();
   \   000010                ; Setup parameters for call to function HalLedInit
   \   000010   12....       LCALL   ??HalLedInit?relay
    158          #endif
    159          
    160            /* UART */
    161          #if (defined HAL_UART) && (HAL_UART == TRUE)
    162            HalUARTInit();
   \   000013                ; Setup parameters for call to function HalUARTInit
   \   000013   12....       LCALL   ??HalUARTInit?relay
    163          #endif
    164          
    165            /* KEY */
    166          #if (defined HAL_KEY) && (HAL_KEY == TRUE)
    167            HalKeyInit();
   \   000016                ; Setup parameters for call to function HalKeyInit
   \   000016   12....       LCALL   ??HalKeyInit?relay
    168          #endif
    169          
    170            /* SPI */
    171          #if (defined HAL_SPI) && (HAL_SPI == TRUE)
    172            HalSpiInit();
    173          #endif
    174          
    175            /* HID */
    176          #if (defined HAL_HID) && (HAL_HID == TRUE)
    177            usbHidInit();
    178          #endif
    179          }
   \   000019   80..         SJMP    ?Subroutine0
    180          
    181          
    182          /**************************************************************************************************
    183           * @fn      Hal_ProcessEvent
    184           *
    185           * @brief   Hal Process Event
    186           *
    187           * @param   task_id - Hal TaskId
    188           *          events - events
    189           *
    190           * @return  None
    191           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    192          uint16 Hal_ProcessEvent( uint8 task_id, uint16 events )
   \                     Hal_ProcessEvent:
    193          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    194            uint8 *msgPtr;
    195            
    196            (void)task_id;  // Intentionally unreferenced parameter
    197          
    198            if ( events & SYS_EVENT_MSG )
   \   000009   5480         ANL     A,#0x80
   \   00000B   6019         JZ      ??Hal_ProcessEvent_0
    199            {
    200              msgPtr = osal_msg_receive(Hal_TaskID);
   \   00000D                ; Setup parameters for call to function osal_msg_receive
   \   00000D   8003         SJMP    ??Hal_ProcessEvent_1
    201          
    202              while (msgPtr)
    203              {
    204                /* Do something here - for now, just deallocate the msg and move on */
    205          
    206                /* De-allocate */
    207                osal_msg_deallocate( msgPtr );
   \                     ??Hal_ProcessEvent_2:
   \   00000F                ; Setup parameters for call to function osal_msg_deallocate
   \   00000F   12....       LCALL   ??osal_msg_deallocate?relay
    208                /* Next */
    209                msgPtr = osal_msg_receive( Hal_TaskID );
   \   000012                ; Setup parameters for call to function osal_msg_receive
   \                     ??Hal_ProcessEvent_1:
   \   000012   90....       MOV     DPTR,#Hal_TaskID
   \   000015   E0           MOVX    A,@DPTR
   \   000016   F9           MOV     R1,A
   \   000017   12....       LCALL   ??osal_msg_receive?relay
    210              }
   \   00001A   EA           MOV     A,R2
   \   00001B   4B           ORL     A,R3
   \   00001C   70F1         JNZ     ??Hal_ProcessEvent_2
    211              return events ^ SYS_EVENT_MSG;
   \   00001E   EE           MOV     A,R6
   \   00001F   FA           MOV     R2,A
   \   000020   EF           MOV     A,R7
   \   000021   6480         XRL     A,#0x80
   \                     ??Hal_ProcessEvent_3:
   \   000023   FB           MOV     R3,A
   \   000024   8036         SJMP    ??Hal_ProcessEvent_4
    212            }
    213          
    214            if ( events & HAL_LED_BLINK_EVENT )
   \                     ??Hal_ProcessEvent_0:
   \   000026   EE           MOV     A,R6
   \   000027   5402         ANL     A,#0x2
   \   000029   600A         JZ      ??Hal_ProcessEvent_5
    215            {
    216          #if (defined (BLINK_LEDS)) && (HAL_LED == TRUE)
    217              HalLedUpdate();
   \   00002B                ; Setup parameters for call to function HalLedUpdate
   \   00002B   12....       LCALL   ??HalLedUpdate?relay
    218          #endif /* BLINK_LEDS && HAL_LED */
    219              return events ^ HAL_LED_BLINK_EVENT;
   \   00002E   EE           MOV     A,R6
   \   00002F   6402         XRL     A,#0x2
   \                     ??Hal_ProcessEvent_6:
   \   000031   FA           MOV     R2,A
   \   000032   EF           MOV     A,R7
   \   000033   80EE         SJMP    ??Hal_ProcessEvent_3
    220            }
    221          
    222            if (events & HAL_KEY_EVENT)
   \                     ??Hal_ProcessEvent_5:
   \   000035   EE           MOV     A,R6
   \   000036   A2E0         MOV     C,0xE0 /* A   */.0
   \   000038   501E         JNC     ??Hal_ProcessEvent_7
    223            {
    224          
    225          #if (defined HAL_KEY) && (HAL_KEY == TRUE)
    226              /* Check for keys */
    227              HalKeyPoll();
   \   00003A                ; Setup parameters for call to function HalKeyPoll
   \   00003A   12....       LCALL   ??HalKeyPoll?relay
    228          
    229              /* if interrupt disabled, do next polling */
    230              if (!Hal_KeyIntEnable)
   \   00003D   90....       MOV     DPTR,#Hal_KeyIntEnable
   \   000040   E0           MOVX    A,@DPTR
   \   000041   7010         JNZ     ??Hal_ProcessEvent_8
    231              {
    232                osal_start_timerEx( Hal_TaskID, HAL_KEY_EVENT, 100);
   \   000043                ; Setup parameters for call to function osal_start_timerEx
   \   000043   7C64         MOV     R4,#0x64
   \   000045   7D00         MOV     R5,#0x0
   \   000047   7A01         MOV     R2,#0x1
   \   000049   7B00         MOV     R3,#0x0
   \   00004B   90....       MOV     DPTR,#Hal_TaskID
   \   00004E   E0           MOVX    A,@DPTR
   \   00004F   F9           MOV     R1,A
   \   000050   12....       LCALL   ??osal_start_timerEx?relay
    233              }
    234          #endif // HAL_KEY
    235          
    236              return events ^ HAL_KEY_EVENT;
   \                     ??Hal_ProcessEvent_8:
   \   000053   EE           MOV     A,R6
   \   000054   6401         XRL     A,#0x1
   \   000056   80D9         SJMP    ??Hal_ProcessEvent_6
    237            }
    238          
    239          #ifdef POWER_SAVING
    240            if ( events & HAL_SLEEP_TIMER_EVENT )
    241            {
    242              halRestoreSleepLevel();
    243              return events ^ HAL_SLEEP_TIMER_EVENT;
    244            }
    245          #endif
    246          
    247          #ifdef CC2591_COMPRESSION_WORKAROUND
    248            if ( events & PERIOD_RSSI_RESET_EVT )
    249            {
    250              macRxResetRssi();
    251              return (events ^ PERIOD_RSSI_RESET_EVT);
    252            }
    253          #endif  
    254            
    255            /* Nothing interested, discard the message */
    256            return 0;
   \                     ??Hal_ProcessEvent_7:
   \   000058   7A00         MOV     R2,#0x0
   \   00005A   7B00         MOV     R3,#0x0
   \                     ??Hal_ProcessEvent_4:
   \   00005C   7F02         MOV     R7,#0x2
   \   00005E   02....       LJMP    ?BANKED_LEAVE_XDATA
    257          
    258          }
    259          
    260          /**************************************************************************************************
    261           * @fn      Hal_ProcessPoll
    262           *
    263           * @brief   This routine will be called by OSAL to poll UART, TIMER...
    264           *
    265           * @param   task_id - Hal TaskId
    266           *
    267           * @return  None
    268           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    269          void Hal_ProcessPoll ()
   \                     Hal_ProcessPoll:
    270          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    271          
    272            /* Timer Poll */
    273          #if (defined HAL_TIMER) && (HAL_TIMER == TRUE)
    274            #error "The hal timer driver module is removed."
    275          #endif
    276          
    277            /* UART Poll */
    278          #if (defined HAL_UART) && (HAL_UART == TRUE)
    279            HalUARTPoll();
   \   000004                ; Setup parameters for call to function HalUARTPoll
   \   000004   12....       LCALL   ??HalUARTPoll?relay
    280          #endif  
    281          
    282            /* SPI Poll */
    283          #if (defined HAL_SPI) && (HAL_SPI == TRUE)
    284            HalSpiPoll();
    285          #endif
    286          
    287            /* HID poll */
    288          #if (defined HAL_HID) && (HAL_HID == TRUE)
    289            usbHidProcessEvents();
    290          #endif
    291            
    292          #if defined( POWER_SAVING )
    293            /* Allow sleep before the next OSAL event loop */
    294            ALLOW_SLEEP_MODE();
    295          #endif
    296          
    297          }
   \   000007   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Hal_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Hal_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalDriverInit?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalDriverInit

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Hal_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Hal_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Hal_ProcessPoll?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Hal_ProcessPoll
    298          
    299          
    300          /**************************************************************************************************
    301          **************************************************************************************************/
    302          

   Maximum stack usage in bytes:

     Function                 ISTACK PSTACK XSTACK
     --------                 ------ ------ ------
     HalDriverInit                2      0      0
       -> HalAdcInit              4      0      0
       -> HalDmaInit              4      0      0
       -> HalAesInit              4      0      0
       -> HalLcdInit              4      0      0
       -> HalLedInit              4      0      0
       -> HalUARTInit             4      0      0
       -> HalKeyInit              4      0      0
     Hal_Init                     2      0      0
     Hal_ProcessEvent             0      0     10
       -> osal_msg_receive        0      0     20
       -> osal_msg_deallocate     0      0     20
       -> osal_msg_receive        0      0     20
       -> HalLedUpdate            0      0     20
       -> HalKeyPoll              0      0     20
       -> osal_start_timerEx      0      0     20
     Hal_ProcessPoll              2      0      0
       -> HalUARTPoll             4      0      0


   Segment part sizes:

     Function/Label           Bytes
     --------------           -----
     Hal_TaskID                  1
     Hal_Init                    9
     ?Subroutine0                7
     HalDriverInit              27
     Hal_ProcessEvent           97
     Hal_ProcessPoll            10
     ??Hal_Init?relay            6
     ??HalDriverInit?relay       6
     ??Hal_ProcessEvent?relay    6
     ??Hal_ProcessPoll?relay     6

 
 150 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   1 byte  in segment XDATA_Z
 
 174 bytes of CODE  memory
   1 byte  of XDATA memory

Errors: none
Warnings: none
